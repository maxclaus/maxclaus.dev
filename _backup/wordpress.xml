<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.9.1" created="2014-08-01 11:59" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Max Claus Nunes</title>
	<link>http://blog.maxcnunes.net</link>
	<description>software developer</description>
	<pubDate>Fri, 01 Aug 2014 11:59:17 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://blog.maxcnunes.net</wp:base_site_url>
	<wp:base_blog_url>http://blog.maxcnunes.net</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>maxcnunes</wp:author_login><wp:author_email>maxcnunes@gmail.com</wp:author_email><wp:author_display_name><![CDATA[maxcnunes]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>2</wp:term_id><wp:category_nicename>dot-net</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[.NET]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>aleatorio</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Aleatório]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>aspnet</wp:category_nicename><wp:category_parent>dot-net</wp:category_parent><wp:cat_name><![CDATA[ASP.NET]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>bancodedados</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Banco de Dados]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>csharpt</wp:category_nicename><wp:category_parent>dot-net</wp:category_parent><wp:cat_name><![CDATA[C#]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>dataset-tipado</wp:category_nicename><wp:category_parent>dot-net</wp:category_parent><wp:cat_name><![CDATA[DataSet Tipado]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>design-patterns</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Design Patterns]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>172</wp:term_id><wp:category_nicename>docker</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Docker]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>erro</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Erro]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>git</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Git]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>js</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[JavaScript]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>12</wp:term_id><wp:category_nicename>jquery</wp:category_nicename><wp:category_parent>js</wp:category_parent><wp:cat_name><![CDATA[JQuery]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>13</wp:term_id><wp:category_nicename>knockout</wp:category_nicename><wp:category_parent>js</wp:category_parent><wp:cat_name><![CDATA[Knockout]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>14</wp:term_id><wp:category_nicename>linq</wp:category_nicename><wp:category_parent>dot-net</wp:category_parent><wp:cat_name><![CDATA[LINQ]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>15</wp:term_id><wp:category_nicename>linux</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Linux]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>16</wp:term_id><wp:category_nicename>mvc</wp:category_nicename><wp:category_parent>dot-net</wp:category_parent><wp:cat_name><![CDATA[MVC]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>17</wp:term_id><wp:category_nicename>mysql</wp:category_nicename><wp:category_parent>bancodedados</wp:category_parent><wp:cat_name><![CDATA[MySQL]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>160</wp:term_id><wp:category_nicename>nodejs</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Nodejs]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>168</wp:term_id><wp:category_nicename>npm</wp:category_nicename><wp:category_parent>js</wp:category_parent><wp:cat_name><![CDATA[npm]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>18</wp:term_id><wp:category_nicename>palestra</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Palestra]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>19</wp:term_id><wp:category_nicename>python</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Python]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>20</wp:term_id><wp:category_nicename>ruby</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Ruby]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>21</wp:term_id><wp:category_nicename>sharepoint</wp:category_nicename><wp:category_parent>dot-net</wp:category_parent><wp:cat_name><![CDATA[SharePoint]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>159</wp:term_id><wp:category_nicename>shell-2</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Shell]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>157</wp:term_id><wp:category_nicename>spa</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[SPA]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>22</wp:term_id><wp:category_nicename>sql</wp:category_nicename><wp:category_parent>bancodedados</wp:category_parent><wp:cat_name><![CDATA[SQL]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>23</wp:term_id><wp:category_nicename>uml</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[UML]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>161</wp:term_id><wp:category_nicename>vagrant</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[vagrant]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>164</wp:term_id><wp:category_nicename>vim</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[VIM]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>24</wp:term_id><wp:category_nicename>wcf</wp:category_nicename><wp:category_parent>dot-net</wp:category_parent><wp:cat_name><![CDATA[WCF]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>25</wp:term_id><wp:category_nicename>rails</wp:category_nicename><wp:category_parent>ruby</wp:category_parent><wp:cat_name><![CDATA[Rails]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>alert</wp:tag_slug><wp:tag_name><![CDATA[alert]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>aletorio</wp:tag_slug><wp:tag_name><![CDATA[aletorio]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>api</wp:tag_slug><wp:tag_name><![CDATA[api]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>aplicacao</wp:tag_slug><wp:tag_name><![CDATA[aplicaÃ§Ã£o]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>apresetacao</wp:tag_slug><wp:tag_name><![CDATA[apresetação]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>asp-net</wp:tag_slug><wp:tag_name><![CDATA[asp.net]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>atributo</wp:tag_slug><wp:tag_name><![CDATA[atributo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>banco</wp:tag_slug><wp:tag_name><![CDATA[banco]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>bash</wp:tag_slug><wp:tag_name><![CDATA[bash]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>bibliotecas</wp:tag_slug><wp:tag_name><![CDATA[bibliotecas]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>bind</wp:tag_slug><wp:tag_name><![CDATA[bind]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>c</wp:tag_slug><wp:tag_name><![CDATA[c#]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug>ci</wp:tag_slug><wp:tag_name><![CDATA[CI]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>class</wp:tag_slug><wp:tag_name><![CDATA[class]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>classe</wp:tag_slug><wp:tag_name><![CDATA[classe]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>client-side</wp:tag_slug><wp:tag_name><![CDATA[client-side]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug>cnpj</wp:tag_slug><wp:tag_name><![CDATA[cnpj]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug>code-kata</wp:tag_slug><wp:tag_name><![CDATA[code kata]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug>comando</wp:tag_slug><wp:tag_name><![CDATA[comando]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>158</wp:term_id><wp:tag_slug>command-line</wp:tag_slug><wp:tag_name><![CDATA[command line]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug>continuous-integration</wp:tag_slug><wp:tag_name><![CDATA[Continuous Integration]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>convert</wp:tag_slug><wp:tag_name><![CDATA[convert]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>47</wp:term_id><wp:tag_slug>converter</wp:tag_slug><wp:tag_name><![CDATA[converter]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>48</wp:term_id><wp:tag_slug>cpf</wp:tag_slug><wp:tag_name><![CDATA[cpf]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>49</wp:term_id><wp:tag_slug>customerrors</wp:tag_slug><wp:tag_name><![CDATA[customErrors]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>50</wp:term_id><wp:tag_slug>dados</wp:tag_slug><wp:tag_name><![CDATA[dados]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>51</wp:term_id><wp:tag_slug>data</wp:tag_slug><wp:tag_name><![CDATA[data]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>52</wp:term_id><wp:tag_slug>data-base</wp:tag_slug><wp:tag_name><![CDATA[data base]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>53</wp:term_id><wp:tag_slug>dataset</wp:tag_slug><wp:tag_name><![CDATA[dataset]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>54</wp:term_id><wp:tag_slug>debug</wp:tag_slug><wp:tag_name><![CDATA[debug]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>55</wp:term_id><wp:tag_slug>deploy</wp:tag_slug><wp:tag_name><![CDATA[deploy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>56</wp:term_id><wp:tag_slug>desenvolvimento</wp:tag_slug><wp:tag_name><![CDATA[desenvolvimento]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>57</wp:term_id><wp:tag_slug>design-pattern</wp:tag_slug><wp:tag_name><![CDATA[Design Pattern]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>58</wp:term_id><wp:tag_slug>dialog-save</wp:tag_slug><wp:tag_name><![CDATA[dialog save]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>59</wp:term_id><wp:tag_slug>dictionary</wp:tag_slug><wp:tag_name><![CDATA[dictionary]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>156</wp:term_id><wp:tag_slug>digitalocean</wp:tag_slug><wp:tag_name><![CDATA[digitalocean]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>60</wp:term_id><wp:tag_slug>diretororio</wp:tag_slug><wp:tag_name><![CDATA[diretororio]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>172</wp:term_id><wp:tag_slug>docker</wp:tag_slug><wp:tag_name><![CDATA[Docker]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>173</wp:term_id><wp:tag_slug>dockerfile</wp:tag_slug><wp:tag_name><![CDATA[Dockerfile]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>61</wp:term_id><wp:tag_slug>dos</wp:tag_slug><wp:tag_name><![CDATA[dos]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>62</wp:term_id><wp:tag_slug>erro-2</wp:tag_slug><wp:tag_name><![CDATA[erro]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>169</wp:term_id><wp:tag_slug>error</wp:tag_slug><wp:tag_name><![CDATA[error]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug>erwin</wp:tag_slug><wp:tag_name><![CDATA[erwin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug>esconder</wp:tag_slug><wp:tag_name><![CDATA[esconder]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug>excluir</wp:tag_slug><wp:tag_name><![CDATA[excluir]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug>expressao</wp:tag_slug><wp:tag_name><![CDATA[expressÃ£o]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug>expression</wp:tag_slug><wp:tag_name><![CDATA[expression]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug>failed</wp:tag_slug><wp:tag_name><![CDATA[Failed]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>69</wp:term_id><wp:tag_slug>ferramentas</wp:tag_slug><wp:tag_name><![CDATA[ferramentas]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>70</wp:term_id><wp:tag_slug>flask</wp:tag_slug><wp:tag_name><![CDATA[flask]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>71</wp:term_id><wp:tag_slug>generate</wp:tag_slug><wp:tag_name><![CDATA[generate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug>gerar-banco</wp:tag_slug><wp:tag_name><![CDATA[gerar banco]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug>git-2</wp:tag_slug><wp:tag_name><![CDATA[git]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug>github</wp:tag_slug><wp:tag_name><![CDATA[github]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>75</wp:term_id><wp:tag_slug>google-map</wp:tag_slug><wp:tag_name><![CDATA[google map]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug>gridview</wp:tag_slug><wp:tag_name><![CDATA[gridview]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>77</wp:term_id><wp:tag_slug>heranca</wp:tag_slug><wp:tag_name><![CDATA[herança]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>78</wp:term_id><wp:tag_slug>heroku</wp:tag_slug><wp:tag_name><![CDATA[heroku]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>79</wp:term_id><wp:tag_slug>hidden</wp:tag_slug><wp:tag_name><![CDATA[hidden]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>80</wp:term_id><wp:tag_slug>hora</wp:tag_slug><wp:tag_name><![CDATA[hora]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>81</wp:term_id><wp:tag_slug>imprimir</wp:tag_slug><wp:tag_name><![CDATA[imprimir]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>82</wp:term_id><wp:tag_slug>javascript</wp:tag_slug><wp:tag_name><![CDATA[javascript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug>jquery</wp:tag_slug><wp:tag_name><![CDATA[JQuery]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>83</wp:term_id><wp:tag_slug>json</wp:tag_slug><wp:tag_name><![CDATA[JSON]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>84</wp:term_id><wp:tag_slug>key</wp:tag_slug><wp:tag_name><![CDATA[key]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>85</wp:term_id><wp:tag_slug>knockout-2</wp:tag_slug><wp:tag_name><![CDATA[knockout]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>86</wp:term_id><wp:tag_slug>linq-2</wp:tag_slug><wp:tag_name><![CDATA[linq]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>linux</wp:tag_slug><wp:tag_name><![CDATA[Linux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>87</wp:term_id><wp:tag_slug>list</wp:tag_slug><wp:tag_name><![CDATA[list]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>88</wp:term_id><wp:tag_slug>lista</wp:tag_slug><wp:tag_name><![CDATA[lista]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>163</wp:term_id><wp:tag_slug>mac</wp:tag_slug><wp:tag_name><![CDATA[Mac]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>89</wp:term_id><wp:tag_slug>mensagens</wp:tag_slug><wp:tag_name><![CDATA[mensagens]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>90</wp:term_id><wp:tag_slug>menuitemtemplate</wp:tag_slug><wp:tag_name><![CDATA[MenuItemTemplate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>91</wp:term_id><wp:tag_slug>metadata</wp:tag_slug><wp:tag_name><![CDATA[metadata]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>92</wp:term_id><wp:tag_slug>metadatatype</wp:tag_slug><wp:tag_name><![CDATA[metadatatype]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>93</wp:term_id><wp:tag_slug>metodo</wp:tag_slug><wp:tag_name><![CDATA[metodo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>94</wp:term_id><wp:tag_slug>mvc-2</wp:tag_slug><wp:tag_name><![CDATA[mvc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>mysql</wp:tag_slug><wp:tag_name><![CDATA[MySQL]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>168</wp:term_id><wp:tag_slug>npm</wp:tag_slug><wp:tag_name><![CDATA[npm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>170</wp:term_id><wp:tag_slug>nvidia</wp:tag_slug><wp:tag_name><![CDATA[nvidia]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>171</wp:term_id><wp:tag_slug>nvs-4200</wp:tag_slug><wp:tag_name><![CDATA[nvs 4200]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>95</wp:term_id><wp:tag_slug>objeto</wp:tag_slug><wp:tag_name><![CDATA[objeto]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>96</wp:term_id><wp:tag_slug>oop</wp:tag_slug><wp:tag_name><![CDATA[OOP]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>97</wp:term_id><wp:tag_slug>order</wp:tag_slug><wp:tag_name><![CDATA[order]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>98</wp:term_id><wp:tag_slug>ordernar</wp:tag_slug><wp:tag_name><![CDATA[ordernar]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>99</wp:term_id><wp:tag_slug>parse</wp:tag_slug><wp:tag_name><![CDATA[parse]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>100</wp:term_id><wp:tag_slug>partia</wp:tag_slug><wp:tag_name><![CDATA[partia]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>101</wp:term_id><wp:tag_slug>performace</wp:tag_slug><wp:tag_name><![CDATA[performace]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>102</wp:term_id><wp:tag_slug>performance</wp:tag_slug><wp:tag_name><![CDATA[performance]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>103</wp:term_id><wp:tag_slug>permission</wp:tag_slug><wp:tag_name><![CDATA[permission]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>104</wp:term_id><wp:tag_slug>poo</wp:tag_slug><wp:tag_name><![CDATA[POO]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>167</wp:term_id><wp:tag_slug>presentation</wp:tag_slug><wp:tag_name><![CDATA[presentation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>105</wp:term_id><wp:tag_slug>previa</wp:tag_slug><wp:tag_name><![CDATA[previa]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>106</wp:term_id><wp:tag_slug>print</wp:tag_slug><wp:tag_name><![CDATA[print]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>107</wp:term_id><wp:tag_slug>prompt</wp:tag_slug><wp:tag_name><![CDATA[prompt]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>108</wp:term_id><wp:tag_slug>propriedade</wp:tag_slug><wp:tag_name><![CDATA[propriedade]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>109</wp:term_id><wp:tag_slug>python-2</wp:tag_slug><wp:tag_name><![CDATA[python]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>110</wp:term_id><wp:tag_slug>query</wp:tag_slug><wp:tag_name><![CDATA[Query]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>111</wp:term_id><wp:tag_slug>radom</wp:tag_slug><wp:tag_name><![CDATA[radom]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>112</wp:term_id><wp:tag_slug>rails-2</wp:tag_slug><wp:tag_name><![CDATA[rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>113</wp:term_id><wp:tag_slug>rational-rose</wp:tag_slug><wp:tag_name><![CDATA[rational rose]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>114</wp:term_id><wp:tag_slug>razor</wp:tag_slug><wp:tag_name><![CDATA[razor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>115</wp:term_id><wp:tag_slug>regex</wp:tag_slug><wp:tag_name><![CDATA[regex]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>116</wp:term_id><wp:tag_slug>regular</wp:tag_slug><wp:tag_name><![CDATA[regular]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>117</wp:term_id><wp:tag_slug>remove</wp:tag_slug><wp:tag_name><![CDATA[remove]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>118</wp:term_id><wp:tag_slug>replace</wp:tag_slug><wp:tag_name><![CDATA[replace]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>119</wp:term_id><wp:tag_slug>reset</wp:tag_slug><wp:tag_name><![CDATA[reset]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>120</wp:term_id><wp:tag_slug>retornar</wp:tag_slug><wp:tag_name><![CDATA[retornar]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>166</wp:term_id><wp:tag_slug>ruby-2</wp:tag_slug><wp:tag_name><![CDATA[ruby]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>121</wp:term_id><wp:tag_slug>salvar-como</wp:tag_slug><wp:tag_name><![CDATA[salvar como]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>122</wp:term_id><wp:tag_slug>save-as</wp:tag_slug><wp:tag_name><![CDATA[save as]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>123</wp:term_id><wp:tag_slug>sharepoint-2</wp:tag_slug><wp:tag_name><![CDATA[sharepoint]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>124</wp:term_id><wp:tag_slug>shell</wp:tag_slug><wp:tag_name><![CDATA[shell]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>125</wp:term_id><wp:tag_slug>showmessage</wp:tag_slug><wp:tag_name><![CDATA[showMessage]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>126</wp:term_id><wp:tag_slug>showmessagebox</wp:tag_slug><wp:tag_name><![CDATA[showMessageBox]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>127</wp:term_id><wp:tag_slug>solid</wp:tag_slug><wp:tag_name><![CDATA[SOLID]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>128</wp:term_id><wp:tag_slug>sort</wp:tag_slug><wp:tag_name><![CDATA[sort]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>157</wp:term_id><wp:tag_slug>spa</wp:tag_slug><wp:tag_name><![CDATA[SPA]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>129</wp:term_id><wp:tag_slug>spmenufield</wp:tag_slug><wp:tag_name><![CDATA[spmenufield]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>130</wp:term_id><wp:tag_slug>sql-2</wp:tag_slug><wp:tag_name><![CDATA[sql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>131</wp:term_id><wp:tag_slug>sqlclient</wp:tag_slug><wp:tag_name><![CDATA[sqlclient]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>132</wp:term_id><wp:tag_slug>sqlexpress</wp:tag_slug><wp:tag_name><![CDATA[SQLEXPRESS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>133</wp:term_id><wp:tag_slug>substituir</wp:tag_slug><wp:tag_name><![CDATA[substituir]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>162</wp:term_id><wp:tag_slug>symlink</wp:tag_slug><wp:tag_name><![CDATA[symlink]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>134</wp:term_id><wp:tag_slug>tdc</wp:tag_slug><wp:tag_name><![CDATA[tdc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>135</wp:term_id><wp:tag_slug>tempo</wp:tag_slug><wp:tag_name><![CDATA[tempo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>136</wp:term_id><wp:tag_slug>terminal</wp:tag_slug><wp:tag_name><![CDATA[terminal]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>137</wp:term_id><wp:tag_slug>tfs</wp:tag_slug><wp:tag_name><![CDATA[tfs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>138</wp:term_id><wp:tag_slug>tipado</wp:tag_slug><wp:tag_name><![CDATA[tipado]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>139</wp:term_id><wp:tag_slug>tutorial</wp:tag_slug><wp:tag_name><![CDATA[tutorial]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>140</wp:term_id><wp:tag_slug>twitter</wp:tag_slug><wp:tag_name><![CDATA[twitter]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>141</wp:term_id><wp:tag_slug>ultima-pasta</wp:tag_slug><wp:tag_name><![CDATA[ultima pasta]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>142</wp:term_id><wp:tag_slug>update</wp:tag_slug><wp:tag_name><![CDATA[update]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>143</wp:term_id><wp:tag_slug>url</wp:tag_slug><wp:tag_name><![CDATA[url]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>161</wp:term_id><wp:tag_slug>vagrant</wp:tag_slug><wp:tag_name><![CDATA[vagrant]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>144</wp:term_id><wp:tag_slug>validate</wp:tag_slug><wp:tag_name><![CDATA[validate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>145</wp:term_id><wp:tag_slug>value</wp:tag_slug><wp:tag_name><![CDATA[value]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>146</wp:term_id><wp:tag_slug>versao</wp:tag_slug><wp:tag_name><![CDATA[versão]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>147</wp:term_id><wp:tag_slug>video</wp:tag_slug><wp:tag_name><![CDATA[video]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>165</wp:term_id><wp:tag_slug>vim-2</wp:tag_slug><wp:tag_name><![CDATA[vim]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>148</wp:term_id><wp:tag_slug>web</wp:tag_slug><wp:tag_name><![CDATA[web]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>155</wp:term_id><wp:tag_slug>wordpress</wp:tag_slug><wp:tag_name><![CDATA[wordpress]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>149</wp:term_id><wp:tag_slug>xml</wp:tag_slug><wp:tag_name><![CDATA[XML]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>150</wp:term_id><wp:tag_slug>zerar</wp:tag_slug><wp:tag_name><![CDATA[zerar]]></wp:tag_name></wp:tag>
	<wp:term><wp:term_id>151</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>demos</wp:term_slug><wp:term_name><![CDATA[Demos]]></wp:term_name></wp:term>
	<wp:term><wp:term_id>152</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>meus-jqueryplugin</wp:term_slug><wp:term_name><![CDATA[Meus JqueryPlugin]]></wp:term_name></wp:term>
	<wp:term><wp:term_id>153</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>menu</wp:term_slug><wp:term_name><![CDATA[Menu]]></wp:term_name></wp:term>
	<wp:term><wp:term_id>154</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>wplook-main-menu</wp:term_slug><wp:term_name><![CDATA[WPLOOK Main Menu]]></wp:term_name></wp:term>

	<generator>http://wordpress.org/?v=3.9.1</generator>

	<item>
				<title>OhMyZsh</title>
		<link>http://blog.maxcnunes.net/?attachment_id=1007</link>
		<pubDate>Thu, 20 Jun 2013 14:39:21 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/wp-content/uploads/2013/06/OhMyZsh.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1007</wp:post_id>
		<wp:post_date>2013-06-20 14:39:21</wp:post_date>
		<wp:post_date_gmt>2013-06-20 14:39:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ohmyzsh</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.maxcnunes.net/wp-content/uploads/2013/06/OhMyZsh.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/06/OhMyZsh.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:655;s:6:"height";i:266;s:4:"file";s:19:"2013/06/OhMyZsh.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"OhMyZsh-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:19:"OhMyZsh-300x121.png";s:5:"width";i:300;s:6:"height";i:121;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:18:"OhMyZsh-210x85.png";s:5:"width";i:210;s:6:"height";i:85;s:9:"mime-type";s:9:"image/png";}s:8:"featured";a:4:{s:4:"file";s:19:"OhMyZsh-210x210.png";s:5:"width";i:210;s:6:"height";i:210;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1031</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1031</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1031</wp:post_id>
		<wp:post_date>2013-06-20 19:10:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1032</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1032</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1032</wp:post_id>
		<wp:post_date>2013-06-20 19:10:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>2</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1033</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1033</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1033</wp:post_id>
		<wp:post_date>2013-06-20 19:10:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>2</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1034</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1034</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1034</wp:post_id>
		<wp:post_date>2013-06-20 19:10:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>2</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1035</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1035</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1035</wp:post_id>
		<wp:post_date>2013-06-20 19:10:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>2</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[14]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1036</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1036</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1036</wp:post_id>
		<wp:post_date>2013-06-20 19:10:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>2</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[16]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1037</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1037</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1037</wp:post_id>
		<wp:post_date>2013-06-20 19:10:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>2</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[21]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1038</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1038</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1038</wp:post_id>
		<wp:post_date>2013-06-20 19:10:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>2</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1039</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1039</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1039</wp:post_id>
		<wp:post_date>2013-06-20 19:10:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1040</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1040</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1040</wp:post_id>
		<wp:post_date>2013-06-20 19:10:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1041</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1041</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1041</wp:post_id>
		<wp:post_date>2013-06-20 19:10:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>5</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[17]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1042</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1042</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1042</wp:post_id>
		<wp:post_date>2013-06-20 19:10:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>5</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[22]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1043</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1043</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1043</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1044</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1044</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1044</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>max.nunes</title>
		<link>http://blog.maxcnunes.net/?attachment_id=1067</link>
		<pubDate>Fri, 21 Jun 2013 03:28:50 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/wp-content/uploads/2013/06/max.nunes_.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1067</wp:post_id>
		<wp:post_date>2013-06-21 03:28:50</wp:post_date>
		<wp:post_date_gmt>2013-06-21 03:28:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>max-nunes</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.maxcnunes.net/wp-content/uploads/2013/06/max.nunes_.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/06/max.nunes_.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:568;s:6:"height";i:568;s:4:"file";s:22:"2013/06/max.nunes_.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"max.nunes_-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:22:"max.nunes_-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>maxcnunes6</title>
		<link>http://blog.maxcnunes.net/?attachment_id=1068</link>
		<pubDate>Fri, 21 Jun 2013 03:28:52 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/wp-content/uploads/2013/06/maxcnunes6.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1068</wp:post_id>
		<wp:post_date>2013-06-21 03:28:52</wp:post_date>
		<wp:post_date_gmt>2013-06-21 03:28:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>maxcnunes6</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.maxcnunes.net/wp-content/uploads/2013/06/maxcnunes6.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/06/maxcnunes6.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:198;s:4:"file";s:22:"2013/06/maxcnunes6.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"maxcnunes6-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>cropped-maxcnunes6.png</title>
		<link>http://blog.maxcnunes.net/?attachment_id=1069</link>
		<pubDate>Fri, 21 Jun 2013 03:29:07 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/wp-content/uploads/2013/06/cropped-maxcnunes6.png</guid>
		<description></description>
		<content:encoded><![CDATA[http://blog.maxcnunes.net/wp-content/uploads/2013/06/cropped-maxcnunes6.png]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1069</wp:post_id>
		<wp:post_date>2013-06-21 03:29:07</wp:post_date>
		<wp:post_date_gmt>2013-06-21 03:29:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cropped-maxcnunes6-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.maxcnunes.net/wp-content/uploads/2013/06/cropped-maxcnunes6.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/06/cropped-maxcnunes6.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_context</wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:280;s:6:"height";i:299;s:4:"file";s:30:"2013/06/cropped-maxcnunes6.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"cropped-maxcnunes6-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
			<wp:meta_value><![CDATA[zeebizzcard]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>knockout-debugger2</title>
		<link>http://blog.maxcnunes.net/2013/06/22/bind-handler-debugger-knockout/knockout-debugger2/</link>
		<pubDate>Sat, 22 Jun 2013 02:27:50 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/wp-content/uploads/2013/06/knockout-debugger2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1083</wp:post_id>
		<wp:post_date>2013-06-22 02:27:50</wp:post_date>
		<wp:post_date_gmt>2013-06-22 02:27:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>knockout-debugger2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1073</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.maxcnunes.net/wp-content/uploads/2013/06/knockout-debugger2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/06/knockout-debugger2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:605;s:6:"height";i:214;s:4:"file";s:30:"2013/06/knockout-debugger2.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"knockout-debugger2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:30:"knockout-debugger2-300x106.png";s:5:"width";i:300;s:6:"height";i:106;s:9:"mime-type";s:9:"image/png";}s:23:"chiplife-image-featured";a:4:{s:4:"file";s:30:"knockout-debugger2-580x214.png";s:5:"width";i:580;s:6:"height";i:214;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>knockout-debugger</title>
		<link>http://blog.maxcnunes.net/2013/06/22/bind-handler-debugger-knockout/knockout-debugger/</link>
		<pubDate>Sat, 22 Jun 2013 02:29:34 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/wp-content/uploads/2013/06/knockout-debugger.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1085</wp:post_id>
		<wp:post_date>2013-06-22 02:29:34</wp:post_date>
		<wp:post_date_gmt>2013-06-22 02:29:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>knockout-debugger</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1073</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.maxcnunes.net/wp-content/uploads/2013/06/knockout-debugger.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/06/knockout-debugger.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:452;s:6:"height";i:121;s:4:"file";s:29:"2013/06/knockout-debugger.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"knockout-debugger-150x121.png";s:5:"width";i:150;s:6:"height";i:121;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:28:"knockout-debugger-300x80.png";s:5:"width";i:300;s:6:"height";i:80;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Sample Page</title>
		<link>http://blog.maxcnunes.net/sample-page/</link>
		<pubDate>Thu, 20 Jun 2013 04:39:13 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[This is an example page. It's different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:

<blockquote>Hi there! I'm a bike messenger by day, aspiring actor by night, and this is my blog. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin' caught in the rain.)</blockquote>

...or something like this:

<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>

As a new WordPress user, you should go to <a href="http://blog.maxcnunes.net/wp-admin/">your dashboard</a> to delete this page and create new pages for your content. Have fun!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2013-06-20 04:39:13</wp:post_date>
		<wp:post_date_gmt>2013-06-20 04:39:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sample-page</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Sample Page</title>
		<link>http://blog.maxcnunes.net/sample-page-2/</link>
		<pubDate>Tue, 18 Jun 2013 02:28:23 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[This is an example page. It's different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:

<blockquote>Hi there! I'm a bike messenger by day, aspiring actor by night, and this is my blog. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin' caught in the rain.)</blockquote>

...or something like this:

<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>

As a new WordPress user, you should go to <a href="http://blog.maxcnunes.net/wp-admin/">your dashboard</a> to delete this page and create new pages for your content. Have fun!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date>2013-06-18 02:28:23</wp:post_date>
		<wp:post_date_gmt>2013-06-18 02:28:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sample-page-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Sample Page</title>
		<link>http://blog.maxcnunes.net/sample-page-2-2/</link>
		<pubDate>Tue, 28 Jun 2011 02:10:56 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[This is an example page. It's different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:

<blockquote>Hi there! I'm a bike messenger by day, aspiring actor by night, and this is my blog. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin' caught in the rain.)</blockquote>

...or something like this:

<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickies to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>

As a new WordPress user, you should go to <a href="http://blog.maxcnunes.net/wp-admin/">your dashboard</a> to delete this page and create new pages for your content. Have fun!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2011-06-28 02:10:56</wp:post_date>
		<wp:post_date_gmt>2011-06-28 02:10:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sample-page-2-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Acesso ao banco com SQL Command</title>
		<link>http://blog.maxcnunes.net/?p=306</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=306</guid>
		<description></description>
		<content:encoded><![CDATA[USE [RaulFungencio]
GO
/****** Object: StoredProcedure [dbo].[PR_EML_RecuperarContatoUsuario] Script Date: 11/17/2011 17:27:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
------------------------------------------
-- Retorna lista de contatos do usuário --
-- --
-- Histórico --
-- --
-- Alterado em: 17/11/2011 - Max --
------------------------------------------

ALTER PROC [dbo].[PR_EML_RecuperarContatoUsuario]
@Usuario INT,
@Nome VARCHAR(200) = NULL,
@Email VARCHAR(200) = NULL
AS
BEGIN

DECLARE @Erro INT
SET @Erro = 0

IF NOT EXISTS(SELECT PK_ID_INT_USU FROM TB_SEG_USUARIO WHERE PK_ID_INT_USU = @Usuario)
BEGIN
SET @Erro += -1
END

IF @Erro &lt;&gt; 0
BEGIN
RETURN @Erro
END

SELECT TB_EML_CONTATOS.DTALTERACAO_TS_CTT,
TB_EML_CONTATOS.DISPLAYNAME_VCR_CTT,
TB_EML_CONTATOS.ENDEMAIL_VCR_CTT,
TB_EML_CONTATOS.PK_ID_INT_CTT
FROM TB_EML_CONTATOS INNER JOIN
TB_EML_CONTATOS_USUARIOS ON TB_EML_CONTATOS.PK_ID_INT_CTT = TB_EML_CONTATOS_USUARIOS.PK_FK_ID_INT_CTT
WHERE TB_EML_CONTATOS_USUARIOS.PK_FK_ID_INT_PES = @Usuario
AND TB_EML_CONTATOS.DISPLAYNAME_VCR_CTT LIKE
CASE WHEN @Nome IS NULL OR @Nome = ''
THEN '%'
ELSE '%'+@Nome+'%' END
AND TB_EML_CONTATOS.ENDEMAIL_VCR_CTT LIKE
CASE WHEN @Email IS NULL OR @Email = ''
THEN '%'
ELSE '%' + @Email + '%'
END

RETURN 0

END]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>306</wp:post_id>
		<wp:post_date>2011-12-13 02:36:59</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Crystal Reports com o Visual Studio</title>
		<link>http://blog.maxcnunes.net/?p=358</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=358</guid>
		<description></description>
		<content:encoded><![CDATA[Crystal Report é uma poderosa ferramenta para a crição de relatórios. Tem suporte para Web e Desktop. E a fonte de dados pode ser configurada desde arquivos textos e xmls à banco de dados robustos como Oracle e SQL Server.

Para exemplificar, vou utilizar uma aplicação Web. Então crie um novo projeto do tipo ASP.NET Emtpy Web Application:

<a href="http://imasters.com.br/artigo/18174/visual_studio/crystal_reports_para_o_visual_studio_2010_versao_beta/">http://imasters.com.br/artigo/18174/visual_studio/crystal_reports_para_o_visual_studio_2010_versao_beta</a><a href="http://imasters.com.br/artigo/18174/visual_studio/crystal_reports_para_o_visual_studio_2010_versao_beta/">/</a>
<p style="text-align: center;">a</p>
<p style="text-align: center;"><a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/Novo-Projeto-CrystalReport.png"><img class="aligncenter size-full wp-image-365" title="Novo-Projeto-CrystalReport" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/Novo-Projeto-CrystalReport.png" alt="Novo-Projeto-CrystalReport" width="669" height="524" /></a></p>
<p style="text-align: left;"> Com projeto criado, clique com o botão direito sobre o projeto e adicione um novo item:</p>
<p style="text-align: center;"><a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/2-Adicionar-Novo-Item.png"><img class="aligncenter size-full wp-image-369" title="2-Adicionar-Novo-Item" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/2-Adicionar-Novo-Item.png" alt="2-Adicionar-Novo-Item" width="659" height="279" /></a></p>
Selecione um item do tipo Crystal Reports, na aba de Reporting à direita. Nomeando como Relatorio.rpt:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/3-Item-Crystal-Reports.png"><img class="aligncenter size-full wp-image-371" title="3-Item-Crystal-Reports" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/3-Item-Crystal-Reports.png" alt="3-Item-Crystal-Reports" width="956" height="665" /></a>

Para ficar mais simples, neste primeiro contato com o Crystal Report, vamos utilizar o Assistente para Relatório, escolhendo o tipo Padrão:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/4-Galeria-Crystal-Reports.png"><img class="aligncenter size-full wp-image-372" title="4-Galeria-Crystal-Reports" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/4-Galeria-Crystal-Reports.png" alt="4-Galeria-Crystal-Reports" width="480" height="522" /></a>

Selecione: Criar Nova Conexão &gt; OLE DB (ADO) &gt; Microsoft OLE DB Provider SQL Server:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/5-Conexao-Fonte-Dados.png"><img class="aligncenter size-full wp-image-373" title="5-Conexao-Fonte-Dados" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/5-Conexao-Fonte-Dados.png" alt="5-Conexao-Fonte-Dados" width="760" height="602" /></a>

Preencha o nome do servidor e o banco de dados. Como estou utilizando a autenticação do Windows, deixei marcada a Segurança Integrada. Mas para outras situações não marque o CheckBox e preencha o Usuário e Senha.

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/6-Informações-Conexão.png"><img class="aligncenter size-full wp-image-374" title="6-Informações-Conexão" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/6-Informações-Conexão.png" alt="6-Informações-Conexão" width="540" height="547" /></a>

Deixe selecionado o Banco e clique em avançar:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/7-Selecionar-Banco.png"><img class="aligncenter size-full wp-image-375" title="7-Selecionar-Banco" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/7-Selecionar-Banco.png" alt="7-Selecionar-Banco" width="693" height="512" /></a>

Selecione o tipo de formatação Padrão do relatório e clique em Concluir:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/8-Estilos-Formatação.png"><img class="aligncenter size-full wp-image-376" title="8-Estilos-Formatação" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/8-Estilos-Formatação.png" alt="8-Estilos-Formatação" width="694" height="514" /></a>

Com o relatório criado, abra a aba de Field Explorer e clique sobre o Database Fields e selecione a opção Database Expert...

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/9-Database-Expert.png"><img class="aligncenter size-full wp-image-378" title="9-Database-Expert" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/9-Database-Expert.png" alt="9-Database-Expert" width="1045" height="404" /></a>

Selecione e adicione as tabelas desejadas ao relatório e clique em OK:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/10-Tabelas-Relatório.png"><img class="aligncenter size-full wp-image-380" title="10-Tabelas-Relatório" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/10-Tabelas-Relatório.png" alt="10-Tabelas-Relatório" width="867" height="558" /></a>

Ao clicar em OK na tela anterior será exibida esta tela, com as tabelas adicionadas e seus relacionamentos:]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>358</wp:post_id>
		<wp:post_date>2011-12-13 02:36:15</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>QUERY STRING HTML</title>
		<link>http://blog.maxcnunes.net/?p=491</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=491</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>function getQuerystring(key, default_) {
    if (default_ == null) default_ = "";
    key = key.replace(/[[]/, "[").replace(/[]]/, "]");
    var regex = new RegExp("[?&amp;]" + key + "=([^&amp;#]*)");
    var qs = regex.exec(window.location.href);
    if (qs == null)
        return default_;
    else
        return qs[1];
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>491</wp:post_id>
		<wp:post_date>2011-12-31 19:46:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Recuperar a linha atual referente a um componente dentro do Repeater</title>
		<link>http://blog.maxcnunes.net/?p=546</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=546</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>&nbsp; int RepeaterItemIndex = ((RepeaterItem)lnkButton.NamingContainer).ItemIndex;</strong>

[gist id=1748064&nbsp;]

a

TESTE

[gist id=1748064&nbsp;file=AlunoRepositorio.cs]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>546</wp:post_id>
		<wp:post_date>2012-05-25 01:12:40</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Publicação IIS</title>
		<link>http://blog.maxcnunes.net/?p=681</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=681</guid>
		<description></description>
		<content:encoded><![CDATA[

Passo a passo bem simples para publicar uma aplicação web.
<h2>Preparando ambiente para publicação</h2>
Abrir IIS:

[caption id="attachment_698" align="aligncenter" width="300"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/IIS.png"><img class="size-medium wp-image-698" title="IIS" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/IIS-300x205.png" alt="" width="300" height="205" /></a> IIS[/caption]

Adicionar novo Site:

[caption id="attachment_684" align="aligncenter" width="300"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Adicionar-novo-site-IIS.png"><img class="size-medium wp-image-684" title="Adicionar novo site IIS" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Adicionar-novo-site-IIS-300x231.png" alt="" width="300" height="231" /></a> Adicionar novo site IIS[/caption]

Defina o caminho físico de onde estará localizada a aplicação publicada. No caso de existirem mais sites no mesmo IIS, você pode alterar a porta de acesso, na minha situação deixei como 82 (80 é a porta padrão).

[caption id="attachment_687" align="aligncenter" width="300"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Adicionar-novo-site-IIS-Configuracao.png"><img class="size-medium wp-image-687" title="Adicionar novo site IIS - Configuracao" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Adicionar-novo-site-IIS-Configuracao-300x292.png" alt="" width="300" height="292" /></a> Adicionar novo site IIS - Configuração[/caption]

Por padrão novos aplicativos vem com configurado inicialmente por padrão com o .NET Framework 2.0. Acesse o Pools de Aplicativos no IIS e altera para a versão utilizada no seu projeto, na minha situação deixei como 4.0.

[caption id="attachment_699" align="aligncenter" width="300"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Pool-do-Aplicativo.png"><img class="size-medium wp-image-699" title="Pool do Aplicativo" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Pool-do-Aplicativo-300x190.png" alt="" width="300" height="190" /></a> Pool do Aplicativo[/caption]

[caption id="attachment_689" align="aligncenter" width="300"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Alterar-Framework.png"><img class="size-medium wp-image-689" title="Alterar Framework" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Alterar-Framework-300x271.png" alt="" width="300" height="271" /></a> Alterar Framework[/caption]
<h2>Publicando o Projeto:</h2>
Com o projeto aberto no Visual Studio, clique com o botão direito sobre o projeto e selecione “Publish”:

[caption id="attachment_690" align="aligncenter" width="300"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Publicar.png"><img class="size-medium wp-image-690" title="Publicar" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Publicar-300x165.png" alt="" width="300" height="165" /></a> Publicar[/caption]

Para publicar os arquivos em um diretório selecione a opção “File System”. No meu caso já direcionei direto para o diretório onde está localizada a hospedagem do meu aplicativo. Caso você publique em um servidor que esteja em outra máquina, poderia publicar em qualquer diretório e depois enviar o conteúdo via FTP para a hospedagem do seu aplicativo.

[caption id="attachment_691" align="aligncenter" width="300"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Publish-Profile.png"><img class="size-medium wp-image-691" title="Publish Profile" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Publish-Profile-300x255.png" alt="" width="300" height="255" /></a> Publish Profile[/caption]

Publicação realizada com sucesso:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Publish-Output.png"><img class="aligncenter size-medium wp-image-692" title="Publish Output" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Publish-Output-300x171.png" alt="" width="300" height="171" /></a>
<h3>Configurações Adicionais:</h3>
Normalmente os servidores não possuem todas as configurações necessárias para nossa aplicação. Nessas situações precisamos realizar configurações adicionais à publicação.
<h4>Servidores Banco MySql</h4>
1. Adicionar dentro da tag <strong>configuration</strong> no webconfig: &nbsp;&nbsp;

<code lang="xml"><system.data>
    <DbProviderFactories>
      <clear/>
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data, Version=6.3.0.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
    </DbProviderFactories>
  </system.data>
</code>

Ficando assim:

[caption id="attachment_693" align="aligncenter" width="300"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Webconfig.png"><img class="size-medium wp-image-693" title="Webconfig" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/Webconfig-300x106.png" alt="" width="300" height="106" /></a> Webconfig[/caption]

2. Alterar a versão do MySql para a versão correta utilizada no projeto.

[caption id="attachment_695" align="aligncenter" width="208"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/MySql.Data_.dll-Versao.png"><img class="size-medium wp-image-695" title="MySql.Data.dll Versao" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/MySql.Data_.dll-Versao-208x300.png" alt="" width="208" height="300" /></a> MySql.Data.dll Versao[/caption]

&nbsp;3. Adicione as seguintes DLLs à pasta BIN da aplicação publicada:

[caption id="attachment_696" align="aligncenter" width="155"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/MySql-Dlls.png"><img class="size-full wp-image-696" title="MySql Dlls" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/MySql-Dlls.png" alt="" width="155" height="95" /></a> MySql Dlls[/caption]

Obs: Estas dlls estão localizadas no diretório onde foi instalado o MySql Connector.
<h4>Servidores sem MVC Framework instalado:</h4>
1. Adicione as seguintes DLLs à pasta BIN da aplicação publicada:

[caption id="attachment_697" align="aligncenter" width="252"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/MVC-Dlls.png"><img class="size-full wp-image-697" title="MVC Dlls" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/MVC-Dlls.png" alt="" width="252" height="163" /></a> MVC Dlls[/caption]

Copie-as do diretório:&nbsp;<span style="color: #008000;">C:Program Files (x86)Microsoft ASP.NETASP.NET Web Pages</span>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>681</wp:post_id>
		<wp:post_date>2013-01-13 00:18:34</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>SignalR – Aplicações em tempo real</title>
		<link>http://blog.maxcnunes.net/?p=863</link>
		<pubDate>Wed, 23 Jan 2013 01:35:44 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=863</guid>
		<description></description>
		<content:encoded><![CDATA[

SignalR é uma biblioteca opensource que combina funcionalidades do lado do servidor em ASP.NET e do lado do cliente em Javascript. Ele simplesmente facilita em muito a maneira de gerenciar conexões entre cliente e servidor e também a possiblita que o servidor tenha autonomia para atualizar o cliente de forma assincrona e automática.
<h4>Onde o SignalR pode ser utilizado</h4>
Em qualquer aplicação que requer um processo em tempo real, como: uma aplicação finaceira de precisa atualizar a cotação das moedas para todos clientes conectados, um chat no qual um usuário envia uma mensagem todos os outros usuários devem serem atulizados com as novas mensagens, um canal de notícias que precisa manter todos os cliente atualizados com as novas noticias publicadas, etc. O todas esssas aplicações tem em comum é que elas precisam manter todos clientes conectados atualizados de forma assincrona e automática, ou seja atualizado em tempo real.
<h4>Codificando – Sistema de leilões</h4>
Um sistema de leilões precisa notificar todos os usuários conectados sobre quanto tempo resta para ser finalizado e quando finalizado, todos os usuários devem ser notificados que o leilão foi encerrado e não deve permitir novos lances. Para deixar mais interessante vamos acrescentar 10 segundos no tempo restante do leilão para cada lance realizado.
<ol>
	<li>Crie um novo projeto ASP.NET MVC 4 Empty</li>
	<li>Abra o Package Manager Console no Visual Studio e insira a seguinte linha de comando para instalar o SignalR: <span class="code_block">install-package Microsoft.AspNet.SignalR -pre</span></li>
	<li></li>
</ol>
Ficou curioso em saber como SignalR é por dentro? Então acesse o projeto no Github : <a title="https://github.com/SignalR/SignalR" href="https://github.com/SignalR/SignalR">https://github.com/SignalR/SignalR</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>863</wp:post_id>
		<wp:post_date>2013-01-23 01:35:44</wp:post_date>
		<wp:post_date_gmt>2013-01-23 01:35:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1045</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1045</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1045</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1046</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1046</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1046</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1047</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1047</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1047</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>11</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[12]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1048</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1048</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1048</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>11</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[13]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1049</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1049</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1049</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[15]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1050</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1050</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1050</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1051</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1051</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1051</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[19]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1052</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1052</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1052</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[20]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1053</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1053</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1053</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>20</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[25]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1054</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1054</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1054</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[23]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://blog.maxcnunes.net/?p=1055</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1055</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1055</wp:post_id>
		<wp:post_date>2013-06-20 19:10:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_orphaned</wp:meta_key>
			<wp:meta_value><![CDATA[1371755408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Hello world!</title>
		<link>http://blog.maxcnunes.net/2010/08/18/hello-world-2/</link>
		<pubDate>Wed, 18 Aug 2010 01:37:30 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://maxcnunes.wordpress.com/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[

[caption id="attachment_6" align="alignleft" width="192"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2010/08/cara-feliz.jpg"><img class="size-medium wp-image-6     " title="cara-feliz" alt="" src="http://blog.maxcnunes.net/wp-content/uploads/2010/08/cara-feliz.jpg?w=300" width="192" height="192" /></a> Hello World[/caption]

Estou criando esse blog, pra ajudar um pouco, aqueles que estam em dúvida em algo que eu já consegui resolver.

Sempre que possí­vel, vou tentar postar algum tutorial ou dica de como resolver algum problema, da maneira que eu sei.

É isso ae. Até a próxima!!
<div style="clear: both;">&nbsp;</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[O primeiro post]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2010-08-18 01:37:30</wp:post_date>
		<wp:post_date_gmt>2010-08-18 01:37:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hello-world-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="aleatorio"><![CDATA[Aleatório]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[hello-world-2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[maxcnunes,  blog, max claus nunes, .net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Primeiro post do meu blog - Max C. Nunes - http://blog.maxcnunes.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Max C. Nunes - Primeiro Post]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[hello-world-2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[maxcnunes,  blog, max claus nunes, .net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Primeiro post do meu blog - Max C. Nunes - http://blog.maxcnunes.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Max C. Nunes - Primeiro Post]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Uma simples aplicação com DataSet Tipado</title>
		<link>http://blog.maxcnunes.net/2010/08/22/dataset-tipado/</link>
		<pubDate>Sun, 22 Aug 2010 22:32:20 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://maxcnunes.wordpress.com/?p=13</guid>
		<description></description>
		<content:encoded><![CDATA[Um tutorial simples de como trabalhar com DataSet Tipado no Windows Form.

F cil e r pido!

<!--more-->

Neste artigo foi feito:
<ol>
	<li>Criei uma tabela cliente no banco</li>
	<li>Criei um formul rio Principal WindowsForm com funcionalidades de INSERT, DELETE e UPDATE</li>
	<li>Criei outro formul rio Pesquisa WindowsForm com funcionalidade de SELECT e com possibilidade de selecionar o cliente desejado, para edit -lo no formul rio Principal.</li>
	<li>Criei um DataSet com os métodos de SELECT, INSERT, DELETE e UPDATE.</li>
	<li>Criei uma classe est tica para guardar temporariamente o cliente selecionado.</li>
</ol>
Segue o video tutorial:

[vimeo]http://vimeo.com/14344312[/vimeo]

Arquivos:

<a title="Sql do banco" href="http://www.4shared.com/document/OH6B484i/sqlCliente.html" target="_blank">Sql do Banco</a>, <a title="Projeto no Visual Studio" href="http://www.4shared.com/file/XnKZb7oR/MinhaAplicacao.html" target="_blank">Projeto no Visual Studio</a>, <a href="http://www.4shared.com/video/NwKgnKd-/VideoTutorial.html" target="_blank">Video do desenvolvimento</a>

Como o projeto est em Visual Studio 10, aqui vão os código do formul rio principal e pesquisa.

frmPrincipal:

[sourcecode language="csharp"]
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
//INCLUI O NOSSO DATASET
using MinhaAplicacao.dsDadosTableAdapters;

namespace MinhaAplicacao
{
    public partial class frmPrincipal : Form
    {
        //Objeto TableAdapter da tabela cliente no dataset
        ClienteTableAdapter clienteTA = new ClienteTableAdapter();

        //Limpar todos os campos
        public void Limpar()
{
txtCodigo.Text = string.Empty;
txtCodigo.Enabled = false;
txtNome.Text = string.Empty;
txtEmail.Text = string.Empty;
cSelecinado.codigoSelecionado = 0;
MessageBox.Show(&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;quot;Operação realizada com sucesso&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;quot;);
}

        public frmPrincipal()
        {
            InitializeComponent();
        }

        private void btnGravar_Click(object sender, EventArgs e)
        {
            try
            {
                if (txtCodigo.Text == string.Empty)
                {
                    //INSERIR NOVO CLIENTE
                    clienteTA.Insert(txtNome.Text, txtEmail.Text);
                }
                else
                {
                    int codigo = Convert.ToInt32(txtCodigo.Text);
                    //ATUALIZAR CLIENTE SELECIONADO
                    clienteTA.UpdateCliente(txtNome.Text, txtEmail.Text, codigo);
                }
                Limpar();
            }
            catch { }

        }

        private void btnPesquisar_Click(object sender, EventArgs e)
        {
            frmPesquisa fPesquisa = new frmPesquisa();
            //ABRIR JANELA DE PESQUISA
            fPesquisa.ShowDialog();

            //APÃ“S FECHAR A JANELA PESQUISA, SE TIVER ALGUM CLIENTE SELECIONADO
            if (cSelecinado.codigoSelecionado != 0)
            {
                //BUSCA OS VALORES DO CLIENTE SELECIONADO E PREENCHE OS CAMPOS
                txtCodigo.Text = clienteTA.BuscarPorCodigo(cSelecinado.codigoSelecionado)[0].idCliente.ToString();
                txtNome.Text = clienteTA.BuscarPorCodigo(cSelecinado.codigoSelecionado)[0].nome;
                txtEmail.Text = clienteTA.BuscarPorCodigo(cSelecinado.codigoSelecionado)[0].email;
            }
        }

        private void btnDeletar_Click(object sender, EventArgs e)
        {
            try
            {
                if (txtCodigo.Text != string.Empty)
                {
                    //DELETA O CLIENTE SELECIONADO
                    clienteTA.DeleteCliente(Convert.ToInt32(txtCodigo.Text));
                }
                Limpar();
            }
            catch { }
        }
    }
}

[/sourcecode]

frmPesquisa

[sourcecode language="csharp"]
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
//INCLUI O NOSSO DATASET
using MinhaAplicacao.dsDadosTableAdapters;

namespace MinhaAplicacao
{
    public partial class frmPesquisa : Form
    {
        //Objeto TableAdapter da tabela cliente no dataset
        ClienteTableAdapter clienteTA = new ClienteTableAdapter();

        public frmPesquisa()
        {
            InitializeComponent();
        }

        private void frmPesquisa_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'dsDados.Cliente' table. You can move, or remove it, as needed.
            this.clienteTableAdapter.FillTodos(this.dsDados.Cliente);

        }

        private void btnPesquisar_Click(object sender, EventArgs e)
        {
            if (txtCodigo.Text != string.Empty)
            {
                int codigo = Convert.ToInt32(txtCodigo.Text);
                //BUSCA CLIENTE PELO CODIGO
                dataGridView1.DataSource = clienteTA.BuscarPorCodigo(codigo);
            }
            else if (txtNome.Text != string.Empty)
            {
                //BUSCA O CLIENTE PELO NOME
                dataGridView1.DataSource = clienteTA.BuscarPorNome(txtNome.Text);
            }
            else
            {
                //BUSCA O CLIENTE PELO EMAIL
                dataGridView1.DataSource = clienteTA.BuscarPorEmail(txtEmail.Text);
            }

        }

        private void btnSelecionar_Click(object sender, EventArgs e)
        {
            //PEGA O CODIGO DO CLIENTE NA LINHA SELECIONADA
            int codigoSelecionado = Convert.ToInt32(dataGridView1.CurrentRow.Cells[0].Value);

            //GUARDA ESSE CODIGO EM UMA VARIAVEL ESTATICA, PARA PODERMOS ACESSÃ-LA NO OUTRO FORMULÃRIO
            cSelecinado.codigoSelecionado = codigoSelecionado;

            //FECHA A JENALA DE PESQUISA
            this.Close();
        }

    }
}

[/sourcecode]

cSelecionado:

[sourcecode language="csharp"]
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace MinhaAplicacao
{
    static class cSelecinado
    {
        static public int codigoSelecionado = 0;
    }
}

[/sourcecode]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2010-08-22 22:32:20</wp:post_date>
		<wp:post_date_gmt>2010-08-22 22:32:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dataset-tipado</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="aplicacao"><![CDATA[aplicaÃ§Ã£o]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="dataset"><![CDATA[dataset]]></category>
		<category domain="category" nicename="dataset-tipado"><![CDATA[DataSet Tipado]]></category>
		<category domain="post_tag" nicename="desenvolvimento"><![CDATA[desenvolvimento]]></category>
		<category domain="post_tag" nicename="tipado"><![CDATA[tipado]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="video"><![CDATA[video]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[c#, windows form, desenvolver, simples, aplicação]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como desenvolver uma simples aplicação com DataSet Tipado no windows forms c#.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Uma simples aplicação com DataSet Tipado]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[c#, windows form, desenvolver, simples, aplicação]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como desenvolver uma simples aplicação com DataSet Tipado no windows forms c#.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Uma simples aplicação com DataSet Tipado]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Leandro]]></wp:comment_author>
			<wp:comment_author_email>leandroscudeler@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.22.74.80</wp:comment_author_IP>
			<wp:comment_date>2011-08-04 20:52:26</wp:comment_date>
			<wp:comment_date_gmt>2011-08-04 20:52:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito boa explicação.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1312491146.24";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1312665469.26";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Leandro Scudeler]]></wp:comment_author>
			<wp:comment_author_email>leandroscudeler@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.22.74.80</wp:comment_author_IP>
			<wp:comment_date>2011-08-30 16:36:24</wp:comment_date>
			<wp:comment_date_gmt>2011-08-30 16:36:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Parábens]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1314722184.4";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1314915673.43";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Erwin - Alterar notação dos relacionamentos (pé de galinha)</title>
		<link>http://blog.maxcnunes.net/2010/09/24/erwin-com-pe-de-galinha/</link>
		<pubDate>Fri, 24 Sep 2010 12:32:50 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=27</guid>
		<description></description>
		<content:encoded><![CDATA[Caso você tenha começado a desenvolver seu DER no ERWIN, e ao invés dos relacionamentos de suas tabelas estarem com os típicos "pé de galinha", estão com bolinhas. Basta alterar duas propriedades no ERWIN.

<strong>Na barra de ferramentas vá em:</strong>
<ul>
	<li>Model/Model Properties.../Notation</li>
</ul>
<ul>
	<li>E altere para IE (Information Engineering)</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2010-09-24 12:32:50</wp:post_date>
		<wp:post_date_gmt>2010-09-24 12:32:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>erwin-com-pe-de-galinha</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bancodedados"><![CDATA[Banco de Dados]]></category>
		<category domain="category" nicename="dataset-tipado"><![CDATA[DataSet Tipado]]></category>
		<category domain="post_tag" nicename="erwin"><![CDATA[erwin]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[erwin, pé de galinha,  Information Engineering]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como alterar a notação dos relacionamentos no ERWIN, deixando na forma Information Engineering, mais conhecida como “pé-de-galinha”]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Erwin - Alterar notação dos relacionamentos (pé de galinha)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[erwin, pé de galinha,  Information Engineering]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como alterar a notação dos relacionamentos no ERWIN, deixando na forma Information Engineering, mais conhecida como “pé-de-galinha”]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Erwin - Alterar notação dos relacionamentos (pé de galinha)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Gerar banco a partir do diagrama de classes (Rational)</title>
		<link>http://blog.maxcnunes.net/2010/09/26/gerar-banco-a-partir-do-diagrama-de-classes-rational/</link>
		<pubDate>Sun, 26 Sep 2010 20:45:39 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[Após finalizar toda an lise sobre a estrutura e funcionalidade do sistema a se densenvolver o próximo passo, basicamente, seria partir para o desenvolvimento.

Sendo assim, por que não aproveitarmos o que j desenvolvido no diagrama de classes?

Por isso, o Rational Rose disponibliza gerar o banco a partir do mapeamento das tabelas de acordo com o nosso diagrama de classes.<!--more-->

Como exemplo, desenvolvi um diagrama de classes simples, referente a pedidos de compras de um cliente.
<ul>
	<li>Abrir Rational Rose</li>
	<li>Adicionar a pasta Logica View, do novo projeto, um package para conter nosso diagrama de classes.</li>
	<li>Montar o nosso diagrama de classes dentro desse package.</li>
</ul>
[caption id="attachment_39" align="aligncenter" width="489" caption="Criar Package Diagrama"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2010/09/CriarPackageDiagrama.png"><img class="size-full wp-image-39" title="Criar Package Diagrama" src="http://blog.maxcnunes.net/wp-content/uploads/2010/09/CriarPackageDiagrama.png" alt="" width="489" height="369" /></a>[/caption]

[caption id="attachment_32" align="aligncenter" width="450" caption="Diagrama De Classes Pedido"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2010/09/diagramaDeClassesPedido.png"><img class="size-medium wp-image-32 " title="Diagrama De Classes Pedido" src="http://blog.maxcnunes.net/wp-content/uploads/2010/09/diagramaDeClassesPedido-300x259.png" alt="" width="450" height="388.5" /></a>[/caption]
<p style="text-align: center;">Ã‰ interessante que você j defina o tipo(string, bollean...) de cada atributo de suas classes para ficar mais consistente o diagrama de classes com o banco gerado. (Se não definir agora, ele ir gerar tudo com small int)</p>
Após finalizado seu diagrama de classes, devemos definir quais classes se tornarão tabelas no nosso banco. Para isso fação seguinte em todas as tabelas.
<ul>
	<li>Botão direito na classe, Open Specification..</li>
	<li>Aba Detail..</li>
	<li>Marque a opção Persistent</li>
</ul>
[caption id="attachment_42" align="aligncenter" width="518" caption="Classes Persistentes (Futuras tabelas no banco)"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2010/09/ClassesPersistentes.png"><img class="size-full wp-image-42" title="Classes Persistentes" src="http://blog.maxcnunes.net/wp-content/uploads/2010/09/ClassesPersistentes.png" alt="" width="518" height="457" /></a>[/caption]

<em>Caso você possua atributo de identificação em suas classes ("id_cliente", "codigo_cliente"...) você deve defini-los como parte do objeto de identificação, se não o Rational ir criar identificadores automaticamente ao gerar as tabelas.</em>

<em>Para isso faça o seguinte:</em>
<ul>
	<li><em>Pelo menu em rvore abra a pasta do package que contem seu diagrama de classes.</em></li>
	<li><em>Abra classe por classe e clique com o botão direito no atributo de identificação.</em></li>
	<li><em>Em Data Modeler defina como Part of Object Identity</em></li>
</ul>
<strong>Obs: Essa parte Ã  cima não é muito aconcelhavel pois, na realidade no diagrama de classes não deve conter os diagramas identificadores. Porém, pra quem gosta de trabalhar desta forma, ficou a dica.</strong>
<ul>
	<li>Agora vamos criar nosso banco, para manter nossas tabelas, que serão geradas posteriormente.</li>
</ul>
[caption id="attachment_34" align="aligncenter" width="900" caption="Criar Banco - Para manter nossas tabelas (Deixe o nome como BancoDados )"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2010/09/CriarBanco1.png"><img class="size-full wp-image-34 " title="Criar Banco" src="http://blog.maxcnunes.net/wp-content/uploads/2010/09/CriarBanco1-e1285526718680.png" alt="" width="900" height="568.5" /></a>[/caption]
<ul>
	<li>Transformar nosso modelo de objetos em modelo de dados.</li>
</ul>
[caption id="attachment_41" align="aligncenter" width="586" caption="Transforma Modelo Dados"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2010/09/TransformaModeloDados.png"><img class="size-full wp-image-41" title="Transforma Modelo Dados" src="http://blog.maxcnunes.net/wp-content/uploads/2010/09/TransformaModeloDados.png" alt="" width="586" height="452" /></a>[/caption]
<ul>
	<li>Na janela que abrir , selecione em Target Database o banco que criamos.</li>
	<li>Caso você não deseje que ele criei prefixos no nome de suas tabelas, deixe o Prefix vazio ( Eu sempre deixo vazio).</li>
	<li>Clique em ok.</li>
</ul>
Agora v em em Schemas, dentro da pasta Logical View e abra o nosso schema criado. Dentro dele estar todas as nossas tabelas geradas ( se estiver faltando alguma é porque você não a marcou como persistente anteriormente.)
<p style="text-align: left;">Próximo passo, criar o diagrma do modelo de dados:</p>


[caption id="attachment_45" align="aligncenter" width="500" caption="Diagrama do modelo de dados (Renomeie o arquivo para ModelodeDados )"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2010/09/DataModelDiagram-e1285531220880.png"><img class="size-full wp-image-45 " title="DataModelDiagram" src="http://blog.maxcnunes.net/wp-content/uploads/2010/09/DataModelDiagram-e1285531220880.png" alt="" width="500" height="307" /></a>[/caption]

Para adicionar nossas tabelas ao diagrama é muito simples. Basta você arrastar as tabelas do nosso Schema para dentro do nosso Modelo de Dados.

[caption id="attachment_46" align="aligncenter" width="500" caption="Diagrama Modelo de Dados"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2010/09/ModelodeDados.png"><img class="size-full wp-image-46" title="Diagrama Modelo de Dados" src="http://blog.maxcnunes.net/wp-content/uploads/2010/09/ModelodeDados-e1285532759266.png" alt="" width="500" height="351" /></a>[/caption]

Após terminar de adicionar todas as tabelas ao modelo você notar que surgiram automaticamente o relacionamento entre as tabelas. Perceba também,-  que se surgiram automaticamente nossas colunas identificadoras, com o sufixo _ID do nome de cada tabela.
<ul>
	<li>Agora passe de coluna em coluna em todas as tabelas definindo o tipo e tamanho de cada coluna. <em>(Se você ja havia definido corretamente o tipo de cada atributo no diagrama de classes, basta você definir o tamanho correto para cada coluna)</em></li>
</ul>
Finalmente, vamos gerar nosso script sql do banco:

[caption id="attachment_47" align="aligncenter" width="500" caption="Forward Engineer"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2010/09/ForwardEngineer.png"><img class="size-full wp-image-47" title="ForwardEngineer" src="http://blog.maxcnunes.net/wp-content/uploads/2010/09/ForwardEngineer-e1285533769679.png" alt="" width="500" height="343" /></a>[/caption]
<ul>
	<li>Na janela que abriu de NEXT/ NEXT/ selecione o nome e local do arquivo sql/NEXT/FINISH.</li>
</ul>
Pronto, você acabou de gerar o script sql do banco a partir do seu diagrama de classes!!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2010-09-26 20:45:39</wp:post_date>
		<wp:post_date_gmt>2010-09-26 20:45:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gerar-banco-a-partir-do-diagrama-de-classes-rational</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bancodedados"><![CDATA[Banco de Dados]]></category>
		<category domain="post_tag" nicename="gerar-banco"><![CDATA[gerar banco]]></category>
		<category domain="post_tag" nicename="rational-rose"><![CDATA[rational rose]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[rational rose, gerar, banco, diagrama, classes, ibm]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como gerar banco a partir do diagrama de classes (Rational Rose)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Gerar banco a partir do diagrama de classes (Rational)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[rational rose, gerar, banco, diagrama, classes, ibm]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como gerar banco a partir do diagrama de classes (Rational Rose)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Gerar banco a partir do diagrama de classes (Rational)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Retornar a última pasta de um diretório</title>
		<link>http://blog.maxcnunes.net/2010/11/02/retornar-a-ultima-pasta-de-um-diretorio/</link>
		<pubDate>Tue, 02 Nov 2010 01:36:30 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=68</guid>
		<description></description>
		<content:encoded><![CDATA[Uma das maneiras de retornar a última pasta de um diretório.

Por exemplo, voce tem uma url <em><strong>http://blog.maxcnunes.net/topicos/csharp/default.aspx</strong></em> e gostaria de retornar apenas a última pasta.

O jeito que encontrei foi este:

[sourcecode language="csharp"]

public string RetornaUltimaPasta(string url)
{
    return System.IO.Path.GetFileName(Path.GetDirectoryName(url);
}

[/sourcecode]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2010-11-02 01:36:30</wp:post_date>
		<wp:post_date_gmt>2010-11-02 01:36:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>retornar-a-ultima-pasta-de-um-diretorio</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="category" nicename="aspnet"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="diretororio"><![CDATA[diretororio]]></category>
		<category domain="post_tag" nicename="retornar"><![CDATA[retornar]]></category>
		<category domain="post_tag" nicename="ultima-pasta"><![CDATA[ultima pasta]]></category>
		<category domain="post_tag" nicename="url"><![CDATA[url]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[c#, path, ultima, pasta, last, folder]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica e exemplifica como retornar a última pasta de um diretório]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Retornar a última pasta de um diretório]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[c#, path, ultima, pasta, last, folder]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica e exemplifica como retornar a última pasta de um diretório]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Retornar a última pasta de um diretório]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Jquery e UpdatePanel</title>
		<link>http://blog.maxcnunes.net/2010/11/02/jquery-e-updatepanel/</link>
		<pubDate>Tue, 02 Nov 2010 17:01:56 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[Problemas com a inicialização das suas funções em jquery, que não carregam após algum postback vindo de um updatepanel?

Facil resolver.

Ao invés de você usar o famoso <em><strong>$(document).ready()</strong></em>

[sourcecode language="javascript"]

$(document).ready(function(){

alert(&quot;Olá mundo!&quot;);

});

[/sourcecode]

Devemos utilizar o <em><strong>function pageLoad()</strong></em>

[sourcecode language="javascript"]

function pageLoad(){

alert(&quot;Olá mundo!&quot;);

}

[/sourcecode]

O assunto mais a fundo você encontra aqui: <a href="http://encosia.com/2009/03/25/document-ready-and-pageload-are-not-the-same/">http://encosia.com/2009/03/25/document-ready-and-pageload-are-not-the-same/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2010-11-02 17:01:56</wp:post_date>
		<wp:post_date_gmt>2010-11-02 17:01:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery-e-updatepanel</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="aspnet"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="js"><![CDATA[JavaScript]]></category>
		<category domain="category" nicename="jquery"><![CDATA[JQuery]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[javascript, updatepanel, jquery, document ready, pageload]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica e exemplifica o problema de funções javascript não funcionarem após um postback, dentro de um updatepanel.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Jquery e UpdatePanel]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[javascript, updatepanel, jquery, document ready, pageload]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica e exemplifica o problema de funções javascript não funcionarem após um postback, dentro de um updatepanel.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Jquery e UpdatePanel]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Alert no ASP.NET</title>
		<link>http://blog.maxcnunes.net/2010/11/23/alert-no-asp-net/</link>
		<pubDate>Tue, 23 Nov 2010 22:41:23 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=79</guid>
		<description></description>
		<content:encoded><![CDATA[Forma simples e pr tica de utilizar o alert no asp.net.

Utilizando essa classe estática, basta chamar diretamente o método em qualquer página que você estiver desenvolvendo.

Métodos da classe:
<ol>
	<li><strong>br()</strong> -&gt; Pula uma linha dentro do alert.</li>
	<li><strong>Exibir()</strong> - <em>2 Parâmetros</em> -&gt; Exibi uma caixa de mensagem, o alert.</li>
	<li><strong>Exibir()</strong> - <em>3 Par</em><em>â</em><em>metros</em> -&gt; Exibi uma caixa de mensagem, o alert. Posteriormete redireciona para a p gina desejada.</li>
	<li><strong>ExibirNovaJanela()</strong> -&gt; Exibi uma caixa de mensagem, o alert. Posteriormete abre a p gina desejada em uma nova janela.</li>
</ol>
<!--more-->

A classe cMensagem.cs

[sourcecode language="csharp"]

    public static string br()
    {
        return &quot;n&quot;;
    }

    /// &lt;summary&gt;
    /// Exibi uma janela de alerta
    /// &lt;/summary&gt;
    /// &lt;param name=&quot;mensagem&quot;&gt;Mensagem a ser exibida&lt;/param&gt;
    /// &lt;param name=&quot;pagina&quot;&gt;Página atual&lt;/param&gt;
    public static void Exibir(string mensagem, Page pagina)
    {
        ScriptManager.RegisterStartupScript(pagina, pagina.GetType(), Guid.NewGuid().ToString(), &quot;alert('&quot; + mensagem + &quot;');&quot;, true);
    }

    /// &lt;summary&gt;
    /// Exibi uma janela de alerta e posteriormente redireciona para outra p gina
    /// &lt;/summary&gt;
    /// &lt;param name=&quot;mensagem&quot;&gt;Mensagem a ser exibid&lt;/param&gt;
    /// &lt;param name=&quot;url&quot;&gt;;Página para qual ser  redirecionada&lt;/param&gt;
    /// &lt;param name=&quot;pagina&quot;&gt;Página atual&lt;/param&gt;
    public static void Exibir(string mensagem, string url, Page pagina)
    {
        //Esconde conteudo da página pagina.
        pagina.Form.Attributes.CssStyle.Add(&quot;display&quot;, &quot;none&quot;);
        ScriptManager.RegisterStartupScript(pagina, pagina.GetType(), Guid.NewGuid().ToString(), &quot;alert('&quot; + mensagem + &quot;'); location='&quot; + url + &quot;';&quot;, true);
    }

    public static void ExibirNovaJanela(string mensagem, string url, Page pagina)
    {
        ScriptManager.RegisterStartupScript(pagina, pagina.GetType(), Guid.NewGuid().ToString(), &quot;alert('&quot; + mensagem + &quot;'); window.open('&quot; + url + &quot;','_blank');&quot;, true);
    }
[/sourcecode]

Exibindo o alert em um click do botão por exemplo:

[sourcecode language="csharp"]

protected void btnEnviar_Click(object sender, EventArgs e)
{
      cMensagem.Exibir(&quot;Ola  Mundo!&quot;, this.Page);
}

[/sourcecode]

Exibindo um alert e em seguida redirecionando para a p gina desejada:

[sourcecode language="csharp"]

protected void btnEnviar_Click(object sender, EventArgs e)
{

      cMensagem.Exibir(&quot;Você ser  redirecionado para a página de cadastro!&quot;, &quot;PaginaCadastro.aspx&quot;, this.Page);
}

[/sourcecode]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2010-11-23 22:41:23</wp:post_date>
		<wp:post_date_gmt>2010-11-23 22:41:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>alert-no-asp-net</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="alert"><![CDATA[alert]]></category>
		<category domain="category" nicename="aspnet"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="asp-net"><![CDATA[asp.net]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="js"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="showmessage"><![CDATA[showMessage]]></category>
		<category domain="post_tag" nicename="showmessagebox"><![CDATA[showMessageBox]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[alert, javascript, c#, asp.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como exibir um alert do javascript no asp.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Alert no ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[alert, javascript, c#, asp.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como exibir um alert do javascript no asp.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Alert no ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>&quot;Salvar como&quot; no ASP.NET</title>
		<link>http://blog.maxcnunes.net/2010/12/26/salvar-como-no-asp-net/</link>
		<pubDate>Sun, 26 Dec 2010 20:26:59 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=84</guid>
		<description></description>
		<content:encoded><![CDATA[Muitas vezes quando estamos trabalhando em uma p gina, surge a necessidade de disponibiliar o download de um arquivo aos usu rios.

E para que o usu rio possa escolher onde salvar e como, devemos implementar uma janela de salvar como.

De maneira simples segue o código. No qual o arquivo é aberto e lido no lado do servidor e em seguida o navegador é-  forçado a-  abrir sua janela de "salvar como".

[sourcecode language="csharp"]

protected void Button1_Click(object sender, EventArgs e)
{
     //Pasta dentro do site

     string caminho = AppDomain.CurrentDomain.BaseDirectory + &quot;pasta/&quot;;
     //Nome do arquivo

     string arquivo = &quot;imgTemp.png&quot;;

     System.IO.FileStream fs = null;
     fs = System.IO.File.Open(caminho + arqivo, FileMode.Open);
     byte[] btFile = new byte[fs.Length];
     fs.Read(btFile, 0, Convert.ToInt32(fs.Length));
     fs.Close();
     Response.Buffer = true;
     Response.Expires = 0;
     Response.ContentType = &quot;plain/text&quot;;
     Response.AddHeader(&quot;Content-Type&quot;, &quot;plain/text&quot;);
     Response.AddHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=&quot; + arquivo);
     Response.Cache.SetCacheability(HttpCacheability.NoCache);
     Response.BinaryWrite(btFile);
     Response.End();
}

[/sourcecode]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date>2010-12-26 20:26:59</wp:post_date>
		<wp:post_date_gmt>2010-12-26 20:26:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>salvar-como-no-asp-net</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="aspnet"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="dialog-save"><![CDATA[dialog save]]></category>
		<category domain="post_tag" nicename="salvar-como"><![CDATA[salvar como]]></category>
		<category domain="post_tag" nicename="save-as"><![CDATA[save as]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[c#, salvar como, asp.net, bytes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial exemplifica como exibir o salvar como no asp.net.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA["Salvar como" no ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[c#, salvar como, asp.net, bytes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial exemplifica como exibir o salvar como no asp.net.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA["Salvar como" no ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Imprimir uma parte da página com prévia de impressão</title>
		<link>http://blog.maxcnunes.net/2011/01/21/imprimir-uma-parte-da-pagina-com-previa-de-impressao/</link>
		<pubDate>Fri, 21 Jan 2011 03:24:37 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=96</guid>
		<description></description>
		<content:encoded><![CDATA[Plugin JQuery desenvolvido por mim, para impressão de uma parte selecionada de p gina web com prévia de impressão em uma nova janela.

Demo: <a title="Demo WindowPrint" href="http://www.maxcnunes.net/demos/windowprint/" target="_blank">WindowPrint</a>

Download:<a title="Download" href="http://www.maxcnunes.net/demos/windowprint/WindowPrint.rar"> Projeto Demo WindowPrint</a>

<!--more-->

O código HTML - index.html

[sourcecode language="html"]
&lt;!DOCTYPE html PUBLIC  -//W3C//DTD XHTML 1.0 Transitional//EN   http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd &gt;
&lt;html xmlns= http://www.w3.org/1999/xhtml &gt;
&lt;head id= Head1  runat= server &gt;
    &lt;title&gt;Window Print&lt;/title&gt;
    &lt;script src=&quot;Js/jquery-1.4.1.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;Js/jquery-JCustom-Print.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        $(document).ready(function () {
            $('.buttonPrint').WindowPrint();
        });

    &lt;/script&gt;
    &lt;div id=&quot;divPrint&quot; style=&quot;text-align: center;&quot;&gt;
        Cras rutrum, nulla quis facilisis hendrerit, mauris augue bibendum urna, a ultrices
        libero leo in quam.
        &lt;br /&gt;
        Nullam ultrices cursus leo nec venenatis. Suspendisse facilisis, massa in pretium
        pellentesque, nisi sem pretium ipsum, et dapibus diam orci non arcu. Mauris venenatis
        fringilla mauris mollis condimentum.
        &lt;br /&gt;
        &lt;img src=&quot;Img/Penguins.jpg&quot; width=&quot;250&quot; /&gt;
        &lt;br /&gt;
        Phasellus arcu enim, lacinia eu vestibulum vitae, congue eu nunc. Curabitur nec
        metus sapien. In a dolor enim.
        &lt;br /&gt;
        Ut ultrices ultrices est eget suscipit.
        &lt;br /&gt;
    &lt;/div&gt;
    &lt;a href=&quot;javascript:;&quot;&gt;Imprimir Conteudo da Div ID = divPrint &lt;/a&gt;
    &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;

[/sourcecode]

Aplicando o plugin ao botão de impressão

[sourcecode language="javascript"]

$(document).ready(function () {
        $('.buttonPrint').WindowPrint();
    });
[/sourcecode]

Caso sua dive possua outro ID, basta passar um novo parametro:

[sourcecode language="javascript"]

 $(document).ready(function () {
        $('.buttonPrint').WindowPrint({ area:  #MeuID  });
    });
[/sourcecode]

Lista de parametros opcionais:
<ol>
	<li><strong>area</strong>: <em>"#divPrint"</em>,- - - - - - -  Seletor Css do conteudo a ser impresso</li>
	<li><strong>title</strong>: <em>"Imprimir"</em>, -  -  -  Nome da pagina prévia</li>
	<li><strong>srcImgHead</strong>: <em>"http://www.google.com.br/intl/en_com/images/srpr/logo1w.png"</em>,- - - - -  Origem da imagem do cabeçalho</li>
	<li><strong>srcIconePrint</strong>: <em>"http://cdn1.iconfinder.com/data/icons/aspneticons_v1.0_Nov2006/print_16x16.gif"</em>,- - - - -  Origem do icone de impressão</li>
	<li><strong>head</strong>: <em>true</em>, -  - -  Se possui o cabeçalho na impressão</li>
	<li><strong>windowStatus</strong>: <em>false</em>,- - - -  Se estar visivel na nova janela o Status</li>
	<li><strong>windowScrollbars</strong>: <em>true</em>,- -  Se estar visivel na nova janela a Barra de Rolagem</li>
	<li><strong>windowToolbar</strong>: <em>false</em>,- - -  Se estar visivel na nova janela o ToolBar</li>
	<li><strong>windowWith</strong>: <em>0</em>,- - - -  Largura da janela, se for 0, pega automatico</li>
	<li><strong>windowHeight</strong>: <em>0</em>,- -  Altura da janela, se for 0, pega automatico</li>
	<li><strong>srcCSS</strong>: "",- - -  Origem do css da p gina</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>96</wp:post_id>
		<wp:post_date>2011-01-21 03:24:37</wp:post_date>
		<wp:post_date_gmt>2011-01-21 03:24:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>imprimir-uma-parte-da-pagina-com-previa-de-impressao</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="imprimir"><![CDATA[imprimir]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="jquery"><![CDATA[JQuery]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[JQuery]]></category>
		<category domain="post_tag" nicename="previa"><![CDATA[previa]]></category>
		<category domain="post_tag" nicename="print"><![CDATA[print]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[imprimir, parte, pagina, previa, impressão, javascript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como imprimir uma parte da página com prévia de impressão]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Imprimir uma parte da página com prévia de impressão]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[imprimir, parte, pagina, previa, impressão, javascript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como imprimir uma parte da página com prévia de impressão]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Imprimir uma parte da página com prévia de impressão]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1563</wp:comment_id>
			<wp:comment_author><![CDATA[maxcnunes]]></wp:comment_author>
			<wp:comment_author_email>maxcnunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.204.32.39</wp:comment_author_IP>
			<wp:comment_date>2014-06-17 00:12:02</wp:comment_date>
			<wp:comment_date_gmt>2014-06-17 00:12:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Infelizmente acabei perdendo esses arquivos quando migrei de host =/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>686</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402963925.4069778919219970703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>686</wp:comment_id>
			<wp:comment_author><![CDATA[Uélinton Morelli]]></wp:comment_author>
			<wp:comment_author_email>uelintond@yahoo.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>186.251.124.2</wp:comment_author_IP>
			<wp:comment_date>2014-05-09 16:01:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-09 16:01:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Amigão o link do download não está funcionando, se puder arruma ae! Obrigado]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402963855.7060871124267578125;s:7:"message";s:48:"maxcnunes changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1399651260.0620439052581787109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Validação com REGEX Compiled</title>
		<link>http://blog.maxcnunes.net/2011/02/11/validacao-com-regex-compiled/</link>
		<pubDate>Fri, 11 Feb 2011 02:09:12 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=132</guid>
		<description></description>
		<content:encoded><![CDATA[Uma classe simples de expressões regulares com vários tipos de validações.

<span style="text-decoration: underline;">Antes dos código, um pouco da definição da "Regex"
</span>

[caption id="attachment_136" align="alignleft" width="150" caption="Regex"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/02/regex.jpg"><img class="size-thumbnail wp-image-136" style="border: 1px solid black; margin: 3px;" title="regex" src="http://blog.maxcnunes.net/wp-content/uploads/2011/02/regex-150x150.jpg" alt="" width="150" height="150" /></a>[/caption]

<strong>Expressão Regular:</strong> <em>Uma composição de símbolos, caracteres com funções especiais, que, agrupados entre si e com caracteres literais, formam uma sequência, uma expressão. Essa expressão é interpretada como uma regra, que indicaría sucesso se uma entrada de dados qualquer casar com essa regra, ou seja, obedecer exatamente a todas as suas condições.</em>

Segundo testes publicados neste artigo <a href="http://dotnetperls.com/regex-performance">http://dotnetperls.com/regex-performance</a> o Regex Compiled toma 10x mais tempo na partida, mas os rendimentos de tempo de execução são 30% melhor.

<!--more-->

Primeiro crie a classe de validação:

[csharp title="Validate.cs"]
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Text.RegularExpressions;

/// summary
/// Classe de validação
/// summary
public static class ValidateField
{
    /// summary
    /// Enum com os tipos de Validacoes
    /// summary
    public static enum TipoValidacao { CPF, CNPJ, Data, Tempo, Email, CEP, Telefone, Decimal, URL };

    /// summary
    /// Expressão regular com as regras do CPF
    /// summary
    protected static Regex _cpf = new Regex(@&quot;^d{3}.?d{3}.?d{3}-?d{2}$&quot;, RegexOptions.Compiled);

    /// &lt;summary&gt;
    /// Expressão regular com as regras de cnpj
    /// &lt;/summary&gt;
    protected static Regex _cnpj = new Regex(@&quot;(^(d{2}.d{3}.d{3}/d{4}-d{2})|(d{14})$)&quot;);

    /// &lt;summary&gt;
    /// Expressão regular com as regras de data Ex: 23/09/2011
    /// &lt;/summary&gt;
    protected static Regex _data = new Regex(@&quot;^((0[1-9]|[12]d)/(0[1-9]|1[0-2])|30/(0[13-9]|1[0-2])|31/(0[13578]|1[02]))/d{4}$&quot;, RegexOptions.Compiled);

    /// &lt;summary&gt;
    /// Expressão regular com as regras de tempo Ex: 12:35
    /// &lt;/summary&gt;
    protected static Regex _tempo = new Regex(@&quot;(([0-1][0-9])|([2][0-3])):([0-5][0-9])&quot;);

    /// &lt;summary&gt;
    /// Expressão regular com as regras de e-mail Ex: nickname@email.com
    /// &lt;/summary&gt;
    protected static Regex _email = new Regex(@&quot;^[A-Za-z0-9](([_.-]?[a-zA-Z0-9]+)*)@([A-Za-z0-9]+)(([.-]?[a-zA-Z0-9]+)*).([A-Za-z]{2,})$&quot;);

    /// &lt;summary&gt;
    /// Expressão regular com as regras de cep Ex: 87094-132
    /// &lt;/summary&gt;
    protected static Regex _cep = new Regex(@&quot;^[0-9]{5}-[0-9]{3}$&quot;);

    /// &lt;summary&gt;
    /// Expressão regular com as regras de telefone Ex: (44)3344-4332
    /// &lt;/summary&gt;
    protected static Regex _telefone = new Regex(@&quot;^(d{2})d{4}-d{4}$&quot;);

    /// &lt;summary&gt;
    /// Expressão regular com as regras de telefone Ex: 405,00 ou 405.00
    /// &lt;/summary&gt;
    protected static Regex _decimal = new Regex(@&quot;^(?=d+)d{0,4}([.,]d{0,2})?$&quot;);

    /// &lt;summary&gt;
    /// Expressão regular com as regras de url Ex: http://www.maxcnunes.net
    /// &lt;/summary&gt;
    protected static Regex _url = new Regex(@&quot;^(ht|f)tp(s?)://[0-9a-zA-Z]([-.w]*[0-9a-zA-Z])*(:(0-9)*)*(/?)([a-zA-Z0-9-.?,'/+&amp;amp;amp;%$#_]*)?$&quot;);

    /// &lt;summary&gt;
    /// Método de validação
    /// &lt;/summary&gt;
    /// &lt;param name=&quot;value&quot;&gt;Valor string a ser validado&lt;/param&gt;
    /// &lt;param name=&quot;type&quot;&gt;Tipo enum da validação&lt;/param&gt;
    /// &lt;returns&gt;False se estiver inv lido&lt;/returns&gt;
    public static bool ValidateField(string value, TipoValidacao type)
    {
        bool validate = false;

        switch (type)
        {
            case TipoValidacao.CPF: validate = _cpf.IsMatch(value) ? true : false;
                break;
            case TipoValidacao.CNPJ: validate = _cnpj.IsMatch(value) ? true : false;
                break;
            case TipoValidacao.Data: validate = _data.IsMatch(value) ? true : false;
                break;
            case TipoValidacao.Tempo: validate = _tempo.IsMatch(value) ? true : false;
                break;
            case TipoValidacao.Email: validate = _email.IsMatch(value) ? true : false;
                break;
            case TipoValidacao.CEP: validate = _cep.IsMatch(value) ? true : false;
                break;
            case TipoValidacao.Telefone: validate = _telefone.IsMatch(value) ? true : false;
                break;
            case TipoValidacao.Decimal: validate = _decimal.IsMatch(value) ? true : false;
                break;
            case TipoValidacao.URL: validate = _url.IsMatch(value) ? true : false;
                break;
            default: validate = false;
                break;
        }
        return validate;
    }
}
[/csharp]

Utilizar a classe onde desejar, exemplo ao disparar o evento click do botão em uma p gina ASP.NET:

[sourcecode language="csharp"]
protected void ButtonValidate_Click(object sender, EventArgs e)
 {
     if (!Validate(TextBoxCPF.Text, ValidateField.TipoValidacao.CPF))
     {
         Response.Write(&quot;CPF est  em um formato inv lido!&quot;);
         return;
     }
     if (!Validate(TextBoxDataNascimento.Text, ValidateField.TipoValidacao.Data))
     {
         Response.Write(&quot;Data de nascimento est  em um formato inv lido!&quot;);
         return;
     }
 }
[/sourcecode]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>132</wp:post_id>
		<wp:post_date>2011-02-11 02:09:12</wp:post_date>
		<wp:post_date_gmt>2011-02-11 02:09:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>validacao-com-regex-compiled</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="aspnet"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="cnpj"><![CDATA[cnpj]]></category>
		<category domain="post_tag" nicename="cpf"><![CDATA[cpf]]></category>
		<category domain="post_tag" nicename="data"><![CDATA[data]]></category>
		<category domain="post_tag" nicename="expressao"><![CDATA[expressÃ£o]]></category>
		<category domain="post_tag" nicename="expression"><![CDATA[expression]]></category>
		<category domain="post_tag" nicename="hora"><![CDATA[hora]]></category>
		<category domain="post_tag" nicename="regex"><![CDATA[regex]]></category>
		<category domain="post_tag" nicename="regular"><![CDATA[regular]]></category>
		<category domain="post_tag" nicename="tempo"><![CDATA[tempo]]></category>
		<category domain="post_tag" nicename="validate"><![CDATA[validate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[regex,validação, compiled, c#, expressão regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica e exemplifica sobre a utilização de expressões regulares (REGEX) compiladas na validação de strings]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Validação com REGEX Compiled]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[regex,validação, compiled, c#, expressão regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica e exemplifica sobre a utilização de expressões regulares (REGEX) compiladas na validação de strings]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Validação com REGEX Compiled]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Usando o Dictionary</title>
		<link>http://blog.maxcnunes.net/2011/02/12/usando-dictionary/</link>
		<pubDate>Sat, 12 Feb 2011 20:08:15 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_162" align="alignleft" width="150" caption="Dictionary"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/02/hk_20080207_dictionary.jpg"><img class="size-thumbnail wp-image-162" style="margin: 3px; border: 1px solid black;" title="Usando Dictionary c#" src="http://blog.maxcnunes.net/wp-content/uploads/2011/02/hk_20080207_dictionary-150x150.jpg" alt="Usando Dictionary c#" width="150" height="150" /></a>[/caption]

Existem muitas formas de armazenar e recuperar dados no c#. Muitas vezes recorremos a arrays, listas, datatables e dentre outros. Porêm, algumas dessas alternativas, como o array, deixa a desejar na performance.

Neste artigo vou mostrar um pouco do Dictionary, uma classe contida no System.Collections.Generic, que possui uma alta performance mesmo quando utilizada com grandes quantidades de dados.

<span style="text-decoration: underline;">Definição</span> - <span style="color: #3366ff;"><span style="color: #3366ff;"><span style="color: #3366ff;"><strong>Dictionary:</strong></span> <span style="color: #333333;">Representa um coleção de chaves e valores.</span></span></span>

<span style="color: #3366ff;"><span style="color: #3366ff;"><span style="color: #333333;"><!--more--></span></span></span>

[csharp title="Inicializando o objeto com valores pré-definidos"]
public Dictionary Frutas = new Dictionary()
    {
        {0,  Laranja  },
        {1,  Maçã  },
        {2,  Goiaba  }
    };
[/csharp]

&nbsp;

[csharp title="Adicionando novos intens em tempo de execução"]
        Frutas.Add(3,  Pêssego );
        Frutas.Add(4,  Melancia );
        Frutas.Add(5,  Abacaxi );
[/csharp]

&nbsp;

[csharp title="Removendo um item em tempo de execução"]
        Frutas.Remove(3);//Remove o Pêssego
[/csharp]

&nbsp;

[csharp title="Recuperando um valor de um item em tempo de execução"]
        //Uma opção
        string minhaFruta = Frutas[1];//Retorna a Melancia

        //Outra opção - usando linq e lambda
        string outraFruta = Frutas.First(f =&gt; f.Key == 2).Value;
[/csharp]

&nbsp;

[csharp title="Populando um dropdownlist através de um Dictionary"]
        DropDownListFrutas.DataSource = Frutas;
        DropDownListFrutas.DataValueField =  Key ;
        DropDownListFrutas.DataTextField =  Value ;
        DropDownListFrutas.DataBind();
[/csharp]

Como vocês viram, o dictionary trabalha com uma chave e um valor. Sendo assim, ele não aceita valores repetidos para a chave.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2011-02-12 20:08:15</wp:post_date>
		<wp:post_date_gmt>2011-02-12 20:08:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>usando-dictionary</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="dictionary"><![CDATA[dictionary]]></category>
		<category domain="post_tag" nicename="key"><![CDATA[key]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[performance]]></category>
		<category domain="post_tag" nicename="retornar"><![CDATA[retornar]]></category>
		<category domain="post_tag" nicename="value"><![CDATA[value]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[dictionary, c#]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como utilizar o dictionary no c#]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Usando o Dictionary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[dictionary, c#]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como utilizar o dictionary no c#]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Usando o Dictionary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Leandro]]></wp:comment_author>
			<wp:comment_author_email>leandroscudeler@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.22.74.80</wp:comment_author_IP>
			<wp:comment_date>2011-08-04 20:55:49</wp:comment_date>
			<wp:comment_date_gmt>2011-08-04 20:55:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Só uma correção, no exemplo estará retornando Maça.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1312491349.85";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1312665590.54";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[maxcnunes]]></wp:comment_author>
			<wp:comment_author_email>maxcnunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.62.31.81</wp:comment_author_IP>
			<wp:comment_date>2011-08-06 21:19:50</wp:comment_date>
			<wp:comment_date_gmt>2011-08-06 21:19:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Obrigado por perceber.
Pronto, agora está certo.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1312665590.51";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Failed to generate a user instance of SQL Server ...</title>
		<link>http://blog.maxcnunes.net/2011/02/23/failed-to-generate-a-user-instance-of-sql-server-due-to-a-failure-in-starting-the-process-for-the-user-instance-the-connection-will-be-closed/</link>
		<pubDate>Wed, 23 Feb 2011 00:34:24 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=169</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="div_conteudo">
<div>
<div>

[caption id="attachment_172" align="alignleft" width="150" caption="ERROR"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/02/images.jpg"><img class="size-thumbnail wp-image-172 " style="margin: 3px;" title="erro sql server express" src="http://blog.maxcnunes.net/wp-content/uploads/2011/02/images-150x150.jpg" alt="" width="150" height="150" /></a>[/caption]

Ao abrir pelo Visual Studio, um arquivo .mdf, a conexão falhava e aparecia a seguinte mensagem <em>"Failed to generate a user instance of SQL Server due to a failure in starting the process for the user instance. The connection will be closed."</em>.

<!--more-->

Após procurar um pouco na internet achei a seguinte solução:
<ol>
	<li>Acesse o seguinte local - "c:Documents and Settings[user]Local SettingsApplication DataMicrosoftMicrosoft SQL Server Data".</li>
	<li>Exclua a pasta "SQLEXPRESS"</li>
</ol>
O motivo que encontrei deste erro é que o nome da instância tanto no Express 2005 como no 2008 era SQLEXPRESS, e os arquivos de configurações de usuário estavam errados. E após excluir, os arquivos são criados novamente com uma nova configuração.

</div>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2011-02-23 00:34:24</wp:post_date>
		<wp:post_date_gmt>2011-02-23 00:34:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>failed-to-generate-a-user-instance-of-sql-server-due-to-a-failure-in-starting-the-process-for-the-user-instance-the-connection-will-be-closed</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bancodedados"><![CDATA[Banco de Dados]]></category>
		<category domain="category" nicename="erro"><![CDATA[Erro]]></category>
		<category domain="post_tag" nicename="erro-2"><![CDATA[erro]]></category>
		<category domain="post_tag" nicename="failed"><![CDATA[Failed]]></category>
		<category domain="post_tag" nicename="generate"><![CDATA[generate]]></category>
		<category domain="post_tag" nicename="sqlexpress"><![CDATA[SQLEXPRESS]]></category>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[ERRO, ERROR,Failed, generate, instance,SQL Server]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como corrigir o erro Failed to generate a user instance of SQL ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Failed to generate a user instance of SQL Server]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[ERRO, ERROR,Failed, generate, instance,SQL Server]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como corrigir o erro Failed to generate a user instance of SQL ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Failed to generate a user instance of SQL Server]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Utilizando Replace em uma query de UPDATE</title>
		<link>http://blog.maxcnunes.net/2011/06/29/utilizando-replace-em-uma-query-de-update/</link>
		<pubDate>Wed, 29 Jun 2011 02:36:24 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=186</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_193" align="alignleft" width="150" caption="Replace SQL"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/06/reforma-ortográfica.jpg"><img class="size-thumbnail wp-image-193" title="Replace SQL" src="http://blog.maxcnunes.net/wp-content/uploads/2011/06/reforma-ortográfica-150x150.jpg" alt="Replace SQL" width="150" height="150" /></a>[/caption]

Depois de passar um tempo sem escrever nenhum artigo, após a transferência do servidor do blog, estou retomando as atividades por aqui.

E este artigo envolve exatamente esta transferência de servidor.

Por algum motivo, todos os caractéres com acentos especiais no banco, se transformaram em símbolos. Para resolver esse problema, utilizei o REPLACE, substituido todos estes carácters inválidos pelos acentos originais.

<!--more-->

O <span style="color: #ff0000;">REPLACE</span> funciona da seguinte forma:

[sourcecode language="sql"]
--Definicao
replace(`texto_original`, 'valor_atual', 'novo_valor');

--Exemplo pratico
replace(`papagaio`, 'a', '-');
--O retoro -&gt; p-p-g-io
[/sourcecode]

Como demonstrado o REPLACE retorna a cópia do texto passado com a  substituição dos caractéres definidos.

Para salvar esse retorno, faremos assim:

[sourcecode language="sql"]
--Definicao
UPDATE `nome_tabela`
SET    `nome_coluna` = replace(`nome_coluna`, 'valor_atual', 'novo_valor')
WHERE  `nome_coluna` LIKE '%valor_atual%';

--Exemplo pratico
UPDATE `usuarios`
SET    `nome` = replace(`nome`, 'Maria', 'Mariana')
WHERE  `nome` LIKE '%Maria%';
--Atualiza todos os registros da tabela usuarios, na coluna nome,
--substituindo Maria por Mariana
[/sourcecode]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date>2011-06-29 02:36:24</wp:post_date>
		<wp:post_date_gmt>2011-06-29 02:36:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>utilizando-replace-em-uma-query-de-update</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="banco"><![CDATA[banco]]></category>
		<category domain="category" nicename="bancodedados"><![CDATA[Banco de Dados]]></category>
		<category domain="post_tag" nicename="dados"><![CDATA[dados]]></category>
		<category domain="post_tag" nicename="data-base"><![CDATA[data base]]></category>
		<category domain="post_tag" nicename="replace"><![CDATA[replace]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="post_tag" nicename="sql-2"><![CDATA[sql]]></category>
		<category domain="post_tag" nicename="substituir"><![CDATA[substituir]]></category>
		<category domain="post_tag" nicename="update"><![CDATA[update]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[sql, replace, update, query]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica e exemplifica como utilizar replace em um query sql de update]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Utilizando Replace em uma query de UPDATE]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[sql, replace, update, query]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica e exemplifica como utilizar replace em um query sql de update]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Utilizando Replace em uma query de UPDATE]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[Raphael Leal]]></wp:comment_author>
			<wp:comment_author_email>rleal@terraviva.agr.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.206.13.194</wp:comment_author_IP>
			<wp:comment_date>2011-08-25 20:54:09</wp:comment_date>
			<wp:comment_date_gmt>2011-08-25 20:54:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá, tudo bem?

Realizei alguns teste e todos foram realizados com sucesso. parabéns!!

Veja se vc consegue me ajudar com a seguinte questão:

Tenho uma tabela com 1.000 registros;
Preciso realizar um update de um campo onde ele tera três condições, ou seja, um "De" "Para".
Exemplo.
Se Filial = '01', faca update de filial para '02'
Se Filial = '04', faca update de filial para '08'
e assim por diante. observe que o campo é um só.
queria evitar de fazer varios update's setando a condição no where.

Raphael Leal]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1314305649.65";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1314448312.96";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[maxcnunes]]></wp:comment_author>
			<wp:comment_author_email>maxcnunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.62.31.81</wp:comment_author_IP>
			<wp:comment_date>2011-08-27 12:31:52</wp:comment_date>
			<wp:comment_date_gmt>2011-08-27 12:31:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá, obrigado pela interação.

Bem se eu entendi, você só precisa atualizar o valor completo da coluna. Então um UPDATE sem replace ja resolveria. ok?
Para automatizar isso precisamos de uma lógica a ser seguida.
Segundo o que entendi da sua, seria apenas dobrar o valor da filial. 

[sourcecode language="sql"]
      UPDATE Funcionario
      SET FilialID = (FilialID * 2);
[/sourcecode]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1314448312.93";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>153</wp:comment_id>
			<wp:comment_author><![CDATA[Jailson Osório]]></wp:comment_author>
			<wp:comment_author_email>eng.josorio150@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://j2kforever.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>41.221.194.226</wp:comment_author_IP>
			<wp:comment_date>2013-12-13 10:13:49</wp:comment_date>
			<wp:comment_date_gmt>2013-12-13 10:13:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Eu penso que não tinha necessidade de utilizar a condição "like", apenas replace ex: 
update usuários set nome = replace(nome,'Maria','Mariana'); fazem praticamente a mesma coisa, e como sabemos quanto menus codigo utilizamos desde que fazem a mesma coisa, é melhor.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387459583.339374065399169921875;s:7:"message";s:48:"maxcnunes changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386929629.6591699123382568359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>154</wp:comment_id>
			<wp:comment_author><![CDATA[maxcnunes]]></wp:comment_author>
			<wp:comment_author_email>maxcnunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.65.234.234</wp:comment_author_IP>
			<wp:comment_date>2013-12-19 13:29:43</wp:comment_date>
			<wp:comment_date_gmt>2013-12-19 13:29:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sim funcionária. Mas sem o where iria ter que percorrer todos os registros na tabela o que tornaria a execução mais lenta no caso de existir muitos registros.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>153</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387459783.5209369659423828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Listando mensagens do Twitter - MVC</title>
		<link>http://blog.maxcnunes.net/2011/07/10/listando-mensagens-do-twitter-mvc/</link>
		<pubDate>Sun, 10 Jul 2011 22:31:22 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=204</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_205" align="alignleft" width="150" caption="Twitter MVC"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/07/Twitter-Mensagens-MVC.jpg"><img class="size-thumbnail wp-image-205" title="Twitter-Mensagens-MVC" src="http://blog.maxcnunes.net/wp-content/uploads/2011/07/Twitter-Mensagens-MVC-150x150.jpg" alt="" width="150" height="150" /></a>[/caption]

O Twitter tornou-se uma forte ferramenta de comunicação na web. Cada vez mais empresas e usuários aderem ao Twitter. Pela sua enorme facilidade de disseminar informações.

Sendo assim, se você trabalha com o desenvolvimento de websites, muito provavelmente vai passar por um projeto no qual o usuário vai solicitar que as suas últimas mensagens do twitter apareçam no site.

Dito isso, vamos ao que interessa!

A parte mais iportante desse código é representada pela classe Twitter.cs. Tratando cada mensagem como um objeto, esta classe possui as propriedades como <strong>Autor da mensagem, Link, Foto do Autor, Conteúdo da Mensagem</strong>. O que essa classe faz é uma requisição para a API do Twitter passando um filtro desejado, formado através de querys strings.

Para entender mais sobre a API e seus filtros acesse <a href="http://dev.twitter.com/" target="_blank">http://dev.twitter.com/</a>.

<!--more-->

A classe Twitter:

[sourcecode language="csharp"]
    public class Twitter
    {
        public string AuthorName { get; set; }
        public string AuthorUri { get; set; }
        public string Content { get; set; }
        public string Updated { get; set; }
        public string Link { get; set; }

        public static List&lt;Twitter&gt; GetTwitter(string search)
        {
            //Faz a pesquisa no twitter de acordo com o filtro passado
            var request = WebRequest.Create(&quot;http://search.twitter.com/search.atom?&quot; + search) as HttpWebRequest;
            var twitterViewData = new List&lt;Twitter&gt;();

            if (request != null)
            {
                using (var response = request.GetResponse() as HttpWebResponse)
                {
                    //Lê o xml do resultado da pesquisa
                    using (var reader = new StreamReader(response.GetResponseStream()))
                    {
                        var document = XDocument.Parse(reader.ReadToEnd());
                        XNamespace xmlns = &quot;http://www.w3.org/2005/Atom&quot;;

                        //Cria uma lista do resultado
                        twitterViewData = (from entry in document.Descendants(xmlns + &quot;entry&quot;)
                                           select new Twitter
                                           {
                                               Content = entry.Element(xmlns + &quot;content&quot;).Value,
                                               Updated = Format_DateTime(entry.Element(xmlns + &quot;updated&quot;).Value),
                                               AuthorName = entry.Element(xmlns + &quot;author&quot;).Element(xmlns + &quot;name&quot;).Value,
                                               AuthorUri = entry.Element(xmlns + &quot;author&quot;).Element(xmlns + &quot;uri&quot;).Value,
                                               Link = (from o in entry.Descendants(xmlns + &quot;link&quot;)
                                                       where o.Attribute(&quot;rel&quot;).Value == &quot;image&quot;
                                                       select new { Val = o.Attribute(&quot;href&quot;).Value }).First().Val
                                           }).ToList();
                    }
                }
            }

            return twitterViewData;
        }

        public static string Format_DateTime(string value)
        {
            // Cria um CultureInfo para o Português.
            CultureInfo ci = new CultureInfo(&quot;pt-BR&quot;);

            value = value.Replace(&quot;T&quot;, &quot; &quot;).Replace(&quot;Z&quot;, string.Empty);

            DateTime _Date;
            if (!DateTime.TryParse(value, out _Date))
                throw new ArgumentException(&quot;Erro ao converter.&quot;);

            // Formata a data para o formato de tempo brasileiro.
            return _Date.ToString(ci);
        }
[/sourcecode]

O controller, na Action Result Index, solicita a lista de mensagens do Twitter pelo metodo GetTwitter da classe Twitter e passa esses valores para a propriedade dinâmica Twitter na ViewBag:

[sourcecode language="csharp"]

    public class TwitterController : Controller
    {
        //
        // GET: /Twitter/

        public ActionResult Index()
        {
            //Passa como parametro o valor da pesquisa
            //Neste exemplo:
            //from -&gt; Filtra as mensagens por usuário
            //rpp  -&gt; Retorna apenas os últimos 15 resultados
            ViewBag.Twitter = Models.Twitter.GetTwitter(&quot;from=twitterapi&amp;rpp=15&quot;);
            return View();
        }

    }
[/sourcecode]

A View recebe a lista através da ViewBag e carrega seus valores de acordo com a formatação seguinte:

[sourcecode language="csharp"]
@{
    ViewBag.Title = &quot;Lista de Mensagens do Twitter&quot;;
}

&lt;h2&gt;
    Index&lt;/h2&gt;
&lt;div id=&quot;Twitter&quot;&gt;
    &lt;div class=&quot;titleTwitter&quot;&gt;
        @{
            var userTwitter = ((List&lt;MvcTwitter.Models.Twitter&gt;)ViewBag.Twitter).FirstOrDefault();
            &lt;a href=&quot;@userTwitter.AuthorUri&quot; target=&quot;_blank&quot; class=&quot;userTwiiter&quot;&gt;
                &lt;img src=&quot;@userTwitter.Link&quot; alt=&quot;Twitter Logo&quot; /&gt;@userTwitter.AuthorName&lt;/a&gt;
        }
    &lt;/div&gt;
    &lt;ul&gt;
        @foreach (var item in ViewBag.Twitter)
        {
            &lt;li&gt;
                @Html.Raw(item.Content)
                &lt;span&gt;@item.Updated&lt;/span&gt; &lt;/li&gt;
        }
    &lt;/ul&gt;
    &lt;div class=&quot;titleTwitter&quot;&gt;
        &lt;a href=&quot;&quot;&gt;
            &lt;img alt=&quot;Twitter&quot; alt=&quot;Twitter&quot; src=&quot;@Url.Content(&quot;~/Content/Image/link_twitter.png&quot;)&quot;&gt;Twitter&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

[/sourcecode]

Estilo css, pra dar uma melhorada no visual:

[sourcecode language="css"]

/*
-------Twitter*/
#Twitter
{
    border: 1px solid #8AA2AA;
    padding:1px;
}
.titleTwitter
{
    background: #8AA2AA;
    padding: 5px 10px;
}
.titleTwitter a
{
    font-size:8pt;
    color:#fff;
}
.titleTwitter img
{

    margin-right: 5px;
    vertical-align:middle;
}
.userTwitter img
{
    width: 30px;
}
#Twitter ul
{
    list-style:none;
    margin:0;
    padding:0;
}
#Twitter ul li
{
    font-size: 8pt;
    border-bottom: 1px solid #ccc;
    padding:10px 5px;
    text-align:justify;
}
#Twitter ul li a
{
    font-weight:bold;
}
#Twitter ul li span
{
    display:block;
    text-align:left;
    font-size:7pt;
}
#Twitter ul li:hover
{
    background:#CCEEF9;
}
[/sourcecode]

Fonte:<a href="http://www.dotnetcurry.com/ShowArticle.aspx?ID=536">Using ASP.NET MVC 2 to Query Twitter's Public API - FIFA 2010</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>204</wp:post_id>
		<wp:post_date>2011-07-10 22:31:22</wp:post_date>
		<wp:post_date_gmt>2011-07-10 22:31:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>listando-mensagens-do-twitter-mvc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="api"><![CDATA[api]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="mensagens"><![CDATA[mensagens]]></category>
		<category domain="category" nicename="mvc"><![CDATA[MVC]]></category>
		<category domain="post_tag" nicename="mvc-2"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="razor"><![CDATA[razor]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[asp.net,mvc, twitter, listar, mensagens,c#]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como listar mensagens do Twitter em uma aplicação ASP.NET MVC.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Listando mensagens do Twitter - MVC]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[asp.net,mvc, twitter, listar, mensagens,c#]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como listar mensagens do Twitter em uma aplicação ASP.NET MVC.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Listando mensagens do Twitter - MVC]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Escondendo o MenuItemTemplate</title>
		<link>http://blog.maxcnunes.net/2011/07/24/escondendo-o-menuitemtemplate/</link>
		<pubDate>Sun, 24 Jul 2011 16:07:30 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=211</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_224" align="alignleft" width="150" caption="Sharepoint MenuItemTemplate"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/07/sharepoint-menu-item-template.jpg"><img class="size-thumbnail wp-image-224" title="Sharepoint Menu Item Template" src="http://blog.maxcnunes.net/wp-content/uploads/2011/07/sharepoint-menu-item-template-150x86.jpg" alt="" width="150" height="86" /></a>[/caption]

Trabalhando com sharepoint, uma situação que eu sempre tive dificuldade em resolver e não sabia como, era a dúvida de como esconder itens do MenuTemplate do Sharepoint, associados ao um SPMenuField dentro da Gridview de acordo com cada registro.

<!--more-->

<strong>Por exemplo:</strong>
Em uma lista de clientes, que irei carregar na gridview, podem possuir duas situações.
O cliente pode estar como cadastrado ou excluído.
E meu sharepoint menu template pode possuir duas opções, ver os detalhes do cliente ou excluí-lo.
Sendo assim, não faz sentido manter a opção de excluir visível quando o cliente já estiver sido excluído.
Não é?

A solução para isso é muito simples.
Utilizando o evento "<span style="color: #ff0000;">RowCreated</span>" da Gridview, será percorrido linha-à-linha da Gridview. Recuperando o 1º Controle da 1ª Célula de cada linha, que neste exemplo é onde o SPMenufield está localizado.
Com o SPMenuField recuperado, basta passar o Id do MenuItemTemplate que não deverá estar visível na linha atual.

Primeiro monte a página aspx, com os controles Sharepoint:MenuTemplate, Sharepoint:MenuItemTemplate, SharePoint:SPMenuField e SPGridView ou a GridView padrão mesmo.

[sourcecode language="html"]
    &lt;!-- Sharepoint MenuTemplate --&gt;
    &lt;SharePoint:MenuTemplate ID=&quot;mtEventMenu&quot; runat=&quot;server&quot;&gt;

        &lt;%-- 1º Item Menu - Detalhe --%&gt;
        &lt;SharePoint:MenuItemTemplate ID=&quot;mitDetails&quot; runat=&quot;server&quot; Text=&quot;Detalhes&quot;
            ImageUrl=&quot;/_layouts/images/details.gif&quot;
            ClientOnClickScript=&quot;performPostBack('DETAILS,%Id%');&quot; Title=&quot;Detalhes&quot;&gt;
        &lt;/SharePoint:MenuItemTemplate&gt;

        &lt;%-- 2º Item Menu - Excluir --%&gt;
        &lt;SharePoint:MenuItemTemplate ID=&quot;mitDelete&quot; runat=&quot;server&quot; Text=&quot;Excluir&quot;
            ImageUrl=&quot;/_layouts/images/delete.gif&quot;
            ClientOnClickScript=&quot;performPostBack('DELETE,%Id%');&quot; Title=&quot;Excluir&quot;&gt;
        &lt;/SharePoint:MenuItemTemplate&gt;

    &lt;/SharePoint:MenuTemplate&gt;

    &lt;!-- Poderia ter utilizado uma SPGridView ao invés da GridView--&gt;
    &lt;asp:GridView ID=&quot;GridView1&quot; runat=&quot;server&quot; DataKeyNames=&quot;Id&quot;
        onrowcreated=&quot;GridView1_RowCreated&quot;&gt;
        &lt;Columns&gt;
            &lt;SharePoint:SPMenuField
                HeaderText=&quot;Nome&quot;
                TextFields=&quot;Nome&quot;
                MenuTemplateId=&quot;mtEventMenu&quot;
                TokenNameAndValueFields=&quot;Id=Id&quot;
                SortExpression=&quot;Id&quot; /&gt;
            &lt;%-- adicione codigo para outras colunas --%&gt;
        &lt;/Columns&gt;
    &lt;/asp:GridView&gt;
[/sourcecode]

E no codebehind, veja como é facil esconder o MenuItemTemplate de cada linha da gridview, utilizando o evento RowCreated:

[sourcecode language="csharp" highlight="29,41,45,51"]
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace WebApplication1
{
    public partial class _Default : System.Web.UI.Page
    {
        //Como demonstraçao, foi criado um enum de situacoes do cliente
        enum Situacao { Cadastrado = 0, Excluido = 1 };

        protected void Page_Load(object sender, EventArgs e)
        {
            //Uma lista para preencher a gridview
            var Clientes = new List()
            {
                new Cliente(){ Id = 1, Nome = &quot;Pedro&quot;, Situacao = (int)Situacao.Cadastrado},
                new Cliente(){ Id = 2, Nome = &quot;João&quot;, Situacao = (int)Situacao.Excluido}
            };

            //Carregando a gridview
            GridView1.DataSource = Clientes;
            GridView1.DataBind();
        }

        protected void GridView1_RowCreated(object sender, GridViewRowEventArgs e)
        {
            //Só se a linah for do tipo DataRow
            if (!(e.Row.RowType == DataControlRowType.DataRow))
                return;

            //Cria um objeto cliente, referente aos dados da linha atual
            var item = e.Row.DataItem as Cliente;
            if (item == null)
                return;

            //Recupera o controle SPMenuField desta linha
            var thisSPMenu = e.Row.Cells[0].Controls[0] as Microsoft.SharePoint.WebControls.Menu;
            if (thisSPMenu == null)
                return;

            if (item.Situacao == (int)Situacao.Excluido)
            {
                /*
                 * Esconde o 2º Item Menu - Excluir
                 * Passando o Id do MenuItemTemplate desejado
                 */
                 thisSPMenu.HiddenMenuItemIds = &quot;mitDelete&quot;;

                /*
                 * Para esconder mais itens, separe os Ids por ','
                 * Exemplo:
                 * thisSPMenu.HiddenMenuItemIds = &quot;mitDetails,mitDelete&quot;;
                 */

            }

        }
    }

    class Cliente
    {
        public int Id { get; set; }
        public string Nome { get; set; }
        public int Situacao { get; set; }
    }
}

[/sourcecode]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>211</wp:post_id>
		<wp:post_date>2011-07-24 16:07:30</wp:post_date>
		<wp:post_date_gmt>2011-07-24 16:07:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>escondendo-o-menuitemtemplate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="esconder"><![CDATA[esconder]]></category>
		<category domain="post_tag" nicename="excluir"><![CDATA[excluir]]></category>
		<category domain="post_tag" nicename="gridview"><![CDATA[gridview]]></category>
		<category domain="post_tag" nicename="hidden"><![CDATA[hidden]]></category>
		<category domain="post_tag" nicename="menuitemtemplate"><![CDATA[MenuItemTemplate]]></category>
		<category domain="post_tag" nicename="remove"><![CDATA[remove]]></category>
		<category domain="category" nicename="sharepoint"><![CDATA[SharePoint]]></category>
		<category domain="post_tag" nicename="sharepoint-2"><![CDATA[sharepoint]]></category>
		<category domain="post_tag" nicename="spmenufield"><![CDATA[spmenufield]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Esconder, MenuItemTemplate, sharepoint, hidden]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como esconder o MenuItemTemplate do Sharepoint em uma Gridview]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Escondendo o MenuItemTemplate]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Esconder, MenuItemTemplate, sharepoint, hidden]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como esconder o MenuItemTemplate do Sharepoint em uma Gridview]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Escondendo o MenuItemTemplate]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>POO+JSON+JavaScript</title>
		<link>http://blog.maxcnunes.net/2011/08/10/poojsonjavascript/</link>
		<pubDate>Wed, 10 Aug 2011 03:24:26 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=229</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_257" align="alignleft" width="150" caption="POO JSON JavaScript"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/08/POO_JSON_JavaScript.png"><img class="size-thumbnail wp-image-257" title="POO_JSON_JavaScript" src="http://blog.maxcnunes.net/wp-content/uploads/2011/08/POO_JSON_JavaScript-150x140.png" alt="" width="150" height="140" /></a>[/caption]

Quando começamos a trabalhar mais com javascript, aproveitando as vantagens de uma linguagem client-side e o código começar a crescer e ficar mais complexo, surge nessecidade de seguir algum padrão.

E nada melhor, do que implementar algo que você já esteja acostumado a utlizar, como o Paradígma Orientado a Objetos(<strong>POO</strong>).

Trantando como uma <strong>CLASSE</strong>, as informações manipuladas no código, torna-o mais legível, organizado e de fácil manutenção.

<!--more-->

<span style="color: #000000;"><strong>Declarando uma classe em javascript:</strong></span>

[sourcecode language="javascript"]
            //Declaração da classe Pessoa
            function Pessoa() {
                //Definição dos atributos
                this.nome = &quot;&quot;;
                this.idade = 0;
                this.formado = false;
            }

            //Instaciação de um objeto da classe Pessoa
            var _fulano = new Pessoa();

            //Acessando e alterando o valor de um atributo
            _fulano.idade = 15;
[/sourcecode]

<strong><span style="color: #000000;">Supondo que possuímos o seguinte formulário:</span></strong>

[sourcecode language="html"]
        &lt;!-- :: JQUERY :: --&gt;
        &lt;script type=&quot;text/javascript&quot; src=&quot;jquery-1.4.1.js&quot;&gt;&lt;/script&gt;
        Nome:
        &lt;input id=&quot;txtNome&quot; type=&quot;text&quot; /&gt;
        Idade:
        &lt;input id=&quot;txtIdade&quot; type=&quot;text&quot; /&gt;
        Formado:
        &lt;input id=&quot;chkFormado&quot; type=&quot;checkbox&quot; /&gt;Sim

        &lt;input id=&quot;btnEnviar&quot; type=&quot;button&quot; value=&quot;Enviar&quot; /&gt;
[/sourcecode]

<span style="color: #000000;"><strong>Com a classe declarada, fica mais legível e organizado manipular seus dados:</strong></span>

[sourcecode language="javascript"]
      $(function () {
            //Evento click do botão Enviar
            $('#btnEnviar').click(function () {

                //Instaciação de um objeto da classe Pessoa
                var _pessoa = new Pessoa();

                //Acessando e alterando os valores dos atributos
                _pessoa.nome = $('#txtNome').val();
                _pessoa.idade = $('#txtIdade').val();
                _pessoa.formado = $('#chkFormado').attr('checked');

                alert(
                        'Meu nome é  ' + _pessoa.nome +
                        ', tenho ' + _pessoa.idade +
                        ' anos e ' +
                        (_pessoa.formado ? 'já' : 'ainda não') + ' sou formado'
                    );
            });
        });
[/sourcecode]

Com o objeto definido e os valores dos seus atributos preenchidos, podemos aproveitar esta estrutura e converte-lo para o formato JSON, com a finalidade de passar esses dados para o code behind, através de um ajax, _doPostBack ou outra necessidade. Para desfrutar dessa vantagem, de maneira fácil e simples, vamos utilizar o plugin <a href="http://code.google.com/p/jquery-json/">Jquery JSON</a>.

<strong>Adicionando referência do plugin à pagina:</strong>

[sourcecode language="html"]
        &lt;!-- :: JQUERY-JSON  :: --&gt;
        &lt;script type=&quot;text/javascript&quot; src=&quot;jquery.json-2.2.js&quot;&gt;&lt;/script&gt;
[/sourcecode]

<strong>Realizando a conversão do objeto para o formato JSON:</strong>

[sourcecode language="javascript"]
        //Converte o objeto '_pessoa' para o formato Json
        var string_Json = $.toJSON(_pessoa);
[/sourcecode]

<strong>Realizando a conversão de uma string no formato JSON para um objeto:</strong>

[sourcecode language="javascript"]
        //Converte uma string no formato Json para objeto
        var obj = $.parseJSON(string_Json);
[/sourcecode]

Este artigo abordou conceitos básicos do POO, mas caso você tenha mas interesse sobre esse assunto, eu indico os artigos dessa <a href="http://joaopedropereira.com/blog/2009/01/13/javascript-oop-1/">série em PT/BR</a> e dessa <a href="http://www.1stwebdesigner.com/design/object-oriented-basics-javascript/">série em EN</a> .
Que são muito bons!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2011-08-10 03:24:26</wp:post_date>
		<wp:post_date_gmt>2011-08-10 03:24:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>poojsonjavascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="atributo"><![CDATA[atributo]]></category>
		<category domain="post_tag" nicename="classe"><![CDATA[classe]]></category>
		<category domain="post_tag" nicename="client-side"><![CDATA[client-side]]></category>
		<category domain="post_tag" nicename="convert"><![CDATA[convert]]></category>
		<category domain="post_tag" nicename="converter"><![CDATA[converter]]></category>
		<category domain="category" nicename="js"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="jquery"><![CDATA[JQuery]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="objeto"><![CDATA[objeto]]></category>
		<category domain="post_tag" nicename="parse"><![CDATA[parse]]></category>
		<category domain="post_tag" nicename="poo"><![CDATA[POO]]></category>
		<category domain="post_tag" nicename="propriedade"><![CDATA[propriedade]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[poo, javascript, json]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica e exemplifica a utilização de javascript, json e orientação a objetos (POO)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[POO + JSON + JavaScript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[poo, javascript, json]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica e exemplifica a utilização de javascript, json e orientação a objetos (POO)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[POO + JSON + JavaScript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Ordernar aleatoriamente uma lista</title>
		<link>http://blog.maxcnunes.net/2011/08/17/ordernar-aleatoriamente-uma-lista/</link>
		<pubDate>Wed, 17 Aug 2011 02:45:40 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=265</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_268" align="alignleft" width="150" caption="Linq Random"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/08/aleatrio.jpg"><img class="size-thumbnail wp-image-268" title="Random" src="http://blog.maxcnunes.net/wp-content/uploads/2011/08/aleatrio-150x150.jpg" alt="" width="150" height="150" /></a>[/caption]

<strong>LINQ</strong> <em>(Language Integrated Query)</em>, além de oferecer um modelo consistente para trabalhar com dados em vários tipos de fontes de dados e formatos, outra importante característica, é facilidade em criar consultas, desde simples <em>selects</em> à outas mirabolantes expressões que uma query possa conter.

Neste exemplo demonstrarei como é fácil,<strong><span style="color: #000000;"> utilizando LINQ</span></strong>, aplicar uma consulta aletória em uma <span style="color: #339966;">List</span>&lt;<span style="color: #3366ff;">int</span>&gt;.

O mesmo poderia ser feito em uma lista de objetos do tipo Pessoa ou qualquer outro do seu domínio.

Isto porque o <strong>LINQ</strong> oferece suporte ao <span style="color: #3366ff;">IEnumerable(Of T)</span> ou interfaces derivadas, como o genérico <span style="color: #3366ff;">IQueryable(Of T)</span> -  <em>chamados de tipos consultáveis</em>.

<!--more-->

[sourcecode language="csharp"]
            //Lista de exemplo
            var lista = new List&lt;int&gt;()
            {
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
            };
[/sourcecode]

Passando a expressão <span style="color: #3366ff;">OrderBy(i =&gt; Guid.NewGuid())</span> a lista retornará aletória.

[sourcecode language="csharp"]
            //Retorna a lista aletória
            var lista_aleatoria = lista.OrderBy(i =&gt; Guid.NewGuid());
[/sourcecode]

Agora, por que isto acontece?
Basta saber três coisas para entender:
<ol>
	<li><strong><span style="color: #008000;">GUID</span></strong>:  Representa um Globally Unique Identifier, ou seja, um Identificador Único Universal.</li>
	<li><strong><span style="color: #008000;">LINQ - Variável de Consulta</span></strong> :  Quando você cria uma query com LINQ, o formato dessa consulta será armazenado nessa variável. Mas a consulta ainda não será realizada.</li>
	<li><strong><span style="color: #008000;">LINQ - Consulta Adiada</span></strong> : A real execução da consulta é adiada até que você faça a iteração pela variável de consulta em uma instrução foreach. Esse conceito é conhecido como execução adiada.</li>
</ol>
Sendo assim, cada linha na consulta, a expressão de ordernação será diferente.
<em><strong>Obs:</strong> No LINQ é possível forçar a execução imediata de uma consulta. Para entender mais sobre LINQ eu indico <a href="http://msdn.microsoft.com/pt-br/library/bb397906.aspx" target="_blank">Introdução às consultas do LINQ (C#)</a> .</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>265</wp:post_id>
		<wp:post_date>2011-08-17 02:45:40</wp:post_date>
		<wp:post_date_gmt>2011-08-17 02:45:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ordernar-aleatoriamente-uma-lista</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="aletorio"><![CDATA[aletorio]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="post_tag" nicename="linq-2"><![CDATA[linq]]></category>
		<category domain="post_tag" nicename="list"><![CDATA[list]]></category>
		<category domain="post_tag" nicename="lista"><![CDATA[lista]]></category>
		<category domain="post_tag" nicename="order"><![CDATA[order]]></category>
		<category domain="post_tag" nicename="ordernar"><![CDATA[ordernar]]></category>
		<category domain="post_tag" nicename="radom"><![CDATA[radom]]></category>
		<category domain="post_tag" nicename="sort"><![CDATA[sort]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[random, list, aleatório, lista, c#, linq]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Forma simples de retornar uma lista aleatória, utilizando LINQ no C#.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Ordernar aleatoriamente uma lista]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[random, list, aleatório, lista, c#, linq]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Forma simples de retornar uma lista aleatória, utilizando LINQ no C#.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Ordernar aleatoriamente uma lista]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Git - Desfazer alterações</title>
		<link>http://blog.maxcnunes.net/?p=882</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=882</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>882</wp:post_id>
		<wp:post_date>2013-03-18 17:58:03</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Ideas Posts</title>
		<link>http://blog.maxcnunes.net/?p=883</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=883</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Git Reset and Checkout</strong>

http://stackoverflow.com/questions/9301782/need-to-reset-git-branch-to-origin-version

http://stackoverflow.com/questions/6971717/github-how-to-revert-changes-to-previous-state

http://stackoverflow.com/questions/1628088/how-to-reset-my-local-repository-to-be-just-like-the-remote-repository-head

<strong>Jasmine</strong>

http://wingkaiwan.com/2012/09/08/setting-up-jasmine-aspnet-mvc-requirejs/

http://net.tutsplus.com/tutorials/javascript-ajax/testing-your-javascript-with-jasmine/

<strong>JQuery file exists</strong>

https://gist.github.com/cmichi/722584

<strong>Delete commit</strong>

http://ncona.com/2011/07/how-to-delete-a-commit-in-git-local-and-remote/

http://stackoverflow.com/questions/448919/how-can-i-remove-a-commit-on-github

http://stackoverflow.com/questions/1338728/how-to-delete-a-git-commit

<strong>Git edit message commit</strong>

http://www-cs-students.stanford.edu/~blynn/gitmagic/ch05.html#_8230_and_then_some

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>883</wp:post_id>
		<wp:post_date>2013-03-19 23:42:19</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Environment Variables</title>
		<link>http://blog.maxcnunes.net/?p=1109</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1109</guid>
		<description></description>
		<content:encoded><![CDATA[sudo vi ~/.bashrc

include: export KEY="VALUE"

save

source ~/.bashrc

print $KEY]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1109</wp:post_id>
		<wp:post_date>2013-07-02 23:47:46</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Partial class e MetaDataType</title>
		<link>http://blog.maxcnunes.net/2011/08/30/partial-class-e-metadatatype/</link>
		<pubDate>Tue, 30 Aug 2011 05:04:52 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=275</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_283" align="alignleft" width="150" caption="Partial Class"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/08/partial-class-1.jpg"><img class="size-thumbnail wp-image-283" title="Partial Class" src="http://blog.maxcnunes.net/wp-content/uploads/2011/08/partial-class-1-150x150.jpg" alt="" width="150" height="150" /></a>[/caption]

Se você esta acostumado a utilizar frameworks ORM (Object-relational mapping) como LINQ to SQL, LINQ to Entity e dentre outros. Uma grande vantagem, se não necessidade, é utilizar <strong><span style="color: #3366ff;">Partial Class</span></strong> (classes parciais).

Com partial class, é possível dividir a estrutura de classes em arquivos separados. E todas as partes são combinados quando o aplicativo é compilado.

Pode ser usada quando trabalhamos com grande projetos, para separar definições de classes, por simples organização ou para dar autonomia que cada desenvolvedor trabalhe em arquivos separados, mas relacionados a mesma classe. E também, trabalhando com arquivos gerados automaticamente, como de frameworks ORM, atribuindo novas definições as classes geradas pelo framework.

<!--more-->

[caption id="attachment_280" align="aligncenter" width="408" caption="Partial Class"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/08/partial-class.jpg"><img class="size-full wp-image-280" title="partial class" src="http://blog.maxcnunes.net/wp-content/uploads/2011/08/partial-class.jpg" alt="" width="408" height="612" /></a>[/caption]

Para definir uma classe como parcial é necessário incluir a palavra-chave <strong><span style="color: #3366ff;">partial</span></strong> em sua definição Além das classes possuírem exatamente o mesmo nome e namespace.

Ficando assim:

[sourcecode language="csharp"]
    //Classe parcial no arquivo Pessoa1.cs
    public partial class Pessoa
    {
        public string nome { get; set; }
        public int idade { get; set; }

        public string GetNome()
        {
            return this.nome;
        }
    }

    //Classe parcial no arquivo Pessoa2.cs
    public partial class Pessoa
    {
        public string sobreNome { get; set; }

        public string GetNomeCompleto()
        {
            return this.nome + this.sobreNome;
        }
    }
[/sourcecode]

Estanciando a classe Pessoa, temos acesso as definições contidas em as classes:

[sourcecode language="csharp"]
    Pessoa p = new Pessoa();
    p.nome = &quot;Fulano&quot;;
    p.sobreNome = &quot;Ciclano&quot;;
    p.idade = 23;
    string nome = p.GetNome();
    string nomeCompleto = p.GetNomeCompleto();
[/sourcecode]

Porém, se em uma partial class você define um atributo ou método que já exista, ao compilar retonará a seguinte mensagem:
<h5 style="padding-left: 30px;"><em><span style="color: #ff0000;">The type 'NOME_DA_CLASSE' already contains a definition for 'NOME_PROPRIEDADE_REPITIDA'.</span></em></h5>
Mas então você se pergunta, porque eu teria a idéia de criar um atributo que já existe?  Bem, se você trabalha com MVC, conhece as ótimas vantagens do <a title="Entenda mais sobre Data Annotation" href="http://msdn.microsoft.com/en-us/library/dd901590%28v=vs.95%29.aspx" target="_blank">Data Annotation</a>, customizações de classes para especificar regras de validações. O que necessita que reescreva a propriedade, adicionando regras de validações do data annotation.

Porém, utilizando o ORM, as classes já são geradas automaticamente pelo framework. Complicando a definição de atributos de validação do Data Annotation para as propriedades da classe.

Sendo assim, a solução para esse problema é utilizar <strong><span style="color: #3366ff;">MetadataType</span></strong>. Habilitando a associação de uma classe diferente à outra do tipo partial class.

Entenda melhor no exemplo:

[sourcecode language="csharp"]
    //Supondo que a classe Pessoa ja tenha sido definida

    //Associa a classe PessoaMetaData à Pessoa
    [MetadataType(typeof(PessoaMetaData))]
    public partial class Pessoa
    {
        //Aqui você pode adicionar novas propriedades e metodos à classe
    }

    public class PessoaMetaData
    {
        //Data Annotation
        [Required(ErrorMessage = &quot;O Nome deve ser preenchido&quot;)]
        public string nome { get; set; }
    }
[/sourcecode]

Obs: Imagem utilizada para demonstrar a partial class foi retirada <a href="http://www.codeproject.com/KB/dotnet/PartialMethod.aspx">deste artigo</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>275</wp:post_id>
		<wp:post_date>2011-08-30 05:04:52</wp:post_date>
		<wp:post_date_gmt>2011-08-30 05:04:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>partial-class-e-metadatatype</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="class"><![CDATA[class]]></category>
		<category domain="post_tag" nicename="classe"><![CDATA[classe]]></category>
		<category domain="post_tag" nicename="metadata"><![CDATA[metadata]]></category>
		<category domain="post_tag" nicename="metadatatype"><![CDATA[metadatatype]]></category>
		<category domain="category" nicename="mvc"><![CDATA[MVC]]></category>
		<category domain="post_tag" nicename="partia"><![CDATA[partia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[MetaDataType, partial class, partial, c#]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica sobre as partial classes e os tipos MetaDataType.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Partial class e MetaDataType]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[MetaDataType, partial class, partial, c#]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica sobre as partial classes e os tipos MetaDataType.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Partial class e MetaDataType]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Leandro Scudeler]]></wp:comment_author>
			<wp:comment_author_email>leandroscudeler@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.22.74.80</wp:comment_author_IP>
			<wp:comment_date>2011-08-30 16:23:27</wp:comment_date>
			<wp:comment_date_gmt>2011-08-30 16:23:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito bom. Parabéns.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1314721407.35";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1314915678.44";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Excluir todos os Objetos no SQL Server</title>
		<link>http://blog.maxcnunes.net/2011/11/17/excluir-todos-os-objetos-no-sql-server/</link>
		<pubDate>Thu, 17 Nov 2011 01:11:32 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://www.maxcnunes.net/blog/?p=295</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_301" align="alignright" width="150" caption="Excluir todos objetos SQL Server"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/reset.gif"><img class="size-thumbnail wp-image-301 " title="reset" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/reset-150x150.gif" alt="" width="150" height="150" /></a>[/caption]

Este artigo é uma referência á um script que salvou tempo e serviço em um projeto atual. No qual precisávamos zerar o banco, mas com o detalhe que não poderíamos excluí-lo e criá-lo novamente.

Sendo assim o que este script faz é excluir todos os objetos nesta ordem:
<div style="margin: 0 20px; padding: 0 20px;">
<ol style="margin: 0 20px; padding: 0 20px; display: block;">
	<li>Stored Procedures</li>
	<li>Views</li>
	<li>Functions</li>
	<li>Foreign Keys</li>
	<li>Primary Keys</li>
	<li>Tables</li>
	<li>Indexes</li>
</ol>
</div>
<div><!--more--></div>
[sourcecode language="sql"]

-- Drop all non-system stored procs
DECLARE @name VARCHAR(128)
DECLARE @SQL VARCHAR(254)
SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] = 'P' AND category = 0 ORDER BY [name])
WHILE @name is not null
BEGIN
    SELECT @SQL = 'DROP PROCEDURE [dbo].[' + RTRIM(@name) +']'
    EXEC (@SQL)
    PRINT 'Dropped Procedure: ' + @name
    SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] = 'P' AND category = 0 AND [name] &gt; @name ORDER BY [name])
END
GO

-- Drop all views
DECLARE @name VARCHAR(128)
DECLARE @SQL VARCHAR(254)
SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] = 'V' AND category = 0 ORDER BY [name])
WHILE @name IS NOT NULL
BEGIN
    SELECT @SQL = 'DROP VIEW [dbo].[' + RTRIM(@name) +']'
    EXEC (@SQL)
    PRINT 'Dropped View: ' + @name
    SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] = 'V' AND category = 0 AND [name] &gt; @name ORDER BY [name])
END
GO

-- Drop all functions
DECLARE @name VARCHAR(128)
DECLARE @SQL VARCHAR(254)
SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] IN (N'FN', N'IF', N'TF', N'FS', N'FT') AND category = 0 ORDER BY [name])
WHILE @name IS NOT NULL
BEGIN
    SELECT @SQL = 'DROP FUNCTION [dbo].[' + RTRIM(@name) +']'
    EXEC (@SQL)
    PRINT 'Dropped Function: ' + @name
    SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] IN (N'FN', N'IF', N'TF', N'FS', N'FT') AND category = 0 AND [name] &gt; @name ORDER BY [name])
END
GO

-- Drop all Foreign Key constraints
DECLARE @name VARCHAR(128)
DECLARE @constraint VARCHAR(254)
DECLARE @SQL VARCHAR(254)
SELECT @name = (SELECT TOP 1 TABLE_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE constraint_catalog=DB_NAME() AND CONSTRAINT_TYPE = 'FOREIGN KEY' ORDER BY TABLE_NAME)
WHILE @name is not null
BEGIN
    SELECT @constraint = (SELECT TOP 1 CONSTRAINT_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE constraint_catalog=DB_NAME() AND CONSTRAINT_TYPE = 'FOREIGN KEY' AND TABLE_NAME = @name ORDER BY CONSTRAINT_NAME)
    WHILE @constraint IS NOT NULL
    BEGIN
        SELECT @SQL = 'ALTER TABLE [dbo].[' + RTRIM(@name) +'] DROP CONSTRAINT ' + RTRIM(@constraint)
        EXEC (@SQL)
        PRINT 'Dropped FK Constraint: ' + @constraint + ' on ' + @name
        SELECT @constraint = (SELECT TOP 1 CONSTRAINT_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE constraint_catalog=DB_NAME() AND CONSTRAINT_TYPE = 'FOREIGN KEY' AND CONSTRAINT_NAME &lt;&gt; @constraint AND TABLE_NAME = @name ORDER BY CONSTRAINT_NAME)
    END
SELECT @name = (SELECT TOP 1 TABLE_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE constraint_catalog=DB_NAME() AND CONSTRAINT_TYPE = 'FOREIGN KEY' ORDER BY TABLE_NAME)
END
GO

-- Drop all Primary Key constraints
DECLARE @name VARCHAR(128)
DECLARE @constraint VARCHAR(254)
DECLARE @SQL VARCHAR(254)
SELECT @name = (SELECT TOP 1 TABLE_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE constraint_catalog=DB_NAME() AND CONSTRAINT_TYPE = 'PRIMARY KEY' ORDER BY TABLE_NAME)
WHILE @name IS NOT NULL
BEGIN
    SELECT @constraint = (SELECT TOP 1 CONSTRAINT_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE constraint_catalog=DB_NAME() AND CONSTRAINT_TYPE = 'PRIMARY KEY' AND TABLE_NAME = @name ORDER BY CONSTRAINT_NAME)
    WHILE @constraint is not null
    BEGIN
        SELECT @SQL = 'ALTER TABLE [dbo].[' + RTRIM(@name) +'] DROP CONSTRAINT ' + RTRIM(@constraint)
        EXEC (@SQL)
        PRINT 'Dropped PK Constraint: ' + @constraint + ' on ' + @name
        SELECT @constraint = (SELECT TOP 1 CONSTRAINT_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE constraint_catalog=DB_NAME() AND CONSTRAINT_TYPE = 'PRIMARY KEY' AND CONSTRAINT_NAME &lt;&gt; @constraint AND TABLE_NAME = @name ORDER BY CONSTRAINT_NAME)
    END
SELECT @name = (SELECT TOP 1 TABLE_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE constraint_catalog=DB_NAME() AND CONSTRAINT_TYPE = 'PRIMARY KEY' ORDER BY TABLE_NAME)
END
GO

-- Drop all tables
DECLARE @name VARCHAR(128)
DECLARE @SQL VARCHAR(254)
SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] = 'U' AND category = 0 ORDER BY [name])
WHILE @name IS NOT NULL
BEGIN
    SELECT @SQL = 'DROP TABLE [dbo].[' + RTRIM(@name) +']'
    EXEC (@SQL)
    PRINT 'Dropped Table: ' + @name
SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] = 'U' AND category = 0 AND [name] &gt; @name ORDER BY [name])
END
GO

-- Drop all indexes
declare @RETURN_VALUE int
declare @command1 nvarchar(2000)
set @command1 = 'DECLARE @indexName NVARCHAR(128)'
set @command1 = @command1 + ' DECLARE @dropIndexSql NVARCHAR(4000)'
set @command1 = @command1 + ' DECLARE tableIndexes CURSOR FAST_FORWARD FOR'
set @command1 = @command1 + ' SELECT name FROM sys.indexes'
set @command1 = @command1 + ' WHERE object_id = OBJECT_ID(''?'') AND index_id &gt; 0 AND index_id &lt; 255 AND is_primary_key = 0'
set @command1 = @command1 + ' ORDER BY index_id DESC'
set @command1 = @command1 + ' OPEN tableIndexes FETCH NEXT FROM tableIndexes INTO @indexName'
set @command1 = @command1 + ' WHILE @@fetch_status = 0'
set @command1 = @command1 + ' BEGIN'
set @command1 = @command1 + ' SET @dropIndexSql = N''DROP INDEX ?.['' + @indexName + '']'''
set @command1 = @command1 + ' EXEC sp_executesql @dropIndexSql'
set @command1 = @command1 + ' print @dropIndexSql'
set @command1 = @command1 + ' FETCH NEXT FROM tableIndexes INTO @indexName'
set @command1 = @command1 + ' END'
set @command1 = @command1 + ' CLOSE tableIndexes'
set @command1 = @command1 + ' DEALLOCATE tableIndexes'
Print '-----------------------------------------'
exec @RETURN_VALUE = sp_MSforeachtable @command1=@command1
GO
[/sourcecode]

Segue o link para o post, no qual encontrei este script: <a href="http://paigecsharp.blogspot.com/2008/03/drop-all-objects-in-sql-server-database.html">http://paigecsharp.blogspot.com/2008/03/drop-all-objects-in-sql-server-database.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>295</wp:post_id>
		<wp:post_date>2011-11-17 01:11:32</wp:post_date>
		<wp:post_date_gmt>2011-11-17 01:11:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>excluir-todos-os-objetos-no-sql-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="banco"><![CDATA[banco]]></category>
		<category domain="category" nicename="bancodedados"><![CDATA[Banco de Dados]]></category>
		<category domain="post_tag" nicename="desenvolvimento"><![CDATA[desenvolvimento]]></category>
		<category domain="post_tag" nicename="remove"><![CDATA[remove]]></category>
		<category domain="post_tag" nicename="reset"><![CDATA[reset]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="post_tag" nicename="sqlexpress"><![CDATA[SQLEXPRESS]]></category>
		<category domain="post_tag" nicename="zerar"><![CDATA[zerar]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[script, sqlserver, reset, banco, database]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como zerar os objetos de um banco de dados SQL Server, através de scripts.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Excluir todos os Objetos no SQL Server]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[script, sqlserver, reset, banco, database]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial explica como zerar os objetos de um banco de dados SQL Server, através de scripts.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Excluir todos os Objetos no SQL Server]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Python no Visual Studio</title>
		<link>http://blog.maxcnunes.net/2011/11/22/python-no-visual-studio/</link>
		<pubDate>Tue, 22 Nov 2011 21:40:14 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=309</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_317" align="alignleft" width="150" caption="Python"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/python-logo-glassy.png"><img class="size-thumbnail wp-image-317" title="Python" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/python-logo-glassy-150x150.png" alt="" width="150" height="150" /></a>[/caption]

Outro dia precisei trabalhar com uma linguagem, que sempre tive fascinação, mas que fazia tempo que não à utilizava.
Estou falando do Python, uma linguagem não muito conhecida e comentada aqui em Londrina. Mas que possui inúmeras vantagens.

Python é uma linguagem script, multiplataforma, simples, elegante, de fácil aprendizado e desenvolvimento. Tem suporte ao paradigma OO, mas também pode ser desenvolvida no formato estrutural. Podendo ser utilizada para rodar scripts direto no shell, ou também desenvolver sistemas Desktops e Web.<!--more-->

Para ter uma noção do espaço que o Python, possui entre os desenvolvedores e o mercado atualmente. A Microsoft possui o <a title="IronPython" href="http://ironpython.codeplex.com/" target="_blank">IronPython</a>, que é a implementação da linguagem Python para a plataforma o .NET. Possibilitando a integração do Python às bibliotecas do Framework .NET.

Objetivo deste post é explicar, como instalar e configurar o Python na IDE Visual Studio 2010. Qualquer um que não  seja do mundo .NET, provavelmente não irá gostar desta ideia, de princípio.
Mas para quem já está acostumado ao ambiente do Visual Studio, fica mais fácil e produtivo. Já que existe suporte IDE para isso e você já está acostumado, de como funciona a IDE e onde estão localizados cada ferramenta utilizadas no processo de desenvolvimento.

Mais dúvidas sobre o Python? <a href="http://www.python.org.br/wiki/PerguntasFrequentes/SobrePython#O_que_.2BAOk_Python.3F" target="_blank">Acesse este artigo</a>.

Faça o download da versão 2.7.2  Python no site <a href="http://www.python.org/download/">http://www.python.org/download/</a>

Após instalado o Python. Faça o download do Python Tools for Visual Studio. Que é uma ferramenta para possibilitar o desenvolvimento Python na no Visual Studio.

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/Python-Download1.png"><img class="aligncenter size-full wp-image-313" title="Python-Download" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/Python-Download1.png" alt="Python-Download" width="633" height="405" /></a>

O download do instalador está no codeplex: <a href="http://pytools.codeplex.com/">http://pytools.codeplex.com/</a>

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/Python-Tools-For-Visual-Studio.png"><img class="aligncenter size-full wp-image-319" title="Python-Tools-For-Visual-Studio" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/Python-Tools-For-Visual-Studio.png" alt="Python-Tools-For-Visual-Studio" width="554" height="301" /></a>

Com a ferramenta instalada, estamos prontos para iniciar o desenvolvimento Python, através do Visual Studio.

Abra o Visual Studio e crie um novo projeto do tipo "Python Application":

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/Python-Application.png"><img class="aligncenter size-full wp-image-321" title="Python-Application" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/Python-Application.png" alt="Python-Application" width="624" height="433" /></a>

Em seguida vamos configurar o projeto, para definir que os scripts aqui desenvolvidos serão executados no Interpretador Python 2.7.2 que instalamos anteriormente.

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/Python-Application-Properties.png"><img class="aligncenter size-full wp-image-322" title="Python-Application-Properties" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/Python-Application-Properties.png" alt="" width="591" height="424" /></a>

Selecione o interpretador correto:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/Python-Interpretador.png"><img class="aligncenter size-full wp-image-323" title="Python-Interpretador" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/Python-Interpretador.png" alt="" width="571" height="333" /></a>

Escreva algum código em Python para testar:

[sourcecode language="python"]
# O famoso Hello World
print('Hello World n')

# Criacao de vairaveis e atribuicao de valores a elas
a = 2
b = 3
resultado = 2 + 3

# Formatacao da string
print( &quot;2  + 3 = {0}n&quot;.format(resultado))

# Le o valor digitado
numInput = input('Escolha um numero: ')

try:
    # Tenta converter para inteiro
    num = int(numInput)

    if num &lt; 5:
        # Exibi o valor digitado
        print ('Voce digitou um valor menor que 5: {0}'.format(num))
    else:
        # Exibi o valor digitado
        print ('Voce digitou um vlaor maior que 5: {0}'.format(num))

except:
    # Exibi mensagem de erro
    print('Valor incorreto')

# Espera que digite uma tecla para sair
input ('Digite algo para sair')
[/sourcecode]

Por final, só executar o Start Debugging (F5) e o script será executado em um console.

Note como o código Python é simples e elegante. Python utiliza a própria identação do código para formar os blocos de código.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>309</wp:post_id>
		<wp:post_date>2011-11-22 21:40:14</wp:post_date>
		<wp:post_date_gmt>2011-11-22 21:40:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-no-visual-studio</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[python, visual studio, .net, ironpython]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial descreve algumas vantagens do python e explica como configurá-lo no Visual Studio.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Python no Visual Studio]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[python, visual studio, .net, ironpython]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial descreve algumas vantagens do python e explica como configurá-lo no Visual Studio.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Python no Visual Studio]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Programação Orientada a Objetos (POO) - I</title>
		<link>http://blog.maxcnunes.net/2011/12/01/programacao-orientada-a-objetos-poo-i/</link>
		<pubDate>Thu, 01 Dec 2011 03:21:41 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=383</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="box_conteudo_post">
<h1></h1>
[caption id="attachment_463" align="alignleft" width="150" caption="POO"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/12/oop.jpg"><img class="size-thumbnail wp-image-463" title="Programação Orientada a Objetos" src="http://blog.maxcnunes.net/wp-content/uploads/2011/12/oop-150x150.jpg" alt="" width="150" height="150" /></a>[/caption]
<h1><span class="Apple-style-span" style="font-size: 13px; font-weight: normal;">Programação Orientada a Objetos (POO)</span></h1>
Orientação a objetos é um paradigma de programação organizado através de objetos. Isto é, quando utilizamos POO, estamos facilitando a forma de compreensão e implementação de um projeto. Porque, simplesmente estamos se preocupando na forma em que as informações são definidas, como característica e comportamentos, e como elas se relacionam entre si.

Para ficar mais fácil, precisamos analisar o contexto de um  projeto. Como exemplo utilizarei um time de futebol.

<!--more-->
<h2>Classes</h2>
Classes organizam características e comportamentos comuns a um grupo de informações.

Sendo assim podemos definir que todas as pessoas em um time de futebol, fazem parte da classe <strong>Pessoa</strong>.  Pois, todas elas possuem características e comportamentos comuns.
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td colspan="2" valign="top" width="638">
<p align="center"><strong>Classe Pessoa</strong></p>
</td>
</tr>
<tr>
<td valign="top" width="390"> <a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-jogadores.jpg"><img class="aligncenter size-full wp-image-394" title="POO-jogadores" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-jogadores.jpg" alt="POO-jogadores" width="466" height="108" /></a></td>
<td valign="top" width="248"><strong><span style="text-decoration: underline;"> </span></strong><strong><span style="text-decoration: underline;">Características</span></strong>
<ul>
	<li>Nome</li>
	<li>Idade</li>
	<li>Salário</li>
</ul>
<strong><span style="text-decoration: underline;">Comportamentos</span></strong>
<ul>
	<li>Participa dos jogos</li>
	<li>Participa dos treinos</li>
</ul>
</td>
</tr>
<tr>
<td colspan="2" valign="top" width="638"> <a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-DC-Pessoa.png"><img class="aligncenter size-full wp-image-402" title="POO-DC-Pessoa" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-DC-Pessoa.png" alt="" width="562" height="251" /></a></td>
</tr>
<tr>
<td colspan="2" valign="top" width="638">[sourcecode language="csharp"]
public class Pessoa
{
    public string nome;
    public int idade;
    public decimal salario;

    public void participarJogo()
    {

    }

    public void participarTreino()
    {

    }
}
[/sourcecode]</td>
</tr>
</tbody>
</table>
<h2>Atributos</h2>
São as características de cada objeto. Como: <strong><em>Nome, Idade, Situação e Salário</em></strong>.
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td valign="top" width="638">[sourcecode language="csharp"]
        public string nome;
        public int idade;
        public decimal salario;

[/sourcecode]</td>
</tr>
</tbody>
</table>
<h2></h2>
<h2>Métodos</h2>
São comportamentos de cada objeto. Como: <strong><em>Participar do jogo e Participar do treino</em></strong>.
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td valign="top" width="638">[sourcecode language="csharp"]
        public void participarJogo()
        {

        }

        public void participarTreino()
        {

        }

[/sourcecode]</td>
</tr>
</tbody>
</table>
<h2></h2>
<h2></h2>
<h2>Objetos</h2>
São instancias de uma classe. Ou seja, sendo que definimos uma Classe Pessoa possui características como: <strong><em>Nome, Idade, Situação e Salário</em></strong> e comportamentos como:<strong><em> Participar do jogo e Participar do treino</em></strong>. Ao instanciar um objeto desta classe, devemos cria-lo segundo as definições da classe que ele está sendo gerado.

Por exemplo:
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td colspan="2" valign="top" width="638">
<p align="center"><strong>Pessoas - Time Futebol</strong></p>
</td>
</tr>
<tr>
<td valign="top" width="319"> <a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-neymar.jpg"><img class="aligncenter size-full wp-image-396" title="POO-neymar" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-neymar.jpg" alt="" width="195" height="258" /></a></td>
<td valign="top" width="319"><strong>Tipo do objeto:</strong>Pessoa<strong><span style="text-decoration: underline;">Características</span></strong>
<ul>
	<li>Nome: Neymar</li>
	<li>Idade: 19 anos</li>
	<li>Salário: 800.000,00</li>
</ul>
<strong><span style="text-decoration: underline;">Comportamentos</span></strong>
<ul>
	<li>Participa dos jogos</li>
	<li>Participa dos treinos</li>
</ul>
</td>
</tr>
<tr>
<td colspan="2" valign="top" width="638">[sourcecode language="csharp"]
            //Istanciação do objeto
            Pessoa pes_Neymar = new Pessoa();

            //Atribuição de valores aos atributos
            pes_Neymar.nome = &quot;Neymar&quot;;
            pes_Neymar.idade = 19;
            pes_Neymar.salario = 8000000;

            //Execução dos métodos
            pes_Neymar.participarJogo();
            pes_Neymar.participarTreino();

[/sourcecode]</td>
</tr>
</tbody>
</table>
<h2>Método Construtor</h2>
Para estanciar um objeto, utilizamos o método construtor da classe. Método construtor deve ter exatamente o mesmo nome da classe e não devem possuir um tipo de retorno na sua definição. Porque, ele já é responsável por retornar um objeto do tipo da classe que pertence.
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td valign="top" width="638">[sourcecode language="csharp"]
    public class Pessoa
    {
        public int idade;

        protected string nome;

        private decimal salario;

        //Método construtor
        public Pessoa()
        {
            //Possui o mesmo nome da classe
            //Não possui um tipo de retorno
        }

        public void participarJogo()
        {

        }

        public void participarTreino()
        {

        }
    }

[/sourcecode]</td>
</tr>
</tbody>
</table>
<h2></h2>
<h2>Herança</h2>
É a generalização das informações. Ou seja, dentro de um time de futebol temos dois tipos de pessoas: jogadores e o técnico. E cada um desses tipos, possui algumas características e comportamentos, comuns e outras diferentes.

Um jogador, além de possuir as outras características de pessoas, possui também <strong><em>quantidade de gols marcados, peso, velocidade</em></strong> e o comportamento de <strong><em>marcar gol</em></strong>.

Um técnico, além de possuir as outras características de pessoas, possui também <strong><em>técnicas de treino</em></strong> e o comportamento de <strong><em>marcar treino</em></strong>.

Para atender a este tipo de situação, podemos criar duas classes diferentes, mas herdando características e comportamentos comuns, definidos na classe Pessoa.
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td colspan="3" valign="top" width="638">
<p align="center"><strong>Pessoas - Time Futebol</strong></p>
</td>
</tr>
<tr>
<td colspan="2" valign="top" width="452">
<p align="center"><strong>Jogadores</strong></p>
</td>
<td valign="top" width="186">
<p align="center"><strong>Técnico</strong></p>
</td>
</tr>
<tr>
<td colspan="2" width="452"> <a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-PessoaJogdores.jpg"><img class="aligncenter size-full wp-image-398" title="POO-PessoaJogdores" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-PessoaJogdores.jpg" alt="" width="369" height="254" /></a></td>
<td width="186"> <a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-PessoaTecnico.jpg"><img class="aligncenter size-full wp-image-399" title="POO-PessoaTecnico" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-PessoaTecnico.jpg" alt="" width="172" height="183" /></a></td>
</tr>
<tr>
<td colspan="3" width="638"> <a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-DC-Heranca.png"><img class="aligncenter size-full wp-image-404" title="POO-DC-Heranca" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-DC-Heranca.png" alt="" width="555" height="533" /></a></td>
</tr>
<tr>
<td width="347">[sourcecode language="csharp"]
public class Jogador : Pessoa
{
    public int qtdeGolMarcado;
    public decimal peso;
    public int velocidade;

    public void marcarGol()
    {

    }
}

[/sourcecode]</td>
<td colspan="2" width="291">[sourcecode language="csharp"]
public class Tecnico : Pessoa
{
   public string tecnicasTreino;

   public void marcarTreino()
   {

   }
}

[/sourcecode]
<p align="center"></p>
</td>
</tr>
</tbody>
</table>
<h2></h2>
<h2>Sobrecarga</h2>
São como comportamentos comuns, na vida real. Mas com algumas particularidades, que os diferem.

Na POO, são métodos com o mesmo nome, mas com a assinatura dos parâmetros diferentes.
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td valign="top" width="638">[sourcecode language="csharp"]
        public void marcarTreino(string local)
        {
            //Marca o treino definindo apenas o local
        }

        public void marcarTreino(string local, int horario)
        {
            //Marca o treino definindo o local e o horário
        }

        public void marcarTreino(string local,int horario, int qtdJogadores)
        {
            //Marca o treino definindo o local, horário e quantidade de jogadores
        }

[/sourcecode]</td>
</tr>
</tbody>
</table>
<h2></h2>
<h2>Referência this</h2>
Especifica que estamos referenciando apenas as características e métodos da própria classe.

Por exemplo, se eu passo por parâmetro a quantidade de gols marcado em uma partida, com o mesmo nome, da propriedade <strong><em>qtdeGolMarcado</em></strong>, existente na classe. Para especificar qual é variável, que representa minha propriedade existente na classe, devo utilizar o prefixo <strong><em>this.</em></strong>
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td valign="top" width="638">[sourcecode language="csharp"]
        public void marcarGol(int qtdeGolMarcado)
        {
            this.qtdeGolMarcado = qtdeGolMarcado;
        }

[/sourcecode]</td>
</tr>
</tbody>
</table>
<h2>Modificadores de Acesso</h2>
Um modificador de acesso determina até onde o atributo ou método pode ser visualizado, ou seja,  determinam quais os locais ele pode ser usado. Eles são o utilizados no encapsulamento. Temos pelo menos 3 tipos de modificadores de acesso padrões, na maioria das linguagens POO:
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td><a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-pulica.png"><img class="aligncenter size-full wp-image-419" title="POO-pulica" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-pulica.png" alt="" width="21" height="19" /></a></td>
<td><strong>public </strong>Acesso não é restrito. Membro é acessado de qualquer lugar.</td>
</tr>
<tr>
<td><a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-protected.png"><img class="aligncenter size-full wp-image-420" title="POO-protected" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-protected.png" alt="" width="25" height="20" /></a></td>
<td><strong>protected</strong> Pode ser acessado dentro da classe que o define e pelas classes que a herdam.</td>
</tr>
<tr>
<td><a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-private.png"><img class="aligncenter size-full wp-image-421" title="POO-private" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-private.png" alt="" width="21" height="21" /></a></td>
<td><strong>private </strong>Membro pode ser a cessado somente dentro da classe que o define.</td>
</tr>
</tbody>
</table>
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td valign="top" width="638"> <a href="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-DC-ModificadorAcesso.png"><img class="aligncenter size-full wp-image-406" title="POO-DC-ModificadorAcesso" src="http://blog.maxcnunes.net/wp-content/uploads/2011/11/POO-DC-ModificadorAcesso.png" alt="" width="591" height="389" /></a></td>
</tr>
<tr>
<td valign="top" width="638">[sourcecode language="csharp"]
        public int idade;

        protected string nome;

        private decimal salario;
[/sourcecode]</td>
</tr>
</tbody>
</table>
Por enquanto é isto. No próximo artigo continuarei com outros conceitos de POO.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>383</wp:post_id>
		<wp:post_date>2011-12-01 03:21:41</wp:post_date>
		<wp:post_date_gmt>2011-12-01 03:21:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>programacao-orientada-a-objetos-poo-i</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="classe"><![CDATA[classe]]></category>
		<category domain="post_tag" nicename="desenvolvimento"><![CDATA[desenvolvimento]]></category>
		<category domain="post_tag" nicename="heranca"><![CDATA[herança]]></category>
		<category domain="post_tag" nicename="metodo"><![CDATA[metodo]]></category>
		<category domain="post_tag" nicename="oop"><![CDATA[OOP]]></category>
		<category domain="post_tag" nicename="poo"><![CDATA[POO]]></category>
		<category domain="post_tag" nicename="retornar"><![CDATA[retornar]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Classes, métodos, atributos, herança, sobrecarga, POO]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Artigo explica e exemplifica sobre alguns conceitos da POO. Abordando Classes, métodos, atributos, herança, sobrecarga, método construtor...]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Programação Orientada a Objetos (POO) - I]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Classes, métodos, atributos, herança, sobrecarga, POO]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Artigo explica e exemplifica sobre alguns conceitos da POO. Abordando Classes, métodos, atributos, herança, sobrecarga, método construtor...]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Programação Orientada a Objetos (POO) - I]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[Sâmara]]></wp:comment_author>
			<wp:comment_author_email>samara_santino@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.22.74.213</wp:comment_author_IP>
			<wp:comment_date>2011-12-01 11:40:04</wp:comment_date>
			<wp:comment_date_gmt>2011-12-01 11:40:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Max que legal, perfeito! Parabéns!

^^]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1322739604.12";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1323038277.79";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Configurando controle de versões Team Foundation Server(TFS)</title>
		<link>http://blog.maxcnunes.net/2011/12/13/configurando-controle-de-versoes-team-foundation-servertfs/</link>
		<pubDate>Tue, 13 Dec 2011 02:32:43 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=470</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_474" align="alignleft" width="150" caption="TFS - Team Foundation Server"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/12/tfs-team-foundation-server.jpg"><img class="size-thumbnail wp-image-474" title="tfs - team foundation server" src="http://blog.maxcnunes.net/wp-content/uploads/2011/12/tfs-team-foundation-server-150x150.jpg" alt="" width="150" height="150" /></a>[/caption]

Em um dos projetos que estive envolvido recentemente. Surgiu a necessidade de utilizar uma ferramenta robusta e confiável para o controle de versões dos fontes do projeto.

Desta forma optamos por escolher o Team Foundation Server(TFS).

O TFS é uma plataforma da Microsoft, que tem o objetivo de oferecer uma infraestrutura de Aplication Lifecycle Management (ALM), para gestão de todo o ciclo de vida do seu projeto.

E uma das ferramentas integrada nessa plataforma é o Source Control(Controle de Versões).

[caption id="attachment_476" align="aligncenter" width="617" caption="TFS - Estrutura"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/12/tfs-Estrutura.png"><img class="size-full wp-image-476" title="tfs - Estrutura" src="http://blog.maxcnunes.net/wp-content/uploads/2011/12/tfs-Estrutura.png" alt="" width="617" height="350" /></a>[/caption]

Na seguinte apresentação detalhei passo a passo como configurar o Windows Server 2008, SQL Server 2008 e o Team Foundation Server 2010 para utilizar sua configuração básica.
[slideshare id=10561160&amp;doc=configurandocontroledeversesteamfoundationservertfs-111212084759-phpapp02]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>470</wp:post_id>
		<wp:post_date>2011-12-13 02:32:43</wp:post_date>
		<wp:post_date_gmt>2011-12-13 02:32:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>configurando-controle-de-versoes-team-foundation-servertfs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="tfs"><![CDATA[tfs]]></category>
		<category domain="post_tag" nicename="versao"><![CDATA[versão]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[tfs, .net, windows server, c#, configurando, team foundation server]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial bem detalhado, de como instalar e configurar o Team Foundation Server(TFS) para utilização do controle de versões.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Configurando controle de versões Team Foundation Server(TFS)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[tfs, .net, windows server, c#, configurando, team foundation server]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial bem detalhado, de como instalar e configurar o Team Foundation Server(TFS) para utilização do controle de versões.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Configurando controle de versões Team Foundation Server(TFS)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Funções básicas da API Google Maps</title>
		<link>http://blog.maxcnunes.net/2012/01/01/funcoes-basicas-da-api-google-maps/</link>
		<pubDate>Sun, 01 Jan 2012 21:28:38 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=493</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_496" align="alignleft" width="150" caption="API Gmap"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/12/gmap-exemplo.png"><img class="size-thumbnail wp-image-496" title="gmap-exemplo" src="http://blog.maxcnunes.net/wp-content/uploads/2011/12/gmap-exemplo-150x150.png" alt="Exemplo do tutorial" width="150" height="150" /></a>[/caption]

Com o google maps cada vez mais difundido entre a população. Pela facilidade na utilização do aplicativo e pelos benefícios providos pelo mesmo. Está cada vez mais comum, nos depararmos com sites e sistemas utilizando tais funcionalidades do aplicativo, para indicar a localização de empresas, rotas e outros pontos interessantes.

O Google disponibiliza uma API para que os desenvolvedores utilizem os recursos do GMap. Neste <a href=" http://code.google.com/intl/pt-BR/apis/maps/documentation/javascript/reference.html" target="_blank"> link </a> você encontrará toda a documentação desta API.

<!--more-->
<br />
Na demonstração a seguir será abordado funcionalidades simples da API do GMaps, como:
<ul>
	<li>Marcar um ponto no mapa pelo endereço</li>
	<li>Marcar um ponto no mapa pela localização (Latitude e Longitude)</li>
	<li>Criar descrição de rotas</li>
	<li>Criar eventos para receber o endereço atual do marcador ao arrastá-lo</li>
	<li>Customizar ícones dos marcadores com imagens diferentes do padrão</li>
	<li>Definir a fronteira e o zoom do mapa, de acordo com todos os pontos adicionados nele</li>
</ul>
<div>Para você ter uma ideia de como ficará, segue um printscreen do resultado final.</div>
<a href="http://blog.maxcnunes.net/wp-content/uploads/2011/12/gmap-exemplo.png"><img class="aligncenter size-full wp-image-496" title="gmap-exemplo" src="http://blog.maxcnunes.net/wp-content/uploads/2011/12/gmap-exemplo.png" alt="Exemplo do tutorial" width="652" height="448" /></a>
<pre>Faça o download do demo: <a href="https://github.com/maxcnunes/GoogleMapsAPI3" target="_blank">https://github.com/maxcnunes/GoogleMapsAPI3</a>
[sourcecode language="javascript"]
/*
:::::: Variaveis globais
*/
var map;
var directionsPanel;
var directions;
var from;
var to;
var urlPrint;
var lat, lng;
var bounds;
var geocoder = new google.maps.Geocoder();
var directionsService = new google.maps.DirectionsService();

function CarregarMapa() {
    map = new google.maps.Map(document.getElementById('gmap'), {
        'zoom': 3,
        'center': new google.maps.LatLng(70, 0),
        'mapTypeId': google.maps.MapTypeId.ROADMAP
    });

    //Inicializa a o limite do mapa
    bounds = new google.maps.LatLngBounds();

    //Cria o marcador
    marker1 = new google.maps.Marker({
        map: map,
        position: new google.maps.LatLng(65, -10),
        draggable: true,
        title: 'Arraste-me!'
    });
    //Redimensiona o limite do mapa, de acordo com o novo ponto
    bounds.extend(new google.maps.LatLng(65, -10));

    //Carrega valores para a latitude e longitude
    lat = parseFloat($(&quot;#hdnLatitude&quot;).val());
    lng = parseFloat($(&quot;#hdnLongitude&quot;).val());

    marker2 = new google.maps.Marker({
        map: map,
        position: new google.maps.LatLng(lat, lng),
        draggable: true,
        icon: 'http://google-maps-icons.googlecode.com/files/airport.png'
    });
    //Redimensiona o limite do mapa, de acordo com o novo ponto
    bounds.extend(new google.maps.LatLng(lat, lng));

    //Cria um evento para o marcador, que será disparado ao arrastá-lo
    google.maps.event.addListener(marker1, &quot;drag&quot;, function () {

        //Recupera a localizacao do marcador
        var latLng = marker1.getPosition();

        //Passa a localizacao do ponto ao arrastar, para inputs text e hidden
        $(&quot;#txtLatitude&quot;).val(latLng.lat());
        $(&quot;#txtLongitude&quot;).val(latLng.lng());
        $(&quot;#hdnLatitude&quot;).val(latLng.lat());
        $(&quot;#hdnLongitude&quot;).val(latLng.lng());
    });

    //Cria um evento para o marcador, que será disparado ao terminar arrastá-lo
    google.maps.event.addListener(marker1, &quot;dragend&quot;, function () {

        geocodePosition(marker1.getPosition());
    });

    //Cria um evento para o marcador, que será disparado ao ser clicado
    google.maps.event.addListener(marker1, &quot;click&quot;, function () {
        //Cria uma janela de mensagem para o marcador
        marker.openInfoWindowHtml(&quot;Arraste o ponto, para definir a localização&quot;);
    });

    //Redefine os limites
    map.fitBounds(bounds);
    //Redefine o zoom de acordo com o limite
    map.setZoom(map.getZoom());
    //Redefine o centro de acordo com o limite
    map.setCenter(bounds.getCenter());
}

function AdicionarLocalizacao() {
    var marker3 = new google.maps.Marker({
        map: map,
        position: new google.maps.LatLng(-70, -10),
        draggable: true,
        title: 'Arraste-me!',
        icon: 'http://mapicons.nicolasmollet.com/wp-content/uploads/mapicons/shape-default/color-ff8a22/shapecolor-white/shadow-1/border-color/symbolstyle-color/symbolshadowstyle-no/gradient-no/archery.png'
    });
    //Redimensiona o limite do mapa, de acordo com o novo ponto
    bounds.extend(new google.maps.LatLng(-70, -10));

    //Redefine os limites
    map.fitBounds(bounds);
    //Redefine o zoom de acordo com o limite
    map.setZoom(bounds.getZoom());
    //Redefine o centro de acordo com o limite
    map.setCenter(bounds.getCenter());
}

function CarregarPeloEndereco() {
    //Recupera o endereço no input text
    var endereco = $('#txtEndereco').val();

    //Carrega o endereco no mapa
    geocoder.geocode({
        address: endereco
    }, function (responses) {
        if (responses &amp;&amp; responses.length &gt; 0) {
            //Recupera a localiçao retornada pelo geocoder
            var place = responses[0];

            //Cria Marcador
            var marker4 = new google.maps.Marker({
                map: map,
                position: place.geometry.location,
                draggable: true,
                title: 'Arraste-me!',
                icon: 'http://mapicons.nicolasmollet.com/wp-content/uploads/mapicons/shape-default/color-ffc11f/shapecolor-color/shadow-1/border-dark/symbolstyle-white/symbolshadowstyle-dark/gradient-no/scoutgroup.png'
            });
            //Redimensiona o limite do mapa, de acordo com o novo ponto
            bounds.extend(place.geometry.location);

            //Atualiza valores nos inputs da pagina
            $('#txtEnderecoImovel').val(place.formatted_address);

            //Redefine os limites
            map.fitBounds(bounds);
            //Redefine o zoom de acordo com o limite
            map.setZoom(map.getZoom());
            //Redefine o centro de acordo com o limite
            map.setCenter(bounds.getCenter());
        } else {
            $('#txtEndereco').val('Nao pode determinar a localizacao.');
        }
    });
}

function CriarRota() {
    //Verifica se o input text esta preenchido
    if (Trim($(&quot;#ondeestou&quot;).val()) == &quot;&quot;) {
        alert(&quot;Preencha a sua localizacao.&quot;);
        return;
    }
    //Limpa todas os marcadores
    //map.clearOverlays();

    //Define o painel que receberá a rota &quot;escrita&quot;
    directionsPanel = document.getElementById(&quot;rota_gmap&quot;);
    //Limpa o painel de qualquer html
    directionsPanel.innerHTML = &quot;&quot;;

    //Recupera o endereco do input text
    from = $(&quot;#ondeestou&quot;).val();

    var directionsDisplay = new google.maps.DirectionsRenderer({
        'map': map,
        'preserveViewport': true,
        'draggable': true
    });
    directionsDisplay.setPanel(directionsPanel);

    var request = {
        origin: from,
        destination: new google.maps.LatLng(lat, lng),
        travelMode: google.maps.DirectionsTravelMode.DRIVING
    };
    directionsService.route(request, function (response, status) {
        if (status == google.maps.DirectionsStatus.OK) {
            directionsDisplay.setDirections(response);
        }
    });
}

function geocodePosition(pos) {
    geocoder.geocode({
        latLng: pos
    }, function (responses) {
        if (responses &amp;&amp; responses.length &gt; 0) {
            $('#txtEndereco').val(responses[0].formatted_address);
        } else {
            $('#txtEndereco').val('Nao pode determinar a localizacao.');
        }
    });
}

/*
::::: SCRIPTS DE SUPORTE
*/
function Trim(str) {
    return str.replace(/^s+|s+$/g, &quot;&quot;);
}

function Imprimir() {
    var disp_setting = &quot;toolbar=yes,location=no,directories=yes,menubar=yes,&quot;;
    disp_setting += &quot;scrollbars=yes,width=643, height=600, left=100, top=25&quot;;
    var content_vlue = document.getElementById(&quot;rota_gmap&quot;).innerHTML;
    var docprint = window.open(&quot;&quot;, &quot;&quot;, disp_setting);
    docprint.document.open();
    docprint.document.write(&quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;Como chegar&lt;/title&gt;&quot;);
    docprint.document.write(&quot;&lt;style type=&quot;text/css&quot;&gt;body{ font-family:Tahoma;font-size:8pt; margin:10px; }&lt;/style&gt;&quot;);
    docprint.document.write(&quot;&lt;/head&gt;&lt;body&gt;&lt;center&gt;&quot;);
    docprint.document.write(&quot;&lt;h1&gt;Como chegar&lt;/h2&gt;&quot;);
    docprint.document.write(&quot;&lt;div  style=&quot;width: 603px; margin-left:2px;&quot;&gt;&quot;);
    docprint.document.write(content_vlue);
    docprint.document.write(&quot;&lt;/div&gt;&quot;);
    docprint.document.write(&quot;&lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt;window.print();&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;&quot;);
    docprint.document.close();
    docprint.focus();
} 
[/sourcecode]
[sourcecode language="html"]
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Google Maps API&lt;/title&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;
    &lt;!-- :: CSS - Page Layout :: --&gt;
    &lt;link href=&quot;css/common.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;
    &lt;!-- :: JS - JQuery :: --&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;http://code.jquery.com/jquery-1.7.1.min.js&quot;&gt;&lt;/script&gt;
    &lt;!-- :: JS - Google Maps API :: --&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;http://maps.google.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;
    &lt;!-- :: JS - GMaps Functions :: --&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;js/js-gmaps-functions.js&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt;
        $(function () {
            //Inicializa o mapa
            CarregarMapa();
        });
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div id=&quot;wrapper&quot;&gt;
        &lt;!--Valores pré-definidos para o mapa--&gt;
        &lt;input id=&quot;hdnLatitude&quot; runat=&quot;server&quot; type=&quot;hidden&quot; value=&quot;-23.292757&quot; /&gt;
        &lt;input id=&quot;hdnLongitude&quot; runat=&quot;server&quot; type=&quot;hidden&quot; value=&quot;-51.169424&quot; /&gt;
        &lt;div&gt;
            &lt;div class=&quot;box_left&quot;&gt;
                &lt;label&gt;
                    Endereço:&lt;/label&gt;
                &lt;input type=&quot;text&quot; id=&quot;txtEndereco&quot; value=&quot;Av. Tiradentes 1241, Londrina PR&quot; size=&quot;54&quot; /&gt;
                &lt;!--Botao busca o mapa pelo endereço--&gt;
                &lt;a class=&quot;button&quot; href=&quot;javascript:CarregarPeloEndereco();&quot; title=&quot;Carregar a partir do endereço&quot;&gt;
                    &lt;img src=&quot;img/search.png&quot; alt=&quot;Buscar&quot; /&gt;
                &lt;/a&gt;
                &lt;div class=&quot;box_middle&quot;&gt;
                    &lt;label&gt;
                        Latitude:&lt;/label&gt;
                    &lt;input type=&quot;text&quot; id=&quot;txtLatitude&quot; value=&quot;-23.292757&quot; /&gt;
                &lt;/div&gt;
                &lt;div class=&quot;box_middle&quot;&gt;
                    &lt;label&gt;
                        Longitude:&lt;/label&gt;
                    &lt;input type=&quot;text&quot; id=&quot;txtLongitude&quot; value=&quot;-51.169424&quot; /&gt;
                    &lt;!--Botao busca o mapa pela localização (Latitude e Longitude)--&gt;
                    &lt;a class=&quot;button&quot; href=&quot;javascript:CarregarMapa();&quot; title=&quot;Carregar a partir da longitude e latitude&quot;&gt;
                        &lt;img src=&quot;img/search.png&quot; alt=&quot;Buscar&quot; /&gt;
                    &lt;/a&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;label&gt;
                        Adicionar mais 1 localização
                        &lt;!--Botao adiciona uma nova localização no mapa--&gt;
                        &lt;a class=&quot;button&quot; href=&quot;javascript:AdicionarLocalizacao();&quot;&gt;
                            &lt;img src=&quot;img/add.png&quot; alt=&quot;Add&quot; /&gt;
                        &lt;/a&gt;
                    &lt;/label&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=&quot;box_right&quot;&gt;
                &lt;label&gt;
                    Como chegar?&lt;/label&gt;
                &lt;input type=&quot;text&quot; id=&quot;ondeestou&quot; size=&quot;36&quot; /&gt;
                &lt;!--Botao criar rota--&gt;
                &lt;a href=&quot;javascript:CriarRota();&quot; title=&quot;Traçar Rota&quot; class=&quot;button&quot;&gt;
                    &lt;img src=&quot;img/go.png&quot; alt=&quot;Ir&quot; /&gt;&lt;/a&gt;
                &lt;br /&gt;
                &lt;span style=&quot;font-size: 8pt; color: #999;&quot;&gt;Ex: Rua Numero, Cidade, Estado&lt;/span&gt;
                &lt;br /&gt;
                &lt;br /&gt;
                &lt;!--Botao imprimir--&gt;
                &lt;a href=&quot;javascript:Imprimir();&quot; class=&quot;button&quot;&gt;
                    &lt;img src=&quot;img/print.png&quot; alt=&quot;Imprimir&quot; /&gt;&lt;span&gt;Imprimir rota&lt;/span&gt; &lt;/a&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;div class=&quot;box_left&quot;&gt;
                &lt;!--Div que armazenará o mapa--&gt;
                &lt;div id=&quot;gmap&quot;&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=&quot;box_right&quot;&gt;
                &lt;!--Div que armazenará a descrição da rota--&gt;
                &lt;div id=&quot;rota_gmap&quot;&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
[/sourcecode]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>493</wp:post_id>
		<wp:post_date>2012-01-01 21:28:38</wp:post_date>
		<wp:post_date_gmt>2012-01-01 21:28:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>funcoes-basicas-da-api-google-maps</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="google-map"><![CDATA[google map]]></category>
		<category domain="category" nicename="js"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[api, google, map, 3, bound, resize, rota, marcadores]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial funções básicas da API Google Maps. Carregar mapa pelo endereço, localização, adicionar marcadores, corrigir fronteira do mapa...]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Funções básicas da API Google Maps]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[api, google, map, 3, bound, resize, rota, marcadores]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial funções básicas da API Google Maps. Carregar mapa pelo endereço, localização, adicionar marcadores, corrigir fronteira do mapa...]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Funções básicas da API Google Maps]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[Rafael]]></wp:comment_author>
			<wp:comment_author_email>rafaelvjb@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.96.188.63</wp:comment_author_IP>
			<wp:comment_date>2012-03-20 02:07:33</wp:comment_date>
			<wp:comment_date_gmt>2012-03-20 02:07:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cade mais diquinhas?? 
Sempre passo ae pra dar uma olhada nas novidades.! 

=D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1332209253.69";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1332815056.07";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[maxcnunes]]></wp:comment_author>
			<wp:comment_author_email>maxcnunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.96.189.37</wp:comment_author_IP>
			<wp:comment_date>2012-03-27 02:24:15</wp:comment_date>
			<wp:comment_date_gmt>2012-03-27 02:24:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Providenciaremos.. uahuahuahuha]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>10</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1332815056.05";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Elisa Antolli]]></wp:comment_author>
			<wp:comment_author_email>elisa.antolli@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.c9software.com.br</wp:comment_author_url>
			<wp:comment_author_IP>189.103.131.129</wp:comment_author_IP>
			<wp:comment_date>2012-07-04 00:21:22</wp:comment_date>
			<wp:comment_date_gmt>2012-07-04 00:21:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Oiiiiiiiiiiii Maaaaaaaaaaaaxxxxx,

asiduhasuidhsad, tudo bom?

legal seu post, vou te pedir um mais dificil agor, que tal?

vamos ver se vc me ajuda..
preciso criar um desses que seja por raio :D

hehe

bjinhos]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1341361282.81";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1344099778.1";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[maxcnunes]]></wp:comment_author>
			<wp:comment_author_email>maxcnunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.22.74.213</wp:comment_author_IP>
			<wp:comment_date>2012-08-04 17:10:32</wp:comment_date>
			<wp:comment_date_gmt>2012-08-04 17:10:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Essa vou ficar devendo, não tenho nenhum exemplo que já tenha feito sobre isso. 
Mas no site do google maps tem bastante coisa, da uma olhada lá.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>12</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1344100232.24";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[allan]]></wp:comment_author>
			<wp:comment_author_email>allanroberto18@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.126.88.102</wp:comment_author_IP>
			<wp:comment_date>2012-10-24 18:17:58</wp:comment_date>
			<wp:comment_date_gmt>2012-10-24 18:17:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Parabéns pelo post... excelente!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1351102678.26";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1352422879.04";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2832</wp:comment_id>
			<wp:comment_author><![CDATA[Samuel Quiteque]]></wp:comment_author>
			<wp:comment_author_email>samuelquiteque2012@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>197.148.35.212</wp:comment_author_IP>
			<wp:comment_date>2014-07-16 14:31:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-16 14:31:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[como ficaria, cria uma rota A e B com descrição dos pontos vindo do ficheiro pontos.json ou traçar rotas com coordenadas, clicando no ponto aparece uma janela de descrição.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405521060.279077053070068359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406894279.32472705841064453125;s:7:"message";s:48:"maxcnunes changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3005</wp:comment_id>
			<wp:comment_author><![CDATA[maxcnunes]]></wp:comment_author>
			<wp:comment_author_email>maxcnunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.49.237.214</wp:comment_author_IP>
			<wp:comment_date>2014-08-01 11:57:59</wp:comment_date>
			<wp:comment_date_gmt>2014-08-01 11:57:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nāo vou conseguir te ajudar nesse caso. Acho que nunca fiz algo assim.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>2832</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406894279.9332129955291748046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:70:{s:15:"comment_post_ID";i:493;s:14:"comment_author";s:9:"maxcnunes";s:20:"comment_author_email";s:19:"maxcnunes@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:71:"Nāo vou conseguir te ajudar nesse caso. Acho que nunca fiz algo assim.";s:14:"comment_parent";i:2832;s:7:"user_ID";i:1;s:7:"user_ip";s:14:"187.49.237.214";s:10:"user_agent";s:120:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36";s:8:"referrer";s:52:"http://blog.maxcnunes.net/wp-admin/edit-comments.php";s:4:"blog";s:25:"http://blog.maxcnunes.net";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:72:"http://blog.maxcnunes.net/2012/01/01/funcoes-basicas-da-api-google-maps/";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:22:"POST_newcomment_author";s:0:"";s:28:"POST_newcomment_author_email";s:0:"";s:26:"POST_newcomment_author_url";s:0:"";s:12:"POST_user_ID";s:1:"1";s:11:"POST_action";s:15:"replyto-comment";s:15:"POST_comment_ID";s:4:"2832";s:20:"POST_comment_post_ID";s:3:"493";s:11:"POST_status";s:0:"";s:13:"POST_position";s:2:"-1";s:13:"POST_checkbox";s:1:"1";s:9:"POST_mode";s:6:"detail";s:32:"POST__ajax_nonce-replyto-comment";s:10:"ca23468f88";s:32:"POST__wp_unfiltered_html_comment";s:10:"ce822fcbce";s:10:"POST_ak_js";s:13:"1406893888623";s:12:"POST_content";s:71:"Nāo vou conseguir te ajudar nesse caso. Acho que nunca fiz algo assim.";s:7:"POST_id";s:3:"493";s:21:"POST_comments_listing";s:3:"all";s:19:"POST_approve_parent";s:1:"1";s:15:"SERVER_SOFTWARE";s:11:"nginx/1.6.0";s:11:"REQUEST_URI";s:24:"/wp-admin/admin-ajax.php";s:4:"USER";s:5:"nginx";s:4:"HOME";s:16:"/var/cache/nginx";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:63:"/var/www/maxcnunes.net/blog/public_html/wp-admin/admin-ajax.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:48:"application/x-www-form-urlencoded; charset=UTF-8";s:14:"CONTENT_LENGTH";s:3:"405";s:11:"SCRIPT_NAME";s:24:"/wp-admin/admin-ajax.php";s:12:"DOCUMENT_URI";s:24:"/wp-admin/admin-ajax.php";s:13:"DOCUMENT_ROOT";s:39:"/var/www/maxcnunes.net/blog/public_html";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"187.49.237.214";s:11:"REMOTE_PORT";s:5:"65495";s:11:"SERVER_ADDR";s:14:"198.211.102.52";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:18:"blog.maxcnunes.net";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:18:"blog.maxcnunes.net";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"405";s:11:"HTTP_ACCEPT";s:3:"*/*";s:11:"HTTP_ORIGIN";s:25:"http://blog.maxcnunes.net";s:21:"HTTP_X_REQUESTED_WITH";s:14:"XMLHttpRequest";s:15:"HTTP_USER_AGENT";s:120:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36";s:17:"HTTP_CONTENT_TYPE";s:48:"application/x-www-form-urlencoded; charset=UTF-8";s:12:"HTTP_REFERER";s:52:"http://blog.maxcnunes.net/wp-admin/edit-comments.php";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:35:"pt-BR,pt;q=0.8,en-US;q=0.6,en;q=0.4";s:11:"HTTP_COOKIE";s:0:"";s:8:"PHP_SELF";s:24:"/wp-admin/admin-ajax.php";s:12:"REQUEST_TIME";s:10:"1406894278";s:25:"comment_post_modified_gmt";s:19:"2012-01-01 21:28:38";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Manipulação de Dados com Repositórios em ADO.NET SqlClient</title>
		<link>http://blog.maxcnunes.net/2012/02/01/manipulacao-de-dados-com-repositorios-em-ado-net-sqlclient/</link>
		<pubDate>Wed, 01 Feb 2012 18:10:49 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=525</guid>
		<description></description>
		<content:encoded><![CDATA[<div>

[caption id="attachment_526" align="alignleft" width="186" caption="Estrutura do Projeto"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/02/Projeto-ADONET.png"><img class="size-medium wp-image-526" title="Projeto-ADONET" src="http://blog.maxcnunes.net/wp-content/uploads/2012/02/Projeto-ADONET-186x300.png" alt="" width="186" height="300" /></a>[/caption]

Hoje venho apresentar uma forma simples e produtiva para persistência e manipulação de dados.

</div>
<div>Para isso vou utilizar a seguinte arquitetura:</div>
<strong>Camada de Apresentação</strong> : Telas Windows Form

<strong>Camada de Entidades</strong>: Classes referente aos objetos de negócio do projeto

<strong>Camada de Repositório</strong>: Classes relacionadas aos objetos de negócios, com a responsabilidade de persistência e manipulação de dados.
<div>Para o acesso aos dados, implementarei os repositórios utilizando o ADO.NET SqlClient. O que por um lado vai gerar um pouco mais de serviço, precisando implementar todos os comandos SQL para manipulação dos dados. Por outro lado, será um ponto positivo. Pois vamos ter a autonomia nessas manipulações, por não estar dependendo de Frameworks ORMs e tendo todas as possibilidades de comandos que o SQL pode nos proporcionar.</div>
<br>
<div>O código do projeto foi compartilhado no Github: <a href="https://github.com/maxcnunes/WindowsForm-Entidades-RepositorioAdoNet" target="_blank">https://github.com/maxcnunes/WindowsForm-Entidades-RepositorioAdoNet</a></div>
<div><!--more--></div>
<br>
<h3>Projeto Entidades</h3>
Aqui implementamos dentro do projeto de Entidades, nossa classe referente ao objeto Aluno. Tente sempre manter, para as classes de entidade, a real características e comportamentos referente ao  objeto que a classe representa. Não deixe métodos CRUD aqui, porque no mundo real um aluno não possui tais comportamentos.

[gist id=1748064 file=Aluno.cs]
<h3>Projeto Repositório</h3>
A classe a seguir será herdada por todos os repositórios concretos. Nela manteremos métodos e atributos comum aos outros repositórios.  Neste caso, foi implementado o método criar conexão, que recupera a string de conexão que está no arquivo app.config, que está localizado no projeto principal da Solution (Camada Apresentação).

[gist id=1748064 file=RepositorioBase.cs]

Interface que define os comportamentos comuns ao todos os repositórios. Dessa forma garantimos que todos os repositórios deverão seguir esta implementação. O mais legal nesse ponto, é que foi utilizado generics. Deixando esta interface bem genérica e possibilitando que qualquer classe consiga implementá-la.

[gist id=1748064 file=IRepositorio.cs]

Repositório Aluno implementa a interface IRepositorio e herda as definições da classe RepositorioBase.  Aqui sim realizamos o acesso aos dados, através do SqlClient do ADO.NET.

[gist id=1748064 file=AlunoRepositorio.cs]

Note que no código anterior utilizamos 3 tipos de <em><strong>"Execute Command"</strong></em>, para executar os comandos SQL.
<ul>
	<li><strong>ExecuteScalar: </strong>Executa o comando SQL e retorna a primeira coluna da primeira linha do conjunto de resultados retornado na consulta. As restantes linhas e colunas são ignoradas. Normalmente utilizado para COUNT, SUM e outros desse tipo.</li>
	<li><strong>ExecuteReader: </strong>Executa o comando SQL retorna uma variável que fornece uma maneira de ler um fluxo uni-direcional de uma base de dados SQL Server. Utilizado para comandos de SELECT.</li>
	<li><strong>ExecuteNonQuery:</strong> Executa o comando SQL e retorna o número de linhas afetadas. Normalmente utilizado para comandos INSERT, DELETE e UPDATE.</li>
</ul>
<h3>Projeto MDI_Escola (Apresentação)</h3>
A tela para gerenciamento do Aluno ficará assim:

[caption id="attachment_535" align="aligncenter" width="615" caption="Tela"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/02/Tela-ADONET.png"><img class="size-full wp-image-535 " title="Tela-ADONET" src="http://blog.maxcnunes.net/wp-content/uploads/2012/02/Tela-ADONET.png" alt="" width="615" height="446" /></a>[/caption]

Eventos da tela Cadastrar Aluno (CodeBehind da Tela):
[gist id=1748064 file=FrmCadAluno.cs]

Por último adicione um arquivo "App.config" ao projeto da camada de Apresentação e configure nele a conexão com o seu banco:
[gist id=1748064 file=App.config]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>525</wp:post_id>
		<wp:post_date>2012-02-01 18:10:49</wp:post_date>
		<wp:post_date_gmt>2012-02-01 18:10:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>manipulacao-de-dados-com-repositorios-em-ado-net-sqlclient</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="banco"><![CDATA[banco]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="classe"><![CDATA[classe]]></category>
		<category domain="post_tag" nicename="poo"><![CDATA[POO]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="post_tag" nicename="sqlclient"><![CDATA[sqlclient]]></category>
		<category domain="post_tag" nicename="sqlexpress"><![CDATA[SQLEXPRESS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[DAO, Repositório, ADO.NET, SqlClient]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial manipulação de Dados com Repositórios em ADO.NET SqlClient]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Manipulação de Dados com Repositórios em ADO.NET SqlClient]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[DAO, Repositório, ADO.NET, SqlClient]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Tutorial manipulação de Dados com Repositórios em ADO.NET SqlClient]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Manipulação de Dados com Repositórios em ADO.NET SqlClient]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Replace All JavaScript</title>
		<link>http://blog.maxcnunes.net/2012/03/11/replace-all-javascript/</link>
		<pubDate>Sun, 11 Mar 2012 13:16:07 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=567</guid>
		<description></description>
		<content:encoded><![CDATA[Dica rápida:

Para você que precisa substituir vários caracteres repetidos em um texto javascript. E já percebeu que o &nbsp;simples "replace" não funciona. No caso do javascript, o replace substitui apenas o 1º caracter encontrado.

Basta utilizar split + join ao invés do replace:&nbsp;

<code lang="javascript">.split(CaracterAntigo).join(CaracterNovo);</code>

Exemplo:

<code lang="javascript">var texto = '1. 2. 3. 4. 5';
var textoFormatado = texto.split('.').join('');
//Ficaria assim: 1 2 3 4 5</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>567</wp:post_id>
		<wp:post_date>2012-03-11 13:16:07</wp:post_date>
		<wp:post_date_gmt>2012-03-11 13:16:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>replace-all-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="js"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[JQuery]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Replace, All, JavaScript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Replace All JavaScript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Replace All JavaScript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Replace, All, JavaScript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Replace All JavaScript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Replace All JavaScript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Padrão de nomes</title>
		<link>http://blog.maxcnunes.net/2012/09/25/padrao-de-nomes/</link>
		<pubDate>Tue, 25 Sep 2012 01:25:43 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=568</guid>
		<description></description>
		<content:encoded><![CDATA[

[caption id="attachment_724" align="alignleft" width="150" caption="Nomenclatura - Organizado"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/09/organizado.jpg"><img class="size-thumbnail wp-image-724" title="organizado" src="http://blog.maxcnunes.net/wp-content/uploads/2012/09/organizado-150x150.jpg" alt="" width="150" height="150" /></a>[/caption]

Em projetos que existem um time de desenvolvimento e um desenvolvedor depende de outros para construir um sistema, uma padronização no código deve ser tomada como regra para o bem comum do projeto.

Não estou dizendo que os desenvolvedores devem ficar moldados a regras e não podem experimentar novas possibilidades. Mas que se necessário e possível, seja feito com o consentimento de todos.

<!--more-->
<h2>Caso do Problema</h2>
Vamos usar um exemplo, que com certeza ocorre em muitas empresas. Um desenvolvedor, que cumpria todas as tarefas muito bem, dentro do prazo e funcionalidades exigidas. O qual, nunca passou pela sua cabeça sair da empresa, em um momento inesperado precisa sair da mesma. Até ai tudo bem, mas logo após deste fato, ocorre algum problema em umas das tarefas desenvolvidas por ele e você como desenvolvedor foi encarregado de corrigir esse pequeno bug.

Ao abrir o código para manutenção, você nota que aquilo que estava funcionando muito bem, na verdade estava uma completa bagunça.
<ul>
	<li>Métodos com letras todas em maiúscula e outros em minúscula.</li>
	<li>Algumas variáveis em inglês e outras em português.</li>
	<li>Algumas variáveis e métodos abreviados.</li>
	<li>Nenhum comentário e summary sobre as funcionalidades. (É desconsiderável&nbsp;se estiver bem estruturado, refatorado e com nomes corretos)</li>
	<li>Métodos repetidos que realizavam exatamente a mesma funcionalidade.</li>
</ul>
Imaginem como uma simples correção pode se tornar tão complicado, que é possível pensar que seja mais fácil refazer esta tarefa, do que entender toda essa bagunça para conseguir corrigir o bug.
<h2>Solução</h2>
Desde o .NET Framework 1.1 a Microsoft disponibiliza no MSDN um Guia de Nomenclaturas, que indica uma série de padrões para nomes.

<a href="http://msdn.microsoft.com/en-us/library/xzf533w0(v=vs.71).aspx#feedback" target="_blank">http://msdn.microsoft.com/en-us/library/xzf533w0(v=vs.71).aspx#feedback</a>
<h3>Estilos de Capitalização</h3>
Utilize o seguinte 3 estilos de convenções para as capitalizações.
<table class="table_post_max" border="1" cellspacing="1" cellpadding="2">
<tbody>
<tr>
<td style="width: 100px;">Pascal case</td>
<td>A primeira letra do identificador e a primeira letra de cada palavra concatenada subsequente forem capitalizados. Você pode usar caso Pascal para identificadores de três ou mais caracteres. Por exemplo: BackColor</td>
</tr>
<tr>
<td>Camel case</td>
<td>A primeira letra de um identificador é minúscula ea primeira letra de cada palavra concatenada subsequente é maiúscula. Por exemplo: backColor</td>
</tr>
<tr>
<td>Uppercase</td>
<td>Todas as letras no identificador são capitalizados. Use esta convenção apenas para identificadores que consistem em duas ou menos letras. Por exemplo: System.IO

System.Web.UI</td>
</tr>
</tbody>
</table>
A seguinte tabela resume as regras de capitalização e disponibiliza exemplos de diferentes tipos de capitalização.
<table class="table_post_max" border="1" cellspacing="1" cellpadding="2">
<tbody>
<tr>
<td><span style="color: #00cc00;"><strong>Identificador</strong></span></td>
<td><span style="color: #00cc00;"><strong>Case</strong></span></td>
<td><span style="color: #00cc00;"><strong>Exemplo</strong></span></td>
</tr>
<tr>
<td>&nbsp;Classes</td>
<td>&nbsp;Pascal</td>
<td>&nbsp;OrdemDeServico</td>
</tr>
<tr>
<td>&nbsp;Enum</td>
<td>&nbsp;Pascal</td>
<td>&nbsp;Situacao</td>
</tr>
<tr>
<td>&nbsp;Eventos</td>
<td>&nbsp;Pascal</td>
<td>&nbsp;AlteracaoDoValor</td>
</tr>
<tr>
<td>&nbsp;Read-only, Estático</td>
<td>&nbsp;Pascal</td>
<td>&nbsp;ValorVermelho</td>
</tr>
<tr>
<td>&nbsp;Interfaces</td>
<td>&nbsp;Pascal</td>
<td>&nbsp;IRepositorio (Sempre com prefixo 'I')</td>
</tr>
<tr>
<td>&nbsp;Métodos</td>
<td>&nbsp;Pascal</td>
<td>&nbsp;BuscarPeloNome</td>
</tr>
<tr>
<td>&nbsp;Namespace</td>
<td>&nbsp;Pascal</td>
<td>&nbsp;Projeto.Dados.Repositorio</td>
</tr>
<tr>
<td>&nbsp;Parâmetro</td>
<td>&nbsp;Camel</td>
<td>&nbsp;dataNascimento</td>
</tr>
<tr>
<td>&nbsp;Propriedade</td>
<td>&nbsp;Pascal</td>
<td>&nbsp;DataNascimento</td>
</tr>
<tr>
<td>&nbsp;Atributo</td>
<td>&nbsp;Camel</td>
<td>&nbsp;dataCadastro</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
</tbody>
</table>
<h3>Abreviações</h3>
Para evitar confusão, siga estas regras relativa a utilização de abreviaturas:
<ul>
	<li>Não use abreviações ou contrações de partes de nomes identificadores. Por exemplo, use<span style="color: #0099ff;"> ObterAltura</span> ao invés de <span style="color: #74d217;"><span style="color: #0099ff;">ObterAlt</span><span style="color: #000000;">.</span></span></li>
	<li><span style="color: #74d217;"><span style="color: #000000;">Não utilize siglas que não são geralmente aceitados no campo da computação.</span></span></li>
	<li><span style="color: #74d217;"><span style="color: #000000;">Quando apropriado, use o bom conhecimento de siglas para substituir frases e nomes compridos. Pro exemplo, use <span style="color: #0099ff;">UI</span> ao invés de<span style="color: #0099ff;"> User Interface</span>.</span></span></li>
	<li><span style="color: #74d217;"><span style="color: #000000;">Quando utilizar siglas, use Pascal case ou Camel case para siglas com mais de 2 caracteres. E quando for apenas 2 caracteres, mantena tudo em maiúsculo.</span></span></li>
</ul>
<h3>&nbsp;</h3>
<h3>Evitando a Confusão com Nomes e Tipos</h3>
Use nomes que descrevem o significado de um tipo ao invés de nomes que descrevem o tipo. No caso raro que um parâmetro não tem significado semântico para além do seu tipo, usar um nome genérico. Por exemplo:
<table class="table_post_max" border="1" cellspacing="1" cellpadding="2">
<tbody>
<tr>
<td>Errado</td>
<td>Certo</td>
</tr>
<tr>
<td>&nbsp;public Pessoa BuscarPessoa(string stringNome);</td>
<td>&nbsp;public Pessoa BuscarPessoa(string nome);</td>
</tr>
<tr>
<td>&nbsp;public int CalcularImc(int intPeso, double doubleAltura);</td>
<td>&nbsp;public int CalcularImc(int peso, double altura);</td>
</tr>
</tbody>
</table>
<h3>Namespace</h3>
Uma regra comum para a nomenclatura de namespaces é utilizar o nome da empresa seguido pelo nome da tecnologia ou camada de um projeto e opcionalmente pela funcionalidade e design.
<table class="table_post_max" border="1" cellspacing="1" cellpadding="2">
<tbody>
<tr>
<td>NomeEmpresa.NomeTecnologia[.Funcionalidade][.Design]</td>
</tr>
</tbody>
</table>
Por exemplo:
<table class="table_post_max" border="1" cellspacing="1" cellpadding="2">
<tbody>
<tr>
<td>Tam.Dados</td>
</tr>
<tr>
<td>Tam.Dados.Repositorios</td>
</tr>
</tbody>
</table>
Não utilize o mesmo nome para um namespace e uma classe. Um namespace chamado <span style="color: #0099ff;">Tam.Dados</span> e uma classe chamada <span style="color: #0099ff;">Dados<span style="color: #000000;">.</span></span>
<h3>Nome de Classes</h3>
<ul>
	<li>Utilize um substantivo como nome de classes.</li>
	<li>Utilize Pascal case.</li>
	<li>Utilize abreviações com moderação.</li>
	<li>Não utilize prefixos como <span style="color: #0099ff;">c <span style="color: #000000;">para classes. Por exemplo, utilize <span style="color: #0099ff;">Pessoa</span> ao invés de <span style="color: #0099ff;">cPessoa<span style="color: #000000;">.</span></span></span></span></li>
	<li><span style="color: #0099ff;"><span style="color: #000000;"><span style="color: #0099ff;"><span style="color: #000000;">Não utilize '<span style="color: #0099ff;">_</span>' para separar nomes.</span></span></span></span></li>
	<li>Quando apropriado, utilize uma palavra composta para nomear uma classe derivada. A segunda parte do nome da classe derivada deve ter o nome da classe base. Por exemplo, <span style="color: #0099ff;">ArgumentException</span>.</li>
</ul>
<table class="table_post_max" border="1" cellspacing="1" cellpadding="2">
<tbody>
<tr>
<td>public class Pessoa</td>
</tr>
</tbody>
</table>
<h3>Nome de Interfaces</h3>
<ul>
	<li>Nome de interfaces com substantivos ou adjetivos que descrevam um comportamento. Por exemplo, a interface com o nome <span style="color: #0099ff;">IRepositorio</span>&nbsp;descrevendo um substantivo. E a interface <span style="color: #0099ff;">IValidador</span> com uma adjetivo.</li>
	<li>Utilize Pascal case.</li>
	<li>Utilize abreviações com moderação.</li>
	<li>Não utilize '_' para separar nomes.</li>
	<li>Utilize o prefixo '<span style="color: #0099ff;">I</span>' em maiúsculo para indicar que é uma interface.</li>
	<li>Utilize similaridade de nomes quando você definiu uma classe/interface par onde a classe é um padrão da implementação da interface. O nomes devem serem diferenciados somente pela letra I como prefixo no nome da interface.</li>
</ul>
<table class="table_post_max" border="1" cellspacing="1" cellpadding="2">
<tbody>
<tr>
<td>public interface IValidador</td>
</tr>
</tbody>
</table>
<h3>Nome de Enums</h3>
<ul>
	<li>Use Pascal case para Enums e seus valores</li>
	<li>Utilize abreviações com moderação.</li>
	<li>Não utilize <span style="color: #0099ff;">Enum</span> como sufixo ou prefixo.</li>
</ul>
<h3>Nome de Campos Estáticos</h3>
<div>
<ul>
	<li>Utilize substantivos ou abreviações de substantivos para campos estáticos.</li>
	<li>Utilize Pascal case.</li>
	<li>Não utilize a notação Hungara para nomes de campos estáticos.</li>
	<li>É recomendado que utilize propriedades estáticas ao invés de campos estáticos.</li>
</ul>
</div>
<div>&nbsp;</div>
<div>Referências:</div>
<div><a href="http://msdn.microsoft.com/en-us/library/ab6a8y1b(v=vs.71).aspx">http://msdn.microsoft.com/en-us/library/ab6a8y1b(v=vs.71).aspx</a></div>
<div><a href="http://msdn.microsoft.com/en-us/library/4df752aw(v=vs.71).aspx">http://msdn.microsoft.com/en-us/library/4df752aw(v=vs.71).aspx</a></div>
<div><a href="http://msdn.microsoft.com/en-us/library/fzcth91k(v=vs.71).aspx">http://msdn.microsoft.com/en-us/library/fzcth91k(v=vs.71).aspx</a></div>
<div><a href="http://msdn.microsoft.com/en-us/library/h0eyck3s(v=vs.71).aspx">http://msdn.microsoft.com/en-us/library/h0eyck3s(v=vs.71).aspx</a></div>
<div><a href="http://msdn.microsoft.com/en-us/library/04xykw57(v=vs.71).aspx">http://msdn.microsoft.com/en-us/library/04xykw57(v=vs.71).aspx</a></div>
<div><a href="http://msdn.microsoft.com/en-us/library/426s83c3(v=vs.71).aspx">http://msdn.microsoft.com/en-us/library/426s83c3(v=vs.71).aspx</a></div>
<div><a href="http://msdn.microsoft.com/en-us/library/9cws5bzd(v=vs.71).aspx">http://msdn.microsoft.com/en-us/library/9cws5bzd(v=vs.71).aspx</a></div>
<div><a href="http://msdn.microsoft.com/en-us/library/czefa0ke(v=vs.71).aspx">http://msdn.microsoft.com/en-us/library/czefa0ke(v=vs.71).aspx</a></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>568</wp:post_id>
		<wp:post_date>2012-09-25 01:25:43</wp:post_date>
		<wp:post_date_gmt>2012-09-25 01:25:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>padrao-de-nomes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Nome, padrao, microsoft, c#]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Algumas dicas da própria Microsoft para manter um código mais organizado.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Padrão de nomes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Nome, padrao, microsoft, c#]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Algumas dicas da própria Microsoft para manter um código mais organizado.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Padrão de nomes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Recuperar Query String com Javascript</title>
		<link>http://blog.maxcnunes.net/2012/04/03/recuperar-query-string-com-javascript/</link>
		<pubDate>Tue, 03 Apr 2012 02:51:46 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=589</guid>
		<description></description>
		<content:encoded><![CDATA[

[caption id="attachment_590" align="alignleft" width="150" caption="JS recuperar Query String"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/04/recuperar-url-javascript.jpg"><img class="size-thumbnail wp-image-590" title="recuperar-url-javascript" src="http://blog.maxcnunes.net/wp-content/uploads/2012/04/recuperar-url-javascript-150x150.jpg" alt="" width="150" height="150" /></a>[/caption]

Quando se está trabalhando com client side, tudo que for possível manter do lado do cliente e não for comprometer a segurança das informações, é preferível que não passe para o lado do servidor, por diminuir as requisições ao servidor e aumentar dessa forma a performance.

Uma situação bem comum é enviar informações de uma página à outra através de query string na url. Na forma que irei apresentar aqui neste artigo, torna a tarefa de recuperar essas informações no javascript, bem mais simples e prática.

<!--more-->

A função a seguir utiliza de replace e regex para preparar a url e filtrar pela chave da query string desejada.

<code lang="javascript">        //Função comum para receuperar querystrings
        function getQuerystring(key, default_) {
            if (default_ == null) default_ = "";
            key = key.replace(/[[]/, "[").replace(/[]]/, "]");
            var regex = new RegExp("[?&]" + key + "=([^&#]*)");
            var qs = regex.exec(window.location.href);
            if (qs == null)
                return default_;
            else
                return qs[1];
        }</code>

Para utiliza essa função, basta passar por parâmetro a chave da query string desejada:

<code lang="javascript">        //Função que recuperar a querystring cod
        function getValueCod() {
            txt.value = getQuerystring('cod');
        }
</code>

O html completo para testar essa funcionalidade fica assim:

<code lang="html"><html>
<head>
    <title>JS</title>
</head>
<body>
    Link com querystring: <a href="index.html?cod=1980">index.html?cod=1980</a>
    <br />
    <br />
    Recuperar Querystring:<br />
    <input type="text" id="txt" />
    <input type="submit" onclick="getValueCod()" />
    <script type="text/javascript">

        //Função que recuperar a querystring cod
        function getValueCod() {
            txt.value = getQuerystring('cod');
        }

        //Função comum para receuperar querystrings
        function getQuerystring(key, default_) {
            if (default_ == null) default_ = "";
            key = key.replace(/[[]/, "[").replace(/[]]/, "]");
            var regex = new RegExp("[?&]" + key + "=([^&#]*)");
            var qs = regex.exec(window.location.href);
            if (qs == null)
                return default_;
            else
                return qs[1];
        }
    </script>
</body>
</html></code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>589</wp:post_id>
		<wp:post_date>2012-04-03 02:51:46</wp:post_date>
		<wp:post_date_gmt>2012-04-03 02:51:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>recuperar-query-string-com-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[asp.net]]></category>
		<category domain="category" nicename="js"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Recuperar ,Query, String, Javascript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Recuperar Query String com Javascript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Recuperar Query String com Javascript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Recuperar ,Query, String, Javascript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Recuperar Query String com Javascript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Recuperar Query String com Javascript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>JQuery UI dialog com eventos do ASP.NET</title>
		<link>http://blog.maxcnunes.net/2012/04/22/jquery-ui-dialog-com-eventos-do-asp-net/</link>
		<pubDate>Sun, 22 Apr 2012 16:48:01 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=594</guid>
		<description></description>
		<content:encoded><![CDATA[

[caption id="attachment_596" align="alignleft" width="262" caption="Dialog com eventos ASP.NET"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/04/jquery-ui-dialog-events-aspnet.png"><img class="size-full wp-image-596 " title="jquery-ui-dialog-events-aspnet" src="http://blog.maxcnunes.net/wp-content/uploads/2012/04/jquery-ui-dialog-events-aspnet.png" alt="" width="262" height="147" /></a>[/caption]

Você começa um projeto novo e decidi aumentar a usabilidade, e nada melhor do que utilizar as várias funcionalidades que o plugin JQuery UI oferece. Dentro os vários, um bem legal é o dialog que é uma janela flutuante na tela.

Após escolher utilizar o dialog, quando finalmente chega o momento de testar as funcionalidades dos eventos de botões dentro do dialog, você percebe que após aberto, os eventos ASP.NET dentro dele deixam de funcionar. Isso porque quando o dialog é aberto, ele é movido para fora do form da página, perdendo assim as funcionalidades dos eventos.

<!--more-->

Para resolver este problema, basta mover a div do dialog para dentro do form novamente. Da seguinte forma:

<code lang="javascript">$("#dialog").dialog({
       height: 200,
       width: 400,
       modal: true,
       title: "Dialog",
       autoOpen: false,
       resizable: false,
       open: function (type, data) {
             //Move a div do dialog para dentro do form novamente
             $(this).parent().appendTo("form:first");
      }
});</code>

Segue o código de uma tela completa, lembrando que ao utilizar um evento do ASP.NET é provocado um PostBack na tela, dessa forma para que a página toda não seja renderizada novamente e o dialog não seja fechado é necessário manter o conteúdo do dialog dentro de um UpdatePanel.

<code lang="html"><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>Dialog UI with ASP.NET Events</title>
    <script src="Scripts/jquery-1.4.4.js" type="text/javascript"></script>
    <script src="Scripts/jquery-ui-1.8.19.js" type="text/javascript"></script>
    <link href="Content/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript">

        $(function () {
            $("#dialog").dialog({
                height: 200,
                width: 400,
                modal: true,
                title: "Dialog",
                autoOpen: false,
                resizable: false,
                open: function (type, data) {
                    //Move a div do dialog para dentro do form novamente
                    $(this).parent().appendTo("form:first");
                }
            });

            $("#opener").click(function () {
                $("#dialog").dialog("open");
                return false;
            });

        });
    </script>
</head>
<body>
    <form id="form1" runat="server">
    <div>
        <asp:ScriptManager ID="ScriptManager1" runat="server">
        </asp:ScriptManager>
        <button id="opener">
            Open Dialog</button>
        <div id="dialog" title="Basic dialog">
            <asp:UpdatePanel ID="UpdatePanel1" runat="server">
                <ContentTemplate>
                    Postback Test<br />
                    <asp:TextBox ID="tb_send" runat="server"></asp:TextBox>
                    <asp:Button ID="but_OK" runat="server" Text="Send request" OnClick="but_OK_Click" /><br /><br />
                    <asp:Label ID="lbl_result" runat="server" ForeColor="#ff0000"></asp:Label>
                </ContentTemplate>
            </asp:UpdatePanel>
        </div>
    </div>
    </form>
</body>
</html>
</code>

E por último o evento do botão em c#:

<code lang="csharp">protected void but_OK_Click(object sender, EventArgs e)
{
    lbl_result.Text = "Response: " + tb_send.Text;
}</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>594</wp:post_id>
		<wp:post_date>2012-04-22 16:48:01</wp:post_date>
		<wp:post_date_gmt>2012-04-22 16:48:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery-ui-dialog-com-eventos-do-asp-net</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="js"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="jquery"><![CDATA[JQuery]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[JQuery]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[JQuery, UI, dialog, eventos, ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[JQuery UI dialog com eventos do ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[JQuery UI dialog com eventos do ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[JQuery, UI, dialog, eventos, ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[JQuery UI dialog com eventos do ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[JQuery UI dialog com eventos do ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Laerccius Moraes Santana]]></wp:comment_author>
			<wp:comment_author_email>laerccius@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.48.61.61</wp:comment_author_IP>
			<wp:comment_date>2012-07-12 19:57:37</wp:comment_date>
			<wp:comment_date_gmt>2012-07-12 19:57:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[kra,

Isto é realmente o que acontece,
mas o que pode-se fazer também é setar no componente button a propriedade UseSubmitBehavior para false assim o .net renderizar um botão na tela usando a função javascript postback não a opção de submit para o form.
testa depois para ver!!!

Ex.:


flws]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1342123057.93";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1344100858.25";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Leandro Scudeler]]></wp:comment_author>
			<wp:comment_author_email>leandroscudeler@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.22.74.213</wp:comment_author_IP>
			<wp:comment_date>2012-07-26 14:28:21</wp:comment_date>
			<wp:comment_date_gmt>2012-07-26 14:28:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Shoowww de post. Parabens]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1343312901.82";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[maxcnunes]]></wp:comment_author>
			<wp:comment_author_email>maxcnunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.22.74.213</wp:comment_author_IP>
			<wp:comment_date>2012-08-04 17:30:56</wp:comment_date>
			<wp:comment_date_gmt>2012-08-04 17:30:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Legal Laerccius, ótima dica!! Com certeza será útil em várias situações.
Mas pensando por exemplo, no caso de uma dialog possuir além do botão, alguns controles textbox ou de outros tipos. Nesse caso seria melhor realizar da forma que expliquei  no post. Por que utilizando o UseSubmitBehavior os valores dos controles não seriam enviados juntos com submit. Porque os controles estão todos fora do formulário da página.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>15</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1344101456.87";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>106</wp:comment_id>
			<wp:comment_author><![CDATA[Avelino Megda]]></wp:comment_author>
			<wp:comment_author_email>avelinomms_fama@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.8.170.137</wp:comment_author_IP>
			<wp:comment_date>2013-09-24 01:56:05</wp:comment_date>
			<wp:comment_date_gmt>2013-09-24 01:56:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ola estou com um probreminha aqui , tenho uma função em Jquery e não consigo assinar o evento no asp por ela . a função é essa no Jquery : 

$( "#dialog-form" ).dialog({
		autoOpen: false,
		height: 300,
		width: 350,
		modal: true,
		resizable: false,
		
		buttons: {
	
        
		Cancel: function() {
			$( this ).dialog( "close" );
			}
		},
		close: function() {
		allFields.val( "" ).removeClass( "ui-state-error" );
			}
		});
	$( "#createuser" )
		.button()
		.click(function() {
		    $("#dialog-form").dialog("open");

		});

	});// JavaScript Document


e no meu asp tenho esse form :


 			
    			
      				Email
                    
      				Senha
                    

    			
                 
 		 
	

e o evento do   do botão logar não funciona ultilizei esse exemplo mais não deu certo 
como devo fazer ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380892672.3091909885406494140625;s:7:"message";s:48:"maxcnunes changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1379987766.0765221118927001953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Definir um botão padrão de submit</title>
		<link>http://blog.maxcnunes.net/2012/05/06/definir-um-botao-padrao-de-submit/</link>
		<pubDate>Sun, 06 May 2012 14:41:06 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=600</guid>
		<description></description>
		<content:encoded><![CDATA[

[caption id="attachment_601" align="alignleft" width="150" caption="Botão padrão do formulário"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/05/enviar.jpg"><img class="size-thumbnail wp-image-601" title="enviar" src="http://blog.maxcnunes.net/wp-content/uploads/2012/05/enviar-150x150.jpg" alt="" width="150" height="150" /></a>[/caption]

O artigo de hoje é super simples, mas eu passei por uma situação nessa semana, na qual quando eu teclava o botão ENTER &nbsp;em um formulário de pesquisa o evento disparado era do botão de limpar ao invés do botão pesquisar. Isso era uma problema, porque a maioria dos usuário já estão acostumados com esse processo e quando realizassem nessa tela iriam ficar frustrados com o resultado.

Então eu deveria definir qual o botão seria disparado&nbsp;quando eu teclasse ENTER dentro do formulário. &nbsp;Para isso basta definir no PageLoad&nbsp;o nome do botão desejado, como padrão para o formulário atual:

<code lang="csharp">this.Form.DefaultButton = btnPesquisar.UniqueID;</code>

Obs: Durante a minha pesquisa, alguns usuários relatavam que funcionava passando o ClientID ao invés do UniqueID, o que eu acho um pouco improvável, porque para um formulário o mais importante é o name. Mas de qualquer forma, você pode tentar essas duas possibilidades.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>600</wp:post_id>
		<wp:post_date>2012-05-06 14:41:06</wp:post_date>
		<wp:post_date_gmt>2012-05-06 14:41:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>definir-um-botao-padrao-de-submit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="category" nicename="aspnet"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="asp-net"><![CDATA[asp.net]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Definir, botão, padrão, submit, formulário]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Definir um botão padrão de submit do formulário]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Definir um botão padrão de submit do formulário]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Definir, botão, padrão, submit, formulário]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Definir um botão padrão de submit do formulário]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Definir um botão padrão de submit do formulário]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Consultar valores dentro de uma estrutura XML no banco</title>
		<link>http://blog.maxcnunes.net/2012/05/12/consultar-valores-dentro-de-uma-estrutura-xml-no-banco/</link>
		<pubDate>Sat, 12 May 2012 16:33:59 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=606</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_607" align="alignleft" width="150" caption="Consultar XML no BD"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/05/xml.png"><img class="size-thumbnail wp-image-607" title="xml" src="http://blog.maxcnunes.net/wp-content/uploads/2012/05/xml-150x150.png" alt="" width="150" height="150" /></a>[/caption]

Acredito que hoje em dia a maioria dos bancos de dados possui suporte para estruturas XML, sendo um formato de fácil manipulação, leitura e bem organizado por possuir uma estrutura formada por nós e elementos.

Já participei de um projeto no qual ao invés de criarem uma tabela específica para relacionar uma lista de ações de um usuário em um sistema, foi utilizado uma coluna do tipo XML para manter esta lista de ações, o que já atendia perfeitamente a este requisito e eliminando assim a necessidade de possuir mais uma tabela física dentro do schema no banco.

Participei também de outro projeto no qual utilizavam a estrutura XML para enviar uma lista de informações como parâmetro de uma procedure ao banco. O que vejo como uma prática muito melhor, do que enviar a mesma lista separando valores por algum tipo de carácter (,;#$%…). Passando os valores em uma estrutura XML, mantêm as informações mais claras e organizadas, facilitando em muito tratá-las no banco e posterior manutenção do código.<!--more-->

Uma vez que você esteja trabalhando com estruturas XMLs, provavelmente em alguma situação será necessário realiza alguma consulta nas informações contidas na mesma.
<h3>sql:variable</h3>
Expõe uma variável que contém um valor SQL dentro de uma expressão XQuery.
<h3>exists</h3>
Verifica a existência de uma cláusula específica e retorna um bit que representa uma das seguintes condições:
<ul>
	<li>1 – representando Verdadeiro, se a expressão XQuery em uma consulta retornar um resultado nonempty. Quer dizer, retorna no mínimo um nó XML.</li>
	<li>0 – representando Falso, se retornar um resultado vazio.</li>
	<li>NULL se a instância de tipo de dado xml na qual a consulta foi executada contiver NULL.</li>
</ul>
Como forma de demonstrar essas funções, vamos supor que um sistema de venda é mantido um histórico de todas as vendas na seguinte tabela:
<table  class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td><strong>Nome Coluna</strong></td>
<td><strong>Tipo Dado</strong></td>
</tr>
<tr>
<td>HistoricoId</td>
<td>int</td>
</tr>
<tr>
<td>VendedorId&nbsp;</td>
<td>int</td>
</tr>
<tr>
<td>DataVenda&nbsp;</td>
<td>datetime</td>
</tr>
<tr>
<td>VendaId&nbsp;</td>
<td>int</td>
</tr>
<tr>
<td>ProdutosVendidos&nbsp;</td>
<td>xml</td>
</tr>
</tbody>
</table>
Como pode ser visto a cima, será mantido os produtos vendidos em cada venda na seguinte estrutura XML:

<code lang="xml"><Venda>
  <Produto>1</Produto>
  <Produto>3</Produto>
  <Produto>88</Produto>
</Venda></code>

Agora, digamos que um dos diretores da empresa solicitou que fosse levantado um relatório de todas as vendas realizadas por certo vendedor, no qual continha o produto com o código 88. Como fazer isso, sendo que os códigos dos produtos estão contidos dentro da estrutura XML?

Dessa forma:

<code lang="sql">DECLARE @VendedorId INT = 10
DECLARE @Consulta_XML VARCHAR = CAST(@Codigo_Produto AS VARCHAR)

SELECT VendaId
FROM HistoricoVenda 
WHERE        
     VendedorId =  @VendedorId
     AND
     ProdutosVendidos.exist('(//Venda/Produto)[. = sql:variable("@Consulta_XML")]') = 1</code>

Para que fosse possível realizar a busca dentro do XML foi necessário declarar uma variável, na qual a mesma foi exposta dentro XML através da função sql:variable. Também foi utilizada a função exists para verificar a existência de uma informação, definindo a caminho da mestra na estrutura XML.&nbsp; Note também que foi utilizado // antes da Venda, para especificá-la que está na raiz do XML.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>606</wp:post_id>
		<wp:post_date>2012-05-12 16:33:59</wp:post_date>
		<wp:post_date_gmt>2012-05-12 16:33:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>consultar-valores-dentro-de-uma-estrutura-xml-no-banco</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bancodedados"><![CDATA[Banco de Dados]]></category>
		<category domain="post_tag" nicename="query"><![CDATA[Query]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="post_tag" nicename="sql-2"><![CDATA[sql]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[XML]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Consultar,valores,XML,sql,banco]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Consultar valores dentro de uma estrutura XML no banco utilizando comandos do SQL Server.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Consultar valores dentro de uma estrutura XML no banco]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Consultar,valores,XML,sql,banco]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Consultar valores dentro de uma estrutura XML no banco utilizando comandos do SQL Server.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Consultar valores dentro de uma estrutura XML no banco]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Concatenar uma lista de valores e juntá-los por um delimitador</title>
		<link>http://blog.maxcnunes.net/2012/05/21/concatenar-uma-lista-de-valores-e-junta-los-por-um-delimitador/</link>
		<pubDate>Mon, 21 May 2012 00:42:00 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=646</guid>
		<description></description>
		<content:encoded><![CDATA[

[caption id="attachment_651" align="alignleft" width="150" caption="string.Join"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/05/Join.jpg"><img class="size-thumbnail wp-image-651" title="Join" src="http://blog.maxcnunes.net/wp-content/uploads/2012/05/Join-150x141.jpg" alt="" width="150" height="141" /></a>[/caption]

Quando trabalhamos com Stored Procedures&nbsp;para aumentar a performance, muitas vezes quando a situação permite, damos preferência por realizar a execução de uma única vez de uma Stored Procedure, ao invés de chamá-la para cada código contido em uma lista.

Como os parâmetros de uma Stored Procedure não aceitam um tipo List como o que existe no C#, a forma mais simples de passar uma lista a Stored Procedure seria concatenar todos os códigos separados por um delimitador e tratar o parâmetro como um tipo Varchar.

Por exemplo, vamos dizer que você possua uma tela de gerenciar clientes, na qual é possível alterar a situação de cada um deles. Nessa tela existe uma Gridview com Checkbox em cada linha, para que seja possível selecionar cada cliente que você deseje desabilitar.<!--more-->

Após você selecionar todos os clientes, solicitar que sejam desabilitados e recuperar no codebehind a lista dos clientes selecionados, devesse ser preparado o parâmetro a ser enviado a Stored Procedure com o código de todos os clientes.
<h3>Clientes selecionados:</h3>
<code lang="csharp">var clientes = new List<Cliente>
            {
                new Cliente {Id = 1, Nome = "Cliente 1"},
                new Cliente {Id = 2, Nome = "Cliente 2"},
                new Cliente {Id = 4, Nome = "Cliente 4"},
                new Cliente {Id = 5, Nome = "Cliente 5"},
                new Cliente {Id = 6, Nome = "Cliente 6"},
                new Cliente {Id = 8, Nome = "Cliente 8"},
                new Cliente {Id = 11, Nome = "Cliente 11"},
                new Cliente {Id = 12, Nome = "Cliente 12"},
                new Cliente {Id = 15, Nome = "Cliente 15"}
            };</code>

Agora como fazer a lista a cima ficar assim: "<em><span style="color: #3366ff;"><strong>1,2,4,5,6,8,11,12,15</strong></span></em>"?
<h3>Funcional, mas trabalhoso:</h3>
Bem talvez você tenha imaginado fazer da forma mais comum: com for e concatenando item a item.

<code lang="csharp">string ids = string.Empty;
for (int i = 0; i < clientes.Count; i++)
{
     ids_foreach += clientes[i].Id.ToString();
     if (i + 1 < clientes.Count)
        ids_foreach += ",";
}</code>
<h3>Simplificando:</h3>
Mas por que não simplificar isso e utilizar recursos fornecidos pelo próprio .NET? Com LINQ e o Join do string ficaria assim:

<code lang="csharp">string ids = string.Join(",", clientes.Select(cliente => cliente.Id.ToString()));</code>

O Join do string pode ser utilizado com 2 parâmetros:
<ol>
	<li>Valor delimitador;</li>
	<li>IEnumerable de strings (A lista a ser concatenada);</li>
</ol>
Com o LINQ utilizamos o Select para selecionar da lista de clientes apenas a propriedade Id convertidos para String, retornando assim a lista de IEnumerable de strings.

Obs: Outra forma de passar uma lista de valores a Stored Procedure seria através de uma parâmetro do tipo XML.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>646</wp:post_id>
		<wp:post_date>2012-05-21 00:42:00</wp:post_date>
		<wp:post_date_gmt>2012-05-21 00:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>concatenar-uma-lista-de-valores-e-junta-los-por-um-delimitador</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[concatenar-uma-lista-de-valores-e-junta-los-por-uma-delimitador]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Concatenar, lista, juntar,delimitador,join, string]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Simplificando a forma de concatenar uma lista de valores e juntá-los por uma delimitador]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Concatenar uma lista de valores e juntá-los por um delimitador]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[concatenar-uma-lista-de-valores-e-junta-los-por-uma-delimitador]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Concatenar, lista, juntar,delimitador,join, string]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Simplificando a forma de concatenar uma lista de valores e juntá-los por uma delimitador]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Concatenar uma lista de valores e juntá-los por um delimitador]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Substituindo propriedade estáticas no ASP.NET</title>
		<link>http://blog.maxcnunes.net/2012/05/28/substituindo-propriedade-estaticas-no-asp-net/</link>
		<pubDate>Mon, 28 May 2012 19:45:22 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=660</guid>
		<description></description>
		<content:encoded><![CDATA[Utilizar variáveis estática no ASP.NET é um sério problema, porque objetos estáticos possuem apenas uma estância em toda aplicação.

Ou seja, se eu estivesse em um e-commerce e começasse a adicionar itens ao meu carrinho, e um outro usuário logo a após eu, acesse a página de itens do carrinho dele. Estaria todos os meus itens visíveis para ele.

<!--more-->
<h3>Para escopo de toda a aplicação: Utilize SESSION</h3>
<span style="color: #ff0000;"><strong>ERRADO</strong></span>

Onde estava um atributo estático:

<code lang="csharp">public static int nomeVariavel;</code>

<span style="color: #00ff00;"><strong>CERTO</strong></span>

Deverá ser refatorado em uma propriedade que servirá apenas de acesso para o valor.

Ou seja, ao definir um valor para essa propriedade, será armazenado em uma Session.

E ao recuperar um valor dessa propriedade, ela irá buscar na mesma Session.

<code lang="csharp">public int nomeVariavel
{
    get { return (Session["NOME_SESSAO"] == null) ? 0 : int.Parse(Session["NOME_SESSAO"].ToString()); }
    set { Session["NOME_SESSAO"] = value; }
}</code>

No exemplo a cima, utilizei if ternário. Se a session estiver nula, então retorna um valor padrão. Se não, converte a session para tipo correto e retorna o valor em seguida.

No caso de uma variável do tipo Lista devemo sempre inicializar a lista caso ela ainda seja nula, poderíamos fazer assim:

<code lang="csharp">public List<tipoObjeto> nomeVariavel
{
    get { 
                
        if(Session["NOME_SESSAO"] == null)
            Session["NOME_SESSAO"]  = new List<tipoObjeto>();
        return (Session["NOME_SESSAO"] as List<tipoObjeto>);
    }
    set { Session["NOME_SESSAO"] = value; }
}</code>
<h3>Para escopo de apenas uma página: Utilize ViewState</h3>
Caso o escopo dessa variável seja apenas de uma tela, ou seja esse valor deixará de existir quando for deixado a página, poderia ser utilizado uma ViewState no lugar da Session.

<code lang="csharp">public List<tipoObjeto> nomeVariavel
{
    get { 
                
        if(ViewState["NOME_SESSAO"] == null)
            ViewState["NOME_SESSAO"] = new List<tipoObjeto>();
        return (ViewState["NOME_SESSAO"] as List<tipoObjeto>);
    }
    set { ViewState["NOME_SESSAO"] = value; }
}</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>660</wp:post_id>
		<wp:post_date>2012-05-28 19:45:22</wp:post_date>
		<wp:post_date_gmt>2012-05-28 19:45:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>substituindo-propriedade-estaticas-no-asp-net</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="category" nicename="aspnet"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="asp-net"><![CDATA[asp.net]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Substituindo propriedade estáticas no ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Substituindo propriedade estáticas no ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Substituindo propriedade estáticas no ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Substituindo propriedade estáticas no ASP.NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[Badernista]]></wp:comment_author>
			<wp:comment_author_email>otavios.goncalves@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.22.74.213</wp:comment_author_IP>
			<wp:comment_date>2012-07-19 13:36:50</wp:comment_date>
			<wp:comment_date_gmt>2012-07-19 13:36:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Max,

No Aspx , os únicos escopos de site são o ViewState e o Session escope ?

Desde já agradeço.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1342705010.26";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1344101647.95";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[maxcnunes]]></wp:comment_author>
			<wp:comment_author_email>maxcnunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.22.74.213</wp:comment_author_IP>
			<wp:comment_date>2012-08-04 17:37:10</wp:comment_date>
			<wp:comment_date_gmt>2012-08-04 17:37:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Otatviooooo, as formas de manter os dados entre os postbacks no asp.net são:
View state, Control state, Hidden fields, Cookies, Query strings, Application state, Session state e  Profile Properties(Nunca utilizei este último).
Da uma olhada nesses 2 links para entender melhor cada um:http://msdn.microsoft.com/en-us/library/75x4ha6s.aspx e http://engthunder.wordpress.com/2011/12/15/cookies-hiddenfields-viewstate-application-session-cache/.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>18</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1344101830.93";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Exceções não detalhadas em erros providos de uma aplicação WCF</title>
		<link>http://blog.maxcnunes.net/2012/06/07/excecoes-nao-detalhadas-em-erros-providos-de-uma-aplicacao-wcf/</link>
		<pubDate>Thu, 07 Jun 2012 23:09:55 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=666</guid>
		<description></description>
		<content:encoded><![CDATA[Se ao debugar o projeto, após configurar a autenticação "Claims-based authentication" no Sharepoint 2010, está apresentando a seguinte mensagem:

<em>"The server was unable to process the request due to an internal error. For more information about the error, either turn on IncludeExceptionDetailInFaults (either from ServiceBehaviorAttribute or from the <servicedebug> configuration behavior) on the server in order to send the exception information back to the client, or turn on tracing as per the Microsoft .NET Framework 3.0 SDK documentation and inspect the server trace logs."&nbsp;</servicedebug></em>

[caption id="attachment_667" align="aligncenter" width="300" caption="SPClaimsUtility.AuthenticateFormUser Error Debug"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/SPClaimsUtility.AuthenticateFormUser_ErrorDebug.png"><img class="size-medium wp-image-667 " title="SPClaimsUtility.AuthenticateFormUser_ErrorDebug" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/SPClaimsUtility.AuthenticateFormUser_ErrorDebug-300x120.png" alt="" width="300" height="120" /></a>[/caption]

<!--more-->Este é um problema comum, ao utilizar serviços WCF, que por padrão vem com o detalhamento de exceções desabilitado para seus clientes.&nbsp;

Precisamos fazer algumas configurações no webconfig. Neste caso por estarmos falando do "SPClaimsUtility.AuthenticateFormUser" a aplicação é o Security Token, localizado por padrão em:&nbsp;
<p style="text-align: center;"><span style="color: #0000ff;"><em>C:Program FilesCommon FilesMicrosoft SharedWeb Server Extensions14WebServicesSecurityToken</em></span></p>
<p style="text-align: left;">Com o webconfig aberto, insira dentro de "behavior" o seguinte trecho de código:</p>
<p style="text-align: center;"><span style="color: #0000ff;"><em>&lt;serviceDebug httpHelpPageEnabled="true" includeExceptionDetailInFaults="true" /&gt;</em></span></p>


[caption id="attachment_669" align="aligncenter" width="300" caption="serviceDebug"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/06/serviceDebug.png"><img class="size-medium wp-image-669" title="serviceDebug" src="http://blog.maxcnunes.net/wp-content/uploads/2012/06/serviceDebug-300x161.png" alt="" width="300" height="161" /></a>[/caption]
<p style="text-align: left;">Após isto, salve o webconfig e renicie o IIS. Com essa configuração na próxima vez que ocorrer um erro dentro do WCF, será exibido o erro detalhado e você será capaz de entender o que está acontecendo realmente.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>666</wp:post_id>
		<wp:post_date>2012-06-07 23:09:55</wp:post_date>
		<wp:post_date_gmt>2012-06-07 23:09:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>excecoes-nao-detalhadas-em-erros-providos-de-uma-aplicacao-wcf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[asp.net]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="sharepoint"><![CDATA[SharePoint]]></category>
		<category domain="category" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Claims-based authentication, serviceDebug, WCF, Sharepoint, exception]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[The server was unable to process the request due to an internal error. For more information about the error, either turn on IncludeExceptionDetailInFaults ...]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Exceções não detalhadas em erros providos de uma aplicação WCF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Claims-based authentication, serviceDebug, WCF, Sharepoint, exception]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[The server was unable to process the request due to an internal error. For more information about the error, either turn on IncludeExceptionDetailInFaults ...]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Exceções não detalhadas em erros providos de uma aplicação WCF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>500 Internal Error when accessing _layouts/images virtual directory</title>
		<link>http://blog.maxcnunes.net/2012/06/24/500-internal-error-when-accessing-_layoutsimages-virtual-directory/</link>
		<pubDate>Sun, 24 Jun 2012 02:47:18 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=678</guid>
		<description></description>
		<content:encoded><![CDATA[Outro dia passei por esse problema, fiquei cerca de 1 dia procurando uma solução de como resolver. Como estava utilizando&nbsp;Autenticação Baseada em Declarações (Claims Authentication), imaginei que fosse alguma falta de permissão para os usuários e acabei ficando preso a essa possibilidade. O que me levou a ficar todas essas horas definindo permissões de todas formas possíveis, na pasta LAYOUTS, no IIS, nas configurações do site collection. Mas nada resolvia e o bendito 500 Internal continuava a aparecer.

A minha grande falha foi tentar resolver um problema em cima de um problema genérico. Porque quando adicionei o <span style="color: #ff0000;">&lt;customErrors mode="Off" /&gt;</span>&nbsp;ao webconfig na pasta LAYOUTS o problema foi resolvido em 10 segundos.

Na minha situação, eu havia deixado uma tag incorreta dentro do&nbsp;do webconfig do site que estava apresentando o problema.

Caminho da pasta LAYOUTS:&nbsp;<span style="color: #ff0000;"><em>C:Program FilesCommon FilesMicrosoft SharedWeb Server Extensions14TEMPLATELAYOUTS</em></span>

Fica a dica então:&nbsp;<strong>Nunca tente resolver um problema em cima de uma descrição genérica, se é possível obter informações mais específicas.</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>678</wp:post_id>
		<wp:post_date>2012-06-24 02:47:18</wp:post_date>
		<wp:post_date_gmt>2012-06-24 02:47:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>500-internal-error-when-accessing-_layoutsimages-virtual-directory</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="customerrors"><![CDATA[customErrors]]></category>
		<category domain="post_tag" nicename="permission"><![CDATA[permission]]></category>
		<category domain="category" nicename="sharepoint"><![CDATA[SharePoint]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Claims, Authentication, _layouts/, images, permission]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Problemas de imagens localizadas no _layouts/images não carregarem em um site do Sharepoint. Cuidado, o problema pode ser mais simples de resolver.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[500 Internal Error when accessing _layouts/images virtual directory]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Claims, Authentication, _layouts/, images, permission]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Problemas de imagens localizadas no _layouts/images não carregarem em um site do Sharepoint. Cuidado, o problema pode ser mais simples de resolver.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[500 Internal Error when accessing _layouts/images virtual directory]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Response.BinaryWrite ou Response.Write dentro de um UpdatePanel</title>
		<link>http://blog.maxcnunes.net/2012/08/03/response-binarywrite-ou-response-write-dentro-de-um-updatepanel/</link>
		<pubDate>Fri, 03 Aug 2012 12:42:07 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=704</guid>
		<description></description>
		<content:encoded><![CDATA[Para resolver problemas relacionados Response.BinaryWrite ou Response.Write dentro de um UpdatePanel você deve definir o evento do controle que executa o Response como uma trigger do tipo PostBack, possibilitando um postaback completo da tela. Ao contrário do tipo de trigger padrão AsyncPostBack já definido para os controles dentro de um UpdatePanel, que realizam o post apenas do conteúdo dentro&nbsp;do UpdatePanel de forma assíncrona.

Por padrão devemos definir uma trigger PostBack da seguinte forma:

<pre class="brush: html"><asp:UpdatePanel ID="UpdatePanel1" runat="server">
 <ContentTemplate>
 </ContentTemplate>
 <Triggers>
   <asp:AsyncPostBackTrigger ControlID="lnkButton" EventName="Click" />
 </Triggers>
</asp:UpdatePanel></pre>

Mas quando não temos acesso direto a um controle, por estar dentro de uma grid ou ou tipo de controle. Podemos registrar a trigger para
o controle desejado da seguinte forma:

<pre class="brush: csharp">protected void MyGrid_RowDataBound(object sender, GridViewRowEventArgs e)  
{  
   LinkButton lnkButton = e.Row.FindControl("lnkButton") as LinkButton;  
   ScriptManager.GetCurrent(this).RegisterPostBackControl(lnkButton);  
} </pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>704</wp:post_id>
		<wp:post_date>2012-08-03 12:42:07</wp:post_date>
		<wp:post_date_gmt>2012-08-03 12:42:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>response-binarywrite-ou-response-write-dentro-de-um-updatepanel</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="category" nicename="aspnet"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="asp-net"><![CDATA[asp.net]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Response, BinaryWrite, Write, UpdatePanel]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Solução para problemas relacionados Response.BinaryWrite ou Response.Write dentro de um UpdatePanel]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Response.BinaryWrite ou Response.Write dentro de um UpdatePanel]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Response, BinaryWrite, Write, UpdatePanel]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Solução para problemas relacionados Response.BinaryWrite ou Response.Write dentro de um UpdatePanel]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Response.BinaryWrite ou Response.Write dentro de um UpdatePanel]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Comparação de arrays desordenados - Javascript</title>
		<link>http://blog.maxcnunes.net/2012/08/10/comparacao-de-arrays-desordenados-javascript/</link>
		<pubDate>Fri, 10 Aug 2012 04:37:35 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=712</guid>
		<description></description>
		<content:encoded><![CDATA[
[caption id="attachment_721" align="alignleft" width="150" caption="Disorderly"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/08/disorderly.jpg"><img class="size-thumbnail wp-image-721" title="disorderly" src="http://blog.maxcnunes.net/wp-content/uploads/2012/08/disorderly-150x150.jpg" alt="" width="150" height="150" /></a>[/caption]

Trabalhando com javasacript, em muitos momentos surge a necessidade de manter em hiddens ids selecionados em arrays, concatenados por algum caracter separador. E em algumas dessas situações preciso comparar esses arrays com outros arrays, que podem estar em ordens diferentes.

Sendo assim uma dica rápida de como comparar arrays de objetos, dos quais estão em ordens diferentes:

<!--more-->

<pre class="brush: javascript">//Compara string de arrays [strArray1 = lista 1, strArray2 = lista 2, separator = separador]
function disorderlyStrArraysAreEqual(strArray1, strArray2, separator) {
    //Verifica se os valores estao vazios
    if (strArray1 == '' || strArray1 == 'undefined' || 
        strArray2 == '' || strArray2 == 'undefined') {
        return (strArray1 == strArray2);
    }

    //Separa os valores pelo caracter separador 
    //e remove o ultimo separador se for o ultimo caracter da string
    var array1 = rtrim(strArray1, separator).split(separator);
    var array2 = rtrim(strArray2, separator).split(separator);

    //Compara arrays pelo tamanho
    if (array1.length != array2.length) {
        return false;
    }

    for (var index = 0; index < array1.length; index++) {
        //Verifica na lista 2 se o item atual da lista 1 não existe
        if (strArray2.indexOf(array1[index]) == -1)
            return false;
        //Verifica na lista 1 se o item atual da lista 2 não existe
        if (strArray1.indexOf(array2[index]) == -1)
            return false;
    }
    return true;
}</pre>

Para garantir que seja removido ultimo caracter&nbsp;de separação vamos utilizar a seguinte função, que remove caracter passado por parametro, se ele for o ultimo da string:

<pre class="brush: javascript">function rtrim(str, chars) {
    chars = chars || "s";
    return str.replace(new RegExp("[" + chars + "]+$", "g"), "");
}</pre>

Utilizando a função de comparação:

<pre class="brush: javascript">var isEqual = disorderlyStrArrayIsEqual(newValues, oldValues, ';');</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>712</wp:post_id>
		<wp:post_date>2012-08-10 04:37:35</wp:post_date>
		<wp:post_date_gmt>2012-08-10 04:37:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>comparacao-de-arrays-desordenados-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="js"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Comparação, arrays, desordenados, Javascript, compare, ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Uma dica rápida de como comparar arrays de objetos, dos quais estão em ordens diferentes.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Comparação de arrays desordenados - Javascript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Comparação, arrays, desordenados, Javascript, compare, ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Uma dica rápida de como comparar arrays de objetos, dos quais estão em ordens diferentes.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Comparação de arrays desordenados - Javascript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>SOLID Principles</title>
		<link>http://blog.maxcnunes.net/2012/11/24/solid-principles/</link>
		<pubDate>Sat, 24 Nov 2012 19:57:10 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=747</guid>
		<description></description>
		<content:encoded><![CDATA[

[caption id="attachment_764" align="alignleft" width="150"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/11/SOLID_MCN.png"><img class="size-thumbnail wp-image-764 " title="SOLID_MCN" src="http://blog.maxcnunes.net/wp-content/uploads/2012/11/SOLID_MCN-150x150.png" alt="" width="150" height="150" /></a> SOLID[/caption]

Robert C. Martin “Uncle Bob” descreve os princípios SOLID, em “Agile Software Development: Principles, Patterns and Practices”, como cinco diretrizes para serem seguidas no que aumentariam a qualidade do código OO, facilitando a manutenção e alterações do código de acordo com as mudanças de requisitos.

<!--more-->
<h2><span style="font-weight: normal;"><span style="color: #f79646;">Sintomas de um Design Pobre</span></span></h2>
Segundo Uncle Bob existiriam alguns sintomas que demonstrariam quando um software está mal planejado e codificado. Os sintomas são definidos da seguinte forma:
<ol>
	<li>Rigidez (Rigidity) - O design é difícil de ser alterado.</li>
	<li>Fragilidade (Fragility) - O design é fácil de ser quebrado.</li>
	<li>Imobilidade (Immobility) - O design é difícil de ser reutilizado.</li>
	<li>Viscosidade (Viscosity) - É difícil de ser fazer a coisa certa.</li>
	<li>Precisa de menos complexidade (Needless Complexity) - O design está sobrecarregado.</li>
	<li>Precisa de menos repetição (Needless Repetition) – O design está repetido.</li>
	<li>Opacidade (Opacity) – Design desorganizado e difícil de entender.</li>
</ol>
<h2>&nbsp;</h2>
<h2>Princípios SOLID</h2>
O SOLID são princípios no design orientado a objeto que ajudariam desenvolvedores a eliminar os sintomas de um design pobre e construir um design melhor para a definição de novas funcionalidades. Os princípios são os seguintes:
<ol>
	<li>SRP (The Single Responsibility Principle) – O Princípio da Responsabilidade Única.</li>
	<li>OCP (The Open-Closed Principle) – O Princípio Aberto-Fechado.</li>
	<li>LSP (The Liskov Substitution Principle) – O Princípio da Substituição de Liskov.</li>
	<li>ISP (The Interface Segregation) – O Princípio da Segregação de Interface.</li>
	<li>DIP (The Dependency Inversion) – O Princípio de Dependência.</li>
</ol>
<h4>&nbsp;</h4>
<h2>&nbsp;</h2>
<h2><span style="font-weight: normal;"><span style="color: #0080ff;">SRP - O Princípio da Responsabilidade Única</span></span></h2>
O SRP trata que uma classe não deveria ter mais de uma razão para ser alterada. Isto significa que você deveria projetar sua classe para servir um único propósito. Não precisamos extrapolar e implementar apenas um método por classe, mas que todos os membros da classe sejam relacionados a função principal da classe. Quando pensamos em uma classe com múltiplas responsabilidades, deveríamos pensar melhor e separar essas diferentes reponsabilidades em novas classes.

Cada vez que uma classe é modificada o risco de surgirem novos bugs aumenta. Seguindo o SRP o risco de afetarem mais partes do sistema, como classes dependentes, é mitigado.

<strong>Exemplo:</strong>

<strong><span style="color: #ff0000;">ERRADO</span></strong>

É muito comum, infelizmente, vermos desenvolvedores atribuindo múltiplas responsabilidades para uma única classe ou método. Como esta classe empregado, além dos comportamentos esperados de um objeto empregado, ele ainda possui a responsabilidade de salvar as informações no banco e gerar relatórios.

<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image001.png"><img style="display: block; float: none; margin-left: auto; margin-right: auto;" title="clip_image001" src="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image001_thumb.png" alt="clip_image001" width="304" height="225" /></a>

<strong><span style="color: #00c40f;">CORRETO</span></strong>

Modularize a classe anterior atribuindo às responsabilidades corretas para cada classe gerada:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image003.jpg"><img style="display: block; float: none; margin-left: auto; margin-right: auto;" title="clip_image003" src="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image003_thumb.jpg" alt="clip_image003" width="624" height="199" /></a>
<h2>&nbsp;</h2>
<h2><span style="font-weight: normal;"><span style="color: #0080ff;">OCP – O Princípio Aberto-Fechado</span></span></h2>
O ORP define que entidades (classes, módulos, funções, etc) deveriam ser abertas para extensões, mas fechadas para modificações. O “fechado” trata da regra na qual um módulo desenvolvido e testado, este código deveria somente ser ajustado para corrigir bugs. O “aberto” trata da regra na qual deveria ser capaz de estender o código existente para introduzir novas funcionalidades.

Assim como o SRP, este princípio reduz o risco de novos erros sendo introduzidos a partir de alterações no código existente.

<strong>Exemplo</strong>

<strong><span style="color: #ff0000;">ERRADO</span></strong>

Suponha que você possui um relatório que deveria fazer o calculo de todas as áreas utilizadas em um sistema. Muitos provavelmente fariam da forma abaixo, criando objetos diferentes com métodos de calculo específicos para cada um e na classe de relatório passariam uma lista de cada tipo de objeto para realizar o calculo total de áreas:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image004.png"><img style="display: block; float: none; margin-left: auto; margin-right: auto;" title="clip_image004" src="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image004_thumb.png" alt="clip_image004" width="426" height="271" /></a>
<pre class="brush: c-sharp; toolbar: false">class Quadrado
    {
        public decimal CalcularAreaQuadrado()
        {
            return 0;// Suponha que esteja implementado o calculo correto
        }
    }

class Retangulo
    {
        public decimal CalcularAreaRetangulo()
        {
            return 0;// Suponha que esteja implementado o calculo correto
        }
    }

class RelatorioAreasService
    {
        public decimal CalcularAreaTotal(List<quadrado> quadrados, List<retangulo> retangulos)
        {
            decimal areaTotal = 0;

            foreach (Quadrado item in quadrados)
                areaTotal += item.CalcularAreaQuadrado();

            foreach (Retangulo item in retangulos)
                areaTotal += item.CalcularAreaRetangulo();

            return areaTotal;
        }
    }</pre>
Mas e se surgisse uma nova forma geométrica no sistema? Da forma a cima você teria que modificar a classe relatório o que violaria o OCP.

<strong><span style="color: #00c40f;">CORRETO</span></strong>

Pense da seguinte forma, você sabe que a classe relatório deve calcular a área de qualquer objeto que saiba como calcular sua própria área. Dessa forma o melhor seria que cada um desses objetos implementassem um comportamento comum definido por uma interface.

<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image005.png"><img style="display: block; float: none; margin-left: auto; margin-right: auto;" title="clip_image005" src="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image005_thumb.png" alt="clip_image005" width="445" height="425" /></a>
<pre class="brush: c-sharp; toolbar: false">interface IArea
    {
        decimal CalcularArea();
    }

class Retangulo : IArea
    {
        public decimal CalcularArea()
        {
            return 0;// Suponha que esteja implementado o calculo correto
        }
    }

class Quadrado : IArea
    {
        public decimal CalcularArea()
        {
            return 0;// Suponha que esteja implementado o calculo correto
        }
    }

class RelatorioAreasService
    {
        public decimal CalcularAreaTotal(List<iarea> areas)
        {
            decimal areaTotal = 0;

            foreach (IArea item in areas)
                areaTotal += item.CalcularArea();

            return areaTotal;
        }
    }</pre>
Agora esta abordagem não está violando o OCP porque o código está fechado para modificações, se um dia surgir um objeto triangulo, não seria necessário modificar a classe relatório para realizar o calculo total e da mesma forma está aberta para extensões porque bastaria que a classe triângulo implementasse a interface IArea e ela já estaria apta para estender o relatório para essa nova forma geométrica.
<h2>&nbsp;</h2>
<h2><span style="color: #0080ff; font-weight: normal;">LSP – O Princípio da Substituição de Liskov</span></h2>
O LSP foi nomeado dessa forma por causa de Barbara Liskov que afirmou em 1988 que “funções que utilizam referencias para classes base devem ser capaz de utilizar objetos derivados da classe derivada sem conhecê-los”.

Se você cria uma superclasse com certos comportamentos definidos e em seguida cria outra classe herdando a classe anterior, mas nessa subclasse você não implementa os comportamentos corretamente, ou seja, sobrescreve qualquer comportamento com um procedimento vazio ou lança alguma exceção em seu lugar, então você está violando o LSP.

<span style="text-decoration: underline;">Para simplificar, pense no LSP como uma forma de garantir que a herança seja utilizada corretamente.</span>

<strong>Exemplo:</strong>

Vamos considerar que exista a superclasse Animal e seja herdada pela subclasse classe Cavalo.

<strong><span style="color: #ff0000;">ERRADO</span> </strong>

<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image006.png"><img style="display: block; float: none; margin-left: auto; margin-right: auto;" title="clip_image006" src="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image006_thumb.png" alt="clip_image006" width="183" height="440" /></a>

<strong>Todos sabem que um Cavalo não possui comportamentos de Hibernar e Voar!!!</strong>

<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image0081.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border-width: 0px;" title="clip_image008" src="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image008_thumb1.png" alt="clip_image008" width="404" height="298" border="0" /></a>

Então o código implementado ficaria assim:
<pre class="brush: c-sharp">public abstract class Animal
    {
        public abstract void Comer();
        public abstract void Beber();
        public abstract void Correr();
        public abstract void Voar();
        public abstract void Hibernar();
    }

public class Cavalo : Animal
    {
        public override void Comer()
        {
            //Implementar comportamento
        }

        public override void Beber()
        {
            //Implementar comportamento
        }

        public override void Correr()
        {
            //Implementar comportamento
        }

        public override void Voar()
        {
            //Não Implementar comportamento
        }

        public override void Hibernar()
        {
            //Disparar exceção
            throw new NotImplementedException();
        }
    }</pre>
A implementação a cima foi uma forma frustrante de tentar cumprir os comportamentos impostos pela superclasse, o que nos fez violar o LSP e o SRP.

Então você se pergunta, mas por que violou o LSP, se foram “implementados” todos os métodos no cavalo? Para facilitar o entendimento imagine que exista uma classe responsável por gerar o relatorio de migração dos animas, da seguinte forma:
<pre class="brush: c-sharp; toolbar: false">class RelatorioMigracao
    {
        void GerarRelatorioMigracaoDeInverno(IList<animal> animais)
        {
            foreach (Animal animal in animais)
                animal.Voar();
        }
    }</pre>
Por mais que a classe derivada (Cavalo) possua a implementação para o método Voar, quando a classe base (Animal) tentar executar esse comportamento, nada ocorrerá porque enganamos a herança implementando um comportamento vazio e como eu já mencionei o LSP diz claramente: “funções que utilizam referencias para classes base devem ser capaz de utilizar objetos derivados da classe derivada sem conhecê-los”.

<strong><span style="color: #00c40f;">CORRETO</span></strong>

Para resolver o problema anterior seria melhor separar especialidades em interfaces e manter comportamentos comuns na classe base. Ficando da seguinte forma:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image009.png"><img style="display: block; float: none; margin-left: auto; margin-right: auto;" title="clip_image009" src="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image009_thumb.png" alt="clip_image009" width="505" height="505" /></a>
<h2>&nbsp;</h2>
<h2><span style="color: #0080ff; font-weight: normal;">ISP – O Princípio da Segregação de Interface</span></h2>
O Princípio da Segregação de Interface (ISP) determina que os clientes não devam ser forçados a depender de interfaces que eles não usam. Esta regra significa que, quando uma classe depende de outra, o número de membros na interface que é visível para a classe dependente deve ser minimizado.

Muitas vezes, quando você cria uma classe com um grande número de métodos e propriedades, a classe é usada por outros tipos que exigem apenas o acesso a um ou dois membros. Quando você segue o ISP, classes grandes implementam múltiplas interfaces menores que podem ser agrupadas de acordo com a necessidade. Os dependentes são vinculados a essas interfaces, aumentando a robustez, flexibilidade e a possibilidade de reutilização.

<strong>Exemplo</strong>:

<strong><span style="color: #ff0000;">ERRADO</span></strong>

<img style="display: inline;" title="clip_image010" src="http://blog.maxcnunes.net/wp-content/uploads/2012/11/clip_image010.png" alt="clip_image010" width="574" height="603" />

<strong><span style="color: #333333;">CORRETO</span></strong>

Segregando as interfaces aumentamos a reusabilidade e não impomos comportamentos indevidos para cada classe:

<img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="http://blog.maxcnunes.net/wp-content/uploads/2012/11/image.png" alt="image" width="623" height="663" border="0" />
<h2>&nbsp;</h2>
<h2><span style="color: #0080ff;"><span style="font-weight: normal;">DIP – O Princípio da Inversão de Dependência</span></span></h2>
O Princípio da Inversão de Dependência (DIP) é a última das cinco regras. O DIP faz duas afirmações. A primeira é a de que os módulos de alto nível não devem depender de módulos de baixo nível. Ambos devem depender de abstrações. A segunda parte da regra é que abstrações não devem depender de detalhes. Detalhes devem depender abstrações.

O DIP se relaciona principalmente com o conceito de camadas dentro de aplicativos, onde os módulos de nível inferior lidam com funções muito detalhadas e módulas de nível superior usam classes de nível inferior para realizar tarefas maiores. O princípio especifica que, quando existem dependências entre as classes, eles devem ser definidos usando abstrações, como interfaces, ao invés de referenciando classes diretamente. Isso reduz a fragilidade causada por alterações em módulos de baixo nível introduzir erros nas camadas mais altas. A DIP é comumente utilizada com injeção de dependência.

<strong>Exemplo:</strong>

<strong><span style="color: #ff0000;">ERRADO</span></strong>
<pre class="brush: c-sharp; toolbar: false">class Email
    {
        public void Enviar()
        {

        }
    }

class Notificador
    {
        private Email _email;

        public Notificador()
        {
            _email = new Email();
        }

        public void NotificarAlteracaoDeSenha()
        {
            _email.Enviar();
        }
    }</pre>
<strong><span style="color: #00c40f;">CORRETO</span></strong>

De a forma a seguir a classe de alto nível (Notificador) não depende mais de uma classe de baixo nível (Email) e sim de uma abstração (IMensagemService).
<pre class="brush: c-sharp; toolbar: false">interface IMensagemService
    {
        void Enviar();
    }

class Email : IMensagemService
    {
        public void Enviar()
        {

        }
    }

class Notificador
    {
        private IMensagemService _email;

        public Notificador()
        {
            _email = new Email();
        }

        public void NotificarAlteracaoDeSenha()
        {
            _email.Enviar();
        }
    }</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>747</wp:post_id>
		<wp:post_date>2012-11-24 19:57:10</wp:post_date>
		<wp:post_date_gmt>2012-11-24 19:57:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>solid-principles</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="design-pattern"><![CDATA[Design Pattern]]></category>
		<category domain="category" nicename="design-patterns"><![CDATA[Design Patterns]]></category>
		<category domain="post_tag" nicename="solid"><![CDATA[SOLID]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[SOLID, Exemplos, SRP, OCP, LSP, ISP, DIP]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Uma breve descrição, com exemplos, dos princípios SOLID. Para você que ainda não os conhece é uma boa oportunidade para aumentar a qualidade do seu código.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[SOLID Principles]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[SOLID, Exemplos, SRP, OCP, LSP, ISP, DIP]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Uma breve descrição, com exemplos, dos princípios SOLID. Para você que ainda não os conhece é uma boa oportunidade para aumentar a qualidade do seu código.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[SOLID Principles]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Lauro Caetano]]></wp:comment_author>
			<wp:comment_author_email>laurocaetano1@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.65.194.54</wp:comment_author_IP>
			<wp:comment_date>2012-11-25 00:28:46</wp:comment_date>
			<wp:comment_date_gmt>2012-11-25 00:28:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[O post ficou muito bom cara, parabéns :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353803326.64";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1353804248.2";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[SOLID Principles, as explained by a Zombie &laquo; Tribalingua]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://tribalingua.wordpress.com/2012/11/26/solid-principles-as-explained-by-a-zombie/</wp:comment_author_url>
			<wp:comment_author_IP>72.232.113.33</wp:comment_author_IP>
			<wp:comment_date>2012-11-26 15:17:18</wp:comment_date>
			<wp:comment_date_gmt>2012-11-26 15:17:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] of the Zombies just wrote a nice article about SOLID principles, in Portuguese. But Google Translate can help with that, if you prefer to read it in English. [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353943038.66";s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1353977730.5";s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Code Kata - Praticando para melhorar</title>
		<link>http://blog.maxcnunes.net/2012/12/05/code-kata-praticando-para-melhorar/</link>
		<pubDate>Wed, 05 Dec 2012 02:33:38 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=781</guid>
		<description></description>
		<content:encoded><![CDATA[

<strong>Kata</strong>: É um exercício no karate onde você repete um conjunto de movimentos vária vezes, melhorando a cada repetição.

[caption id="attachment_783" align="aligncenter" width="600"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/12/kata.jpg"><img class="size-full wp-image-783" title="Kata" src="http://blog.maxcnunes.net/wp-content/uploads/2012/12/kata.jpg" alt="Kata" width="600" height="450" /></a> Kata[/caption]

<!--more-->

Para qualquer área seguida por uma pessoa, seja um músico, atleta, ou cozinheiro, seu sucesso depende, além da teoria adquirida e do talento, extremamente da prática.

É comum para um músico treinar horas diariamente para alcançar sua melhor habilidade e obter uma música perfeita durante uma apresentação. Porém infelizmente é extremamente raro notarmos o mesmo na nossa área. Na realidade o comum é que desenvolvedores saiam da faculdade com um conhecimento básico do desenvolvimento de softwares e em seguida simplesmente começam a trabalhar em projetos e não separam um tempo para a prática.

Talvez você esteja pensando: “Ao mesmo tempo que estou no trabalho desenvolvendo código para o projeto de um cliente, já estou praticando. Então desenvolvedores não precisam praticar além do trabalho diário.”.

Mas então digo que você está enganado, no trabalho existe a pressão com o prazo, com abordagens fixadas pelo cliente ou pelo ambiente de produção, a não aceitação de um chefe ou os companheiros de trabalho de uma ideia que você gostaria de aplicar ao projeto, etc.

A pratica depende de metas estabelecidas, mas você precisa estar confortável e ter a liberdade para tentar e produzir, ou seja praticar, sem nenhum dos problemas existentes no ambiente de trabalho, como os mencionados anteriormente.

Simplificando: <strong>Code Kata é uma forma de melhorar o nosso código através da prática continua.</strong>

Para mais informações acesse: <a title="http://codekata.pragprog.com/2007/01/code_kata_backg.html" href="http://codekata.pragprog.com/2007/01/code_kata_backg.html">http://codekata.pragprog.com/2007/01/code_kata_backg.html</a>

Na empresa em que trabalho, <a href="http://bravisoftware.com/">Bravi – Powered by Tribal</a>, eu e os outros desenvolvedores entramos no consenso de aplicar este conceito. Nosso primeiro Code Kata está sendo sobre um Jogo da Velha, o que eu pensava ser muito simples, mas está apresentando ser mais complexo do que eu imaginava. O que é bom porque está exigindo mais esforço.

Para quem se interessar em ver como está ficando, estou com um repositório no GitHub e aos poucos vou atualizando: <a title="https://github.com/maxcnunes/NoughtsCrossesGame" href="https://github.com/maxcnunes/NoughtsCrossesGame">https://github.com/maxcnunes/NoughtsCrossesGame</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>781</wp:post_id>
		<wp:post_date>2012-12-05 02:33:38</wp:post_date>
		<wp:post_date_gmt>2012-12-05 02:33:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>code-kata-praticando-para-melhorar</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="aleatorio"><![CDATA[Aleatório]]></category>
		<category domain="post_tag" nicename="code-kata"><![CDATA[code kata]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[code kata, software, development, bravi]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Code Kata é uma forma de melhorar o nosso código através da prática continua]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Code Kata - Praticando para melhorar]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[code kata, software, development, bravi]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Code Kata é uma forma de melhorar o nosso código através da prática continua]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Code Kata - Praticando para melhorar]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Desenvolvendo uma pequena aplicação web com Python e Flask</title>
		<link>http://blog.maxcnunes.net/2012/12/24/desenvolvendo-pequena-aplicacao-web-python-flask/</link>
		<pubDate>Mon, 24 Dec 2012 18:10:40 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=805</guid>
		<description></description>
		<content:encoded><![CDATA[

Neste artigo será explicado como configurar o seu ambiente de desenvolvimento, desenvolver uma aplicação web em python modularizada e no final publicá-la em um servidor free.

[caption id="attachment_836" align="aligncenter" width="480"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2012/12/Python-Code.png"><img class="size-full wp-image-836" title="Python-Code" src="http://blog.maxcnunes.net/wp-content/uploads/2012/12/Python-Code.png" alt="" width="480" height="333" /></a> Python Flask[/caption]

<!--more-->

Tópicos abordados:
<ul>
	<li><a href="#virtualenv">Virtualenv – Ambientes Virtuais Independentes</a></li>
	<li><a href="#flask">Flask – Micro Framework de desenvolvimento web para Python</a></li>
	<li><a href="#pythonanywhere">Python Any Where – Publicando de maneira simples e rápida</a></li>
</ul>
<h2><a name="virtualenv"></a>O que é o Virtualenv?</h2>
<img style="display: block; float: none; margin-left: auto; margin-right: auto;" src="http://blog.maxcnunes.net/wp-content/uploads/2012/12/Virtualenv.jpg" alt="" />

Virtualenv é um software que permite a criação de ambientes virtuais com total independência dos outros ambientes criados no Virtualenv. Isso permite que cada ambiente tenha autonomia para instalar plug-ins e bibliotecas de forma que a configuração de um ambiente não impacte nos restantes. Um exemplo prático seria a possibilidade de ter várias versões do Python, diferente para cada projeto, instalado na mesma máquina.
<h3>&nbsp;</h3>
<h3>Instalando o Virtualenv</h3>
Para facilitar nossa vida vamos utilizar um módulo Python chamado <strong>easy_install</strong> que gerencia pacotes Python e possui ferramentas de instalação que realiza automaticamente download, build e instalação dos pacotes disponíveis (no quais são muitos).
<pre class="brush: bash; toolbar: false">sudo easy_install virtualenv</pre>
<blockquote>Caso você não tenha o easy_install configurado em sua máquina ainda, execute o seguinte comando no Terminal:
<div id="scid:f32c3428-b7e9-4f15-a8ea-c502c7ff2e88:2df1208b-85eb-4691-a492-53210d4979e4" class="wlWriterEditableSmartContent" style="margin: 0px; display: inline; float: none; padding: 0px;">
<pre class="brush: bash;">sudo apt-get install python-setuptools python-dev build-essential</pre>
</div></blockquote>
A mensagem de sucesso deverá ser algo parecida com a seguinte:
<pre class="brush: shell; toolbar: false">Searching for virtualenv 
Best match: virtualenv 1.8.4 
Adding virtualenv 1.8.4 to easy-install.pth file 
Installing virtualenv script to /usr/local/bin 
Installing virtualenv-2.7 script to /usr/local/bin

Using /usr/local/lib/python2.7/dist-packages 
Processing dependencies for virtualenv 
Finished processing dependencies for virtualenv</pre>
<h3>&nbsp;</h3>
<h3>Criando o Primeiro Ambiente Virtual</h3>
Antes de criar o primeiro ambiente virtual vamos separar um diretório para centralizar todos os documentos, códigos-fontes, configurações e outros assuntos relacionados a Desenvolvimento em um diretório chamado Development na Home do seu usuário no Linux:
<pre class="brush: bash; toolbar: false">cd ~/
mkdir Development</pre>
Para manter os ambientes virtuais bem organizados, vamos criar um diretório chamado virtualenvs dentro de Development:
<pre class="brush: bash; toolbar: false">cd ~/Development
mkdir virtualenvs</pre>
Agora sim vamos criar nosso primeiro ambiente virtual dentro do diretório virtualenvs. Como mais pra frente nesse post irei explicar como desenvolver uma pequena aplicação, esse ambiente virtual será focado para esse projeto. Então meu ambiente virtual se chamará i-sweated-yesterday:
<pre class="brush: bash; toolbar: false">cd virtualenvs
virtualenv i-sweated-yesterday</pre>
A mensagem de sucesso deverá ser algo parecida com a seguinte:
<pre class="brush: bash; toolbar: false">New python executable in i-sweated-yesterday/bin/python 
Installing setuptools............done. 
Installing pip...............done. </pre>
<blockquote>Caso você desejasse criar um ambiente que não utilize qualquer biblioteca pré instalada no sistema operacional, deveria ser executado da forma a baixo:
<pre class="brush: bash; toolbar: false">virtualenv i-sweated-yesterday --no-site-packages</pre>
</blockquote>
<h3>&nbsp;</h3>
<h3>Utilizando o Ambiente Virtual Criado</h3>
<h4>Ativando</h4>
Para utilizar o ambiente virtual você deve ativá-lo antes de realizar qualquer configuração, como instalar ou utilizar alguma biblioteca instalada no mesmo. O comando para ativar o ambiente virtual criado anteriormente é o seguinte:
<pre class="brush: bash; toolbar: false">source i-sweated-yesterday/bin/activate</pre>
Sempre que o ambiente virtual estiver ativado irá exibir o nome do ambiente virtual no lado esquerdo das linhas de comando no Terminal (Prompt). No meu caso fica da seguinte forma:
<pre class="brush: bash; toolbar: false">(i-sweated-yesterday)max@Max-Xub-VM:~$</pre>
A partir de agora qualquer configuração realizada estará associada apenas ao ambiente virtual ativo no momento.
<h4>Desativando</h4>
Quando não existir mais a necessidade de utilizar o ambiente virtual no momento, você pode voltar para o ambiente do sistema operacional desativando o ambiente virtual atual:
<pre class="brush: bash; toolbar: false">(i-sweated-yesterday)max@Max-Xub-VM:~$ deactivate </pre>
<h4>&nbsp;</h4>
<h4>Visualizar os Pacotes Instalados no Ambiente Virtual Atual</h4>
Com o ambiente virtual ativado vamos instalar o pacote chamado yolk, que possui a funcionalidade de listar os pacotes já instalados no ambiente atual:
<pre class="brush: bash; toolbar: false">sudo easy_install yolk</pre>
Após instalado execute o seguinte comando para visualizar os pacotes instalados:
<pre class="brush: bash; toolbar: false">yolk -l</pre>
<h2><a name="flask"></a>O que é o Flask?</h2>
<img style="display: block; float: none; margin-left: auto; margin-right: auto;" src="http://blog.maxcnunes.net/wp-content/uploads/2012/12/Flask.jpg" alt="" />

Flask é um micro framework de desenvolvimento web para Python baseado em duas bibliotecas externas: O Jinja2 e o Werkzeug. Por mais que seja considerado “micro”, Flask suporta extensões de diversas funcionalidades para a sua aplicação, como integração de ORM, validação de formulários, open autenticações e outras diversas extensões.
<h3>&nbsp;</h3>
<h3>Configurações</h3>
<h4>Instalando o Flask</h4>
Para utilizar o Flask precisamos instalá-lo primeiro (não esqueça de ativar o ambiente virtual antes):
<pre class="brush: bash; toolbar: false">pip install Flask</pre>
Vamos aproveitar que estamos instalando o Flask e já vamos instalar alguns outros pacotes para estender as funcionalidades do Flask e deixar o ambiente configurado para nosso aplicativo.
<h4>Instalando SQLAlchemy</h4>
SQLAlchemy é uma poderosa ferramenta ORM que possibilita aos desenvolvedores trabalhar com dados armazenados no banco de dados de maneira flexível e simplificada.
<pre class="brush: bash; toolbar: false">pip install SQLAlchemy</pre>
<h4>&nbsp;</h4>
<h4>Instalando o Flask-SQLAlchemy</h4>
Flask-SQLAlchemy adiciona funcionalidades ao Flask que facilitam algumas tarefas comuns ao utilizar o SQLAlchemy.
<pre class="brush: bash; toolbar: false">pip install flask-sqlalchemy </pre>
<h3>&nbsp;</h3>
<h4>Instalando o Flask-WTF</h4>
Flask-WTF integra de maneira simples o WTForms ao Flask, fornecendo uma maneira fácil de lidar com a apresentação de dados do usuário.
<pre class="brush: bash; toolbar: false">pip install Flask-WTF</pre>
<h4>Instalando o SQLite3</h4>
SQLite é um pacote que disponibiliza um Sistema Gerenciador de Banco de Dados Relacional e permite ser executado através de linha de comando, possibilitando executar qualquer query SQL básica de maneira simples. (Nossa aplicação não dependerá desse pacote para ser executada, mas seria bom já instalá-lo caso surja a necessidade de executar alguma query SQL no banco)
<div id="scid:f32c3428-b7e9-4f15-a8ea-c502c7ff2e88:dfd4f07a-d3b0-4e0e-a732-f51a11bc6cfa" class="wlWriterEditableSmartContent" style="margin: 0px; display: inline; float: none; padding: 0px;">
<pre class="brush: bash;">sudo apt-get install sqlite3 libsqlite3-dev</pre>
</div>
<h3>Criando uma Aplicação Flask para Teste</h3>
Antes de continuar com a nossa aplicação vamos criar uma aplicação em Flask o mais simples possível, apenas para verificar se o Flask foi instalado corretamente e está funcionando da maneira esperada.

Crie um arquivo chamado hello.py em qualquer diretório dentro de ~/Development:
<pre class="brush: python; toolbar: false"># Importa biblioteca Flask
from flask import Flask

# Inicializa a aplicacao instanciando Flask
app = Flask(__name__)

# Atribui uma rota ao hello_world
@app.route('/')
def hello_world():
	return 'Hello World!'

# Roda a aplicacao em: http://localhost:8085
app.run(debug=True,port=8085)</pre>
Os parâmetros debug e port são opcionais mas facilita muito que o debug esteja ativado para visualizar erros que ocorram durante a codificação e utilizando uma porta diferente do padrão 80 possibilita que você rode mais de uma aplicação ao mesmo tempo sem ocorrer o conflito de portas.
<blockquote><strong>Definição do __name__</strong> :
<ul>
	<li>Se o módulo é executado diretamente o __name__ é __main__</li>
	<li>Se o módulo é importado por outro módulo então __name__ é o nome do próprio módulo</li>
</ul>
</blockquote>
Com o virtualenv ativado, rode a linha de comando a baixo e em seguida abra o navegador no endereço “http://localhost:8085 ”:
<pre class="brush: bash; toolbar: false">python hello.py</pre>
Caso esteja tudo correto então você deverá visualizar uma página com a mensagem “Hello World”.
<h3>Desenvolvendo a Aplicação “I Sweated Yesterday”</h3>
<h4>I Sweated Yesterday</h4>
É uma aplicação pequena e simples para controlar a frequência&nbsp; de dias que um usuário realiza exercícios físicos. É chamado “Yesterday” porque na empresa em que trabalho, sempre marcamos o exercício físico ao chegarmos na empresa no dia seguinte. Foi baseada na aplicação exemplificada por Armin Ronacher&nbsp;nesta <a href="https://github.com/mitsuhiko/flask/wiki/Large-app-how-to" target="_blank">página no Github</a>.
<blockquote>O código fonte da versão dessa aplicação&nbsp;exemplificada nesse post está disponível para download <a href="https://github.com/maxcnunes/i-sweated-yesterday/tree/v1.0">aqui</a>&nbsp;e a versão mais atual está <a href="https://github.com/maxcnunes/i-sweated-yesterday">aqui</a>, qual ainda darei mais alguns retoques.</blockquote>
<h4>Visão Geral da Estrutura do Projeto</h4>
Minha dica aqui é que você crie os arquivos e diretórios abaixo para facilitar quando formos codificar ou faça o download do código fonte a cima.
<h5>Diretório Base</h5>
<em>Possui arquivos comuns para toda aplicação</em>
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td colspan="2" align="center" valign="top" width="296">/i-sweated-yesterday</td>
</tr>
<tr>
<td valign="top" width="296">/i-sweated-yesterday/initialize-db.py</td>
<td valign="top" width="293">Configurações para inicializar o banco de dados</td>
</tr>
<tr>
<td valign="top" width="296">/i-sweated-yesterday/config.py</td>
<td valign="top" width="293">Variáveis globais da aplicação</td>
</tr>
<tr>
<td valign="top" width="296">/i-sweated-yesterday/app.db</td>
<td valign="top" width="293">Arquivo de banco de dados</td>
</tr>
<tr>
<td valign="top" width="296">/i-sweated-yesterday/run.py</td>
<td valign="top" width="293">Roda a aplica cação</td>
</tr>
</tbody>
</table>
<h5>Diretório da Aplicação</h5>
<em>Possui o arquivo main, responsável por toda aplicação </em>&nbsp;
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td colspan="2" align="center" valign="top" width="302">/i-sweated-yesterday/app</td>
</tr>
<tr>
<td valign="top" width="302">/i-sweated-yesterday/app/__init__.py</td>
<td valign="top" width="288">Faz com que o Python trate o diretório como um módulo, realiza a inicialização do Flask, SQLAlchemy e realiza a configuração de rotas básicas</td>
</tr>
</tbody>
</table>
<h5>Diretório – Módulo Users</h5>
<em>Possui arquivos relacionados ao módulo Users, como formulários, classes modelos (entidade/mapeamento banco), páginas htmls…</em>
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td colspan="2" align="center" valign="top" width="275">/i-sweated-yesterday/app/users</td>
</tr>
<tr>
<td valign="top" width="275">/i-sweated-yesterday/app/users/__init__.py</td>
<td valign="top" width="315">Faz com que o Python trate o diretório como um módulo</td>
</tr>
<tr>
<td valign="top" width="275">/i-sweated-yesterday/app/users/views.py</td>
<td valign="top" width="315">Onde será tratado as requisições (Similar a Controller no MVC)</td>
</tr>
<tr>
<td valign="top" width="275">/i-sweated-yesterday/app/users/forms.py</td>
<td valign="top" width="315">Definição formulários</td>
</tr>
<tr>
<td valign="top" width="275">/i-sweated-yesterday/app/users/constants.py</td>
<td valign="top" width="315">Definição de variáveis Constantes</td>
</tr>
<tr>
<td valign="top" width="275">/i-sweated-yesterday/app/users/models.py</td>
<td valign="top" width="315">Definição de Modelos</td>
</tr>
<tr>
<td valign="top" width="275">/i-sweated-yesterday/app/users/decorators.py</td>
<td valign="top" width="315">Definição de Decorators</td>
</tr>
<tr>
<td valign="top" width="275">/i-sweated-yesterday/app/users/requests.py</td>
<td valign="top" width="315">Definição de Requisições Comuns</td>
</tr>
</tbody>
</table>
<h5>Diretório – Módulo Exercises</h5>
<em>Possui arquivos relacionados ao módulo Exercises, como formulários, classes modelos (entidade/mapeamento banco), páginas htmls…</em>
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td colspan="2" align="center" valign="top" width="295">/i-sweated-yesterday/app/exercises</td>
</tr>
<tr>
<td valign="top" width="295">/i-sweated-yesterday/app/exercises/__init__.py</td>
<td valign="top" width="295">Faz com que o Python trate o diretório como um módulo</td>
</tr>
<tr>
<td valign="top" width="295">/i-sweated-yesterday/app/exercises/helpers.py</td>
<td valign="top" width="295">Definição de algumas funções uteis</td>
</tr>
<tr>
<td valign="top" width="295">/i-sweated-yesterday/app/exercises/views.py</td>
<td valign="top" width="295">Onde será tratado as requisições (Similar a Controller no MVC)</td>
</tr>
<tr>
<td valign="top" width="295">/i-sweated-yesterday/app/exercises/forms.py</td>
<td valign="top" width="295">Definição formulários</td>
</tr>
<tr>
<td valign="top" width="295">/i-sweated-yesterday/app/exercises/constants.py</td>
<td valign="top" width="295">Definição de variáveis Constantes</td>
</tr>
<tr>
<td valign="top" width="295">/i-sweated-yesterday/app/exercises/models.py</td>
<td valign="top" width="295">Definição de Modelos</td>
</tr>
</tbody>
</table>
<h5>Diretório Static</h5>
<em>Possui arquivos estáticos como css, imagens&nbsp; e javascripts</em>
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td colspan="2" align="center" valign="top" width="295">/i-sweated-yesterday/app/static</td>
</tr>
<tr>
<td valign="top" width="295">/i-sweated-yesterday/app/static/css</td>
<td valign="top" width="295">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="295">/i-sweated-yesterday/app/static/css/reset.css</td>
<td valign="top" width="295">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="295">/i-sweated-yesterday/app/static/css/main.css</td>
<td valign="top" width="295">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="295">/i-sweated-yesterday/app/static/js</td>
<td valign="top" width="295">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="295">/i-sweated-yesterday/app/static/js/main.js</td>
<td valign="top" width="295">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="295">/i-sweated-yesterday/app/static/img</td>
<td valign="top" width="295">&nbsp;</td>
</tr>
</tbody>
</table>
<h5>Diretório Templates</h5>
<em>Possui arquivos de templates, ou seja, todas as páginas htmls puras ou com definições Jinja2</em>
<table class="table_post_max" border="1" cellspacing="1" cellpadding="1">
<tbody>
<tr>
<td colspan="2" align="center" valign="top" width="332">/i-sweated-yesterday/app/templates</td>
</tr>
<tr>
<td valign="top" width="332">/i-sweated-yesterday/app/templates/base.html</td>
<td valign="top" width="258">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="332">/i-sweated-yesterday/app/templates/users</td>
<td valign="top" width="258">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="332">/i-sweated-yesterday/app/templates/users/register.html</td>
<td valign="top" width="258">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="332">/i-sweated-yesterday/app/templates/users/profile.html</td>
<td valign="top" width="258">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="332">/i-sweated-yesterday/app/templates/users/login.html</td>
<td valign="top" width="258">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="332">/i-sweated-yesterday/app/templates/forms</td>
<td valign="top" width="258">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="332">/i-sweated-yesterday/app/templates/forms/macros.html</td>
<td valign="top" width="258">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="332">/i-sweated-yesterday/app/templates/404.html</td>
<td valign="top" width="258">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="332">/i-sweated-yesterday/app/templates/exercises</td>
<td valign="top" width="258">&nbsp;</td>
</tr>
<tr>
<td valign="top" width="332">/i-sweated-yesterday/app/templates/exercises/i_did.html</td>
<td valign="top" width="258">&nbsp;</td>
</tr>
</tbody>
</table>
<h4>Configuração</h4>
O arquivo <strong>run.py</strong> será utilizando durante o desenvolvimento para inicializar a aplicação e disponibilizar o acesso pelo browser no endereço <a href="http://localhost:8090">http://localhost:8090</a>:
<pre class="brush: python; toolbar: false">from app import app as application
application.run(debug=True,port=8090)</pre>
O arquivo <strong>config.py</strong> será utilizado para definição de valores comuns de toda aplicação. Mantendo essas informações centralizadas nesse arquivo facilitará durante a publicação para o ambiente de produção ou de testes, que essas informações sejam alteradas de acordo com a necessita de cada ambiente:
<pre class="brush: python;">import os

_basedir = os.path.abspath(os.path.dirname(__file__))

DEBUG = False

ADMINS = frozenset(['youremail@yourdomain.com'])
SECRET_KEY = 'SECRET_KEY_FOR_SESSION_SIGNING'

# Define the path of our database inside the root application, 
# where 'app.db' is the database's name
SQLALCHEMY_DATABASE_URI = 'sqlite:///' + os.path.join(_basedir, 'app.db')
DATABASE_CONNECT_OPTION = {}

THREADS_PER_PAGE = 8

CSRF_ENABLED = True
CSRF_SESSION_KEY = 'SOMETHING_IMPOSSIBLE_TO_GUEES'</pre>
<blockquote><strong>_basedir</strong> : mantém o caminho de onde os scripts são executados

<strong>DEBUG</strong> : utilizado como <em>True</em> em ambientes de desenvolvimento, permite que seja exibido detalhadamente a requisição, caso ocorra algum erro durante o processo

<strong>SECRET_KEY</strong> : utilizado na criação dos cookies

<strong>ADMINS</strong> : email do Administrador responsável pelo site

<strong>SQLALCHEMY_DATABASE_URI</strong> e <strong>DATABASE_CONNECT_OPTIONS</strong> : opções de conexão do SQLAlchemy

<strong>CSRF_ENABLED</strong> e <strong>CSRF_SESSION_KEY</strong> : proteção contra fraude de posts</blockquote>
O arquivo <strong>initialize-db.py</strong> será utilizado para criar a estrutura de tabelas que iremos configurar mais adiante em nossas Models:
<pre class="brush: python">from app import db

# Drop all tables from db file
db.drop_all() 

# Create all tables on db file,
# copying the structure from the definition on the Models
db.create_all()</pre>
<h4>Main</h4>
O arquivo <strong>__init__.py</strong> será o main da aplicação, nele estará a definição do Flask, SQLAlchemy e as rotas comuns:
<pre class="brush: python; wrap-lines:false">from flask import Flask, render_template, redirect, url_for
from flask.ext.sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config.from_object('config')

db = SQLAlchemy(app)


# Basic Routes #

@app.route('/')
def index():
	return redirect(url_for('users.index'))

@app.errorhandler(404)
def not_found(error):
	return render_template('404.html'), 404


# BluePrints - Modules #

# Users Module
from app.users.views import mod as usersModule
app.register_blueprint(usersModule)

# Exercises Module
from app.exercises.views import mod as exercisesModule
app.register_blueprint(exercisesModule)</pre>
<blockquote><strong>Blueprint</strong> basicamente permite que um módulo estenda a aplicação principal e funcione similarmente a aplicação Flask. Sendo esta uma das grandes vantagem para aplicações maiores, por permitir a modularização de uma aplicação, o que facilita em muito a organização, desenvolvimento e manutenções do código fonte.

Veja mais sobre <a href="http://flask.pocoo.org/docs/blueprints/">Blueprints</a>.</blockquote>
<h4>Módulo Usuário</h4>
Como este será um módulo estendido da aplicação principal, o nosso arquivo <strong>__init__.py</strong> estará vazio, pois objetos que precisamos já foram inicializados pela Main.

O arquivo <strong>constants.py</strong> é simples e contêm apenas valores Constantes, centralizados todos no mesmo arquivo para priorizar a organização e facilitar caso surja a necessidade de alguma manutenção futura:
<pre class="brush: python;wrap-lines:false;"># User role
ADMIN = 0
STAFF = 1
USER = 2
ROLE = {
	ADMIN: 'admin',
	STAFF: 'staff',
	USER: 'user',
}

# User status
INACTIVE = 0
NEW = 1
ACTIVE = 2
STATUS = {
	INACTIVE: 'inactive',
	NEW: 'new',
	ACTIVE: 'active',
}

# Session Name
SESSION_NAME_USER_ID = 'user_id'</pre>
O <strong>models.py</strong> contém a definição da model User, sendo basicamente estruturada pela definições de propriedades, mapeamentos model/database, construtores da classe e métodos GET e SET:
<pre class="brush: python;wrap-lines:false;"># third party imports
from sqlalchemy.sql import extract, func

# local application imports
from app import db
from app.users import constants as USER
from app.exercises.models import Exercise
from app.exercises.helpers import DateHelper



class User(db.Model):
	# Map model to db table
	id = db.Column(db.Integer, primary_key=True)
	name = db.Column(db.String(50), unique=True)
	email = db.Column(db.String(120), unique=True)
	password = db.Column(db.String(20))
	role = db.Column(db.SmallInteger, default=USER.USER)
	status = db.Column(db.SmallInteger, default=USER.NEW)
	exercises = db.relationship('Exercise', backref='user', lazy='dynamic')


	# Class Constructor
	def __init__(self, id=None):
		self.id = id


	# Factory Constructor of a new user to register
	@classmethod
	def NewUserToRegister(cls, name=None, email=None, password=None):
		_user = cls()
		_user.name = name
		_user.email = email
		_user.password = password
		return _user

	

	def getNameTitle(self):
		return self.name.title()


	def getStatus(self):
		return USER.STATUS[self.status]


	def getRole(self):
		return USER.ROLE[self.role]


	def getTotalExercises(self):
		return len(self.exercises.all())


	def getTotalExercisesCurrentWeek(self):

		start_end_week = DateHelper.get_start_end_days_current_week()
		start_week = start_end_week[0]
		end_week = start_end_week[1]

		return len(db.session.query(Exercise.id) 
						.filter(Exercise.user_id == self.id)
						.filter(Exercise.date >= start_week)
						.filter(Exercise.date <= end_week)
						.all())


	def getTotalExercisesCurrentMonth(self):

		current_month = DateHelper.current_month()

		return len(db.session.query(Exercise.id) 
						.filter(Exercise.user_id == self.id)
						.filter(extract('month', Exercise.date) == current_month)
						.all())


	def alreadyDidExerciseYesterday(self):

		yesterday = DateHelper.get_yesterday()

		return (len(db.session.query(Exercise.id) 
						.filter(Exercise.user_id == self.id)
						.filter(Exercise.date == yesterday)
						.all()) > 0)


	def __repr__():
		return '<User %r><user   %r>' % (self.name)</pre>
O <strong>forms.py</strong>&nbsp; utiliza o módulo <em>WTForms</em> para gerar formulários de maneira fácil e simples, como campos associados a labels e propriedades <em>Required</em>, caso seja obrigatório:
<pre class="brush: python;wrap-lines:false;">from flask.ext.wtf import Form, TextField, PasswordField, BooleanField
from flask.ext.wtf import Required, Email, EqualTo

class LoginForm(Form):
	email = TextField('Email address', [Required(), Email()])
	password = PasswordField('Password', [Required()])


class RegisterForm(Form):
	name = TextField('NickName', [Required()])
	email = TextField('Email address', [Required()])
	password = PasswordField('Password', [Required()])
	confirm = PasswordField('Repeat Password', [
		Required(),
		EqualTo('confirm', message='Passwords must match')
		])</pre>
O <strong>decorators.py</strong> possui a declaração para o decorator requires_login, no qual verifica se o usuário está logado, caso não esteja redireciona o usuário para a página de login:
<pre class="brush: python;wrap-lines:false;">from functools import wraps
from flask import g, flash, redirect, url_for, request

def requires_login(f):
	@wraps(f)
	def decorated_function(*args, **kwargs):
		if g.user is None:
			flash(u'You need to be signed in for this page.')
			return redirect(url_for('users.login', next=request.path))
		return f(*args, **kwargs)
	return decorated_function</pre>
<blockquote><strong>flask.g</strong> : é um objeto no Flask que possui a responsabilidade de armazenar e compartilhar dados através do tempo de execução de uma requisição

<strong>*args</strong> : o <strong>*</strong> é utilizado para permitir que um parâmetro aceite um número não definido de argumentos para sua função (parecido com a keyword <em>params</em> no C#)

<strong>**kwargs</strong> : Da mesma forma, <strong>**</strong> permite lidar com argumentos nomeados que não foram previamente definidos (parecido com a keyword <em>params+dictonary</em> no C#)</blockquote>
O <strong>requests.py</strong> possui a declaração de uma função comum a várias páginas na aplicação. No qual se existir um usuário logado na requisição atual será recuperado o Id do usuário na sessão, então recupera-rá o objeto usuário no banco e será mantido até o final da requisição no objeto <strong>flask.g.user</strong>:
<pre class="brush: python;wrap-lines:false;"># third party imports
from flask import g, session

# local application imports
from app.users.constants import SESSION_NAME_USER_ID
from app.users.models import User


def app_before_request():
	# pull user's profile from the db before every request are treated
	g.user = None
	if SESSION_NAME_USER_ID in session and session[SESSION_NAME_USER_ID] is not None:
		g.user = User.query.get(session[SESSION_NAME_USER_ID])</pre>
O <strong>views.py</strong>, para quem está acostumado com MVC funciona como uma Controller, é onde será definido as requisições possíveis para esse módulo, associando as rotas existentes as funcionalidades específicas de cada uma. Como dito anteriormente esse módulo não será uma aplicação e sim um módulo estendido da aplicação principal. Então ao invés de utilizarmos um objeto do tipo <strong>Flask</strong>, como para a definição de rotas, iremos utilizar o <strong>Blueprint</strong>.
<pre class="brush: python;wrap-lines:false;"># third party imports
from flask import Blueprint, request, render_template, flash, g, session, redirect, url_for
from werkzeug import check_password_hash, generate_password_hash
from datetime import datetime
from sqlalchemy.sql import or_


# local application imports
from app import db
from app.users.forms import RegisterForm, LoginForm
from app.users.models import User
from app.users.requests import app_before_request
from app.users.decorators import requires_login
from app.users.constants import SESSION_NAME_USER_ID
from app.exercises.models import Exercise


mod = Blueprint('users', __name__, url_prefix='/users')


@mod.before_request
def before_request():
	app_before_request()


@mod.route('/')
@mod.route('/me/')
@requires_login
def index():
	return render_template('users/profile.html', user=g.user)


@mod.route('/login/', methods=['GET', 'POST'])
def login():
	form = LoginForm(request.form)

	# make sure data are valid, but doesn't validate password is right
	if form.validate_on_submit():

		user = User.query.filter_by(email=form.email.data).first()

		# we use werzeug to validate user's password
		if user and check_password_hash(user.password, form.password.data):

			# the session can't be modified as it's signed,
			# it's a safe place to store the user id
			session[SESSION_NAME_USER_ID] = user.id

			flash('Welcome %s' % user.name)
			return redirect(url_for('users.index'))

		flash('Wrong email or password', 'error-message')

	return render_template( 'users/login.html', form=form)


@mod.route('/register/', methods=['GET', 'POST'])
def register():
	form = RegisterForm(request.form)

	if form.validate_on_submit():

		userRegistered = User.query.filter(or_(User.name == form.name.data,
							User.email == form.email.data)).first()
		
		if userRegistered is not None:
			flash('Email or user already is registered')
			return render_template('users/register.html', form=form)


		# create an user instance not yet stored in the database
		user = User.NewUserToRegister(form.name.data, form.email.data,
						generate_password_hash(form.password.data))

		# insert the record in our database and commit it
		db.session.add(user)

		db.session.commit()

		# log the user in, as he now has an id
		session[SESSION_NAME_USER_ID] = user.id

		# flash will display a message to the user
		flash('Thanks for registering')

		# redirect user to the 'index' method of the user module
		return redirect(url_for('users.index'))
	return render_template('users/register.html', form=form)


@mod.route('/logout/', methods=['GET'])
def logout():
	# remove the username from the session if it's there
	session.pop(SESSION_NAME_USER_ID, None)

	# flash will display a message to the user
	flash('Do not forget keep the exercises')

	# redirect user to the 'index' method of the user module
	return redirect(url_for('users.login'))</pre>
<blockquote><strong>validate_on_submit</strong> : função do WTForm, no qual verifica se o formulário é valido durante uma requisição do tipo POST ou PUT

<strong>render_template</strong> : retorna um documento renderizado, no nosso caso todos html, de acordo com o arquivo template e o formulário passado

<strong>flash</strong> : possibilita que mensagens declaradas na view sejam recuperadas no template e exibidas para o usuário

<strong>@mod.route('/login/', methods=['GET', 'POST'])</strong>&nbsp; : associa uma rota a uma função que estiver após sua definição. O primeiro parâmetro define por qual caminho será executado e o segundo parâmetro quais os métodos REST serão aceitos por essa rota.</blockquote>
<h4>Templates</h4>
Como Flask já possui integrado o Jinja, vamos utilizar em nossos templates algumas de suas funcionalidades disponíveis, como estruturas de condições, laços de repetições, blocos de conteúdos. Permitindo um alto nível de reutilização e fácil desenvolvimento.

O <strong>base.html</strong> será o template base, do qual será herdado pelos outros templates. Nesse template teremos a definição do corpo <em>HTML, HEAD, BODY</em> e blocos de conteúdo que poderão ser substituídos com outros conteúdos pelos templates que o herdarem.
<div id="scid:f32c3428-b7e9-4f15-a8ea-c502c7ff2e88:c26cb131-b45d-458e-89e6-9f44f0cc52ba" class="wlWriterEditableSmartContent" style="margin: 0px; display: inline; float: none; padding: 0px;">
<pre class="brush: html;wrap-lines:false;"><!DOCTYPE html>

<html>

	<head>

		<meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;" />

		<title>{% block title %}I Sweated Yesterday{% endblock %}</title>

		{% block css %}

		<link rel="stylesheet" href="/static/css/reset.css" />

		<link rel="stylesheet" href="/static/css/main.css" />

		{% endblock %}

		{% block script %}

		<script src="/static/js/main.js" type="text/javascript"></script>

		{% endblock %}

	</head>

	<body>

		<div id="wrapper">

			<div id="header">

				{% block header %}

				<h1>I Sweated Yesterday</h1>

				{% endblock %}

				

			</div>

			<div id="messages">

				{% for category, msg in get_flashed_messages(with_categories=true) %}

					
{{ msg }}
				{% endfor %}

			</div>

			<div id="content" class="shadow">

				{% block logout %}

				<a class="bt-action-logout" href="{{ url_for('users.logout') }}">

					Logout

				</a>

				{% endblock %}

				

				{% block content %}{% endblock %}</div>

			<div id="footer">{% block footer %}{% endblock %}</div>

		</div>

	</body>

</html>

</pre>
</div>
O <strong>macros.html</strong> possuirá definições de macros. No nosso caso criamos um macro chamado <strong>render_field</strong> no qual será responsável por criar uma estrutura <em>HTML</em> para os campos dos nossos formulários. Um detalhe importante desse macro é que caso exista alguma validação que não tenha passado durante a execução do <em>validate_on_submit</em> na view, então as mensagens de erro serão adicionados no <em>HTML</em> gerado.
<div id="scid:f32c3428-b7e9-4f15-a8ea-c502c7ff2e88:7e2ca7db-ada5-4e77-8ba1-1ba6608e1f6d" class="wlWriterEditableSmartContent" style="margin: 0px; display: inline; float: none; padding: 0px;">
<pre class="brush: html;">{% macro render_field(field) %}

	<div class="form_field">

	{{ field.label(class="label") }}

	{% if field.errors %}

		{% set css_class = 'has_error' + kwargs.pop('class', '') %}

		{{ field(class=css_class, **kwargs) }}

		<ul class="errors">

			{% for error in field.errors %}

			<li>{{ error|e }}</li>

			{% endfor %}

		</ul>

	{% else %}

		{{ field(**kwargs) }}

	{% endif %}

	</div>

{% endmacro %}</pre>
</div>
O <strong>register.html</strong> herda o base.html e substitui os blocos de conteúdo <em>logout, content e footer</em>. Este template será responsável pelo <em>HTML</em> utilizado no registro de um novo usuário, por isso o método utilizado é o POST e action referencia a url atual sem o nome da página, no qual se verificarmos na view estará apontando para a função <em>register</em>:
<div id="scid:f32c3428-b7e9-4f15-a8ea-c502c7ff2e88:2134c96f-a08a-4d4f-b4e6-fde949c56169" class="wlWriterEditableSmartContent" style="margin: 0px; display: inline; float: none; padding: 0px;">
<pre class="brush: html;">{% extends "base.html" %}



{% block logout %}<!-- remove btn logout -->{% endblock %}



{% block content %}

  {% from "forms/macros.html" import render_field %}

  <form method="POST" action="." class="form">

    {{ form.csrf_token }}

    {{ render_field(form.name, class="input text") }}

    {{ render_field(form.email, class="input text") }}

    {{ render_field(form.password, class="input text") }}

    {{ render_field(form.confirm, class="input text") }}

    <input type="submit" value="Register" class="button green">

  </form>

{% endblock %}



{% block footer %}

  <a class="bt-action bt-action-user" href="{{ url_for('users.login') }}">

    <span>Login</span>

  </a>

{% endblock %}</pre>
</div>
A partir de agora será melhor que você siga o resto da aplicação analisando e copiando direto do código fonte disponibilizado mais a cima nesse tutorial, se não este artigo irá ficar muito maior do que já está.
<h4>Executando a Aplicação</h4>
No primeiro momento que executarmos a aplicação é necessário inicializar o banco de dados, para isso abra o Terminal do sistema operacional, acesse o diretório da aplicação e execute a linha de comando a baixo (não esqueça de antes ativar o ambiente virtual):
<div id="scid:f32c3428-b7e9-4f15-a8ea-c502c7ff2e88:7aa6c46b-eefe-4b69-8c89-ef760fd5b7e8" class="wlWriterEditableSmartContent" style="margin: 0px; display: inline; float: none; padding: 0px;">
<pre class="brush: bash;">python initialize-db.py</pre>
</div>
Após executado a linha de comando a cima, só a execute novamente caso você deseje resetar o banco de dados, pois será criado as tabelas novamente e perderá todos os dados existentes.

Para inicializar a aplicação execute a linha de comando a baixo:
<div id="scid:f32c3428-b7e9-4f15-a8ea-c502c7ff2e88:54a82fea-b4b8-4d26-a8f0-c7ca25410e1c" class="wlWriterEditableSmartContent" style="margin: 0px; display: inline; float: none; padding: 0px;">
<pre class="brush: bash;">python run.py</pre>
</div>
Se a aplicação não possuir nenhuma falha grave será exibido a seguinte mensagem no Terminal:
<div id="scid:f32c3428-b7e9-4f15-a8ea-c502c7ff2e88:a4cd22e2-9a41-445f-985d-36c52eb34608" class="wlWriterEditableSmartContent" style="margin: 0px; display: inline; float: none; padding: 0px;">
<pre class="brush: bash;"> * Running on http://127.0.0.1:8090/
 * Restarting with reloader</pre>
</div>
Para visualizar a aplicação abra qualquer browser com a seguinte URL: <a title="http://127.0.0.1:8090/ " href="http://127.0.0.1:8090/">http://127.0.0.1:8090/</a>.
<h2><a name="pythonanywhere"></a>O que é o Python Any Where?</h2>
<img style="display: block; float: none; margin-left: auto; margin-right: auto;" src="http://blog.maxcnunes.net/wp-content/uploads/2012/12/PythonAnywhere.png" alt="" />

O <a href="https://www.pythonanywhere.com" target="_blank">Python Any Where</a> é uma IDE online e serviço de hospedagem baseado em Python. No qual disponibiliza a hospedagem web de aplicações python e acesso ao um console online possibilitando desenvolvimento em python com várias bibliotecas disponíveis de maneira online, fácil e gratuita para o plano mais simples.
<h3>Publicando</h3>
<ol>
	<li>Crie um cadastro no Python Any Where</li>
	<li>Selecione a opção <em><strong>I want to create a web application</strong></em></li>
	<li>Selecione a aba <strong><em>Web</em></strong> e em seguida a opção <em><strong>Add a new web app</strong></em></li>
	<li>Selecione <strong><em>Next</em></strong> na primeira janela</li>
	<li>Selecione <strong><em>Flask</em></strong> para definir o Framework Web Python a ser utilizado</li>
	<li>Selecione <strong><em>Next</em></strong> para confirmar o caminho físico da sua aplicação</li>
	<li>Após criada a opção <em><strong>It is configured via WSGI file stored at</strong></em> para editar arquivo wsgi</li>
	<li>Edite o arquivo wsgi, atualizando o valor da variável projec_home com o caminho físico correto da sua aplicação (abra a aba Files para confirmar o caminho correto) e na última linha certifique-se de estar realizando a importação correta, caso você tenha deixado a variável instanciado do Flask no arquivo __init__.py da aplicação como “app”, então você deixar a última linha da forma que está:<strong><em>/ &gt; var &gt; www &gt; YOUR-USER-NAME_pythonanywhere_com_wsgi.py</em> :</strong>
<div id="scid:f32c3428-b7e9-4f15-a8ea-c502c7ff2e88:6365503e-d022-4e06-ad68-cde8abe28998" class="wlWriterEditableSmartContent" style="margin: 0px; display: inline; float: none; padding: 0px;">
<pre class="brush: python;"># This file contains the WSGI configuration required to serve up your
# web application at http://<your-username>.pythonanywhere.com/
# It works by setting the variable 'application' to a WSGI handler of some
# description.
#
# The below has been auto-generated for your Flask project

import sys

# add your project directory to the sys.path
project_home = u'/home/YOUR-USER-NAME/i-sweated-yesterday'
if project_home not in sys.path:
    sys.path = [project_home] + sys.path

# import flask app but need to call it "application" for WSGI to work
#from flask_app import app as application #example
from app import app as application</pre>
</div></li>
	<li>Salve o arquivo anterior</li>
	<li>Acesse a aba <strong>Files</strong> e em seguida o diretório : <strong><em>/ &gt; home &gt;&nbsp; YOUR-USER-NAME</em></strong></li>
	<li>Clique no botão <strong>Escolher Arquivo</strong></li>
	<li>Selecione o seu projeto compactado como .zip</li>
	<li>Clique em Upload</li>
	<li>Acesse a aba <strong>Consoles</strong> e selecione a opção <strong>Bash</strong></li>
	<li>Execute o seguinte comando no console:
<div id="scid:f32c3428-b7e9-4f15-a8ea-c502c7ff2e88:a563e3c5-5ca5-4d46-a7fb-c33c9ca05d17" class="wlWriterEditableSmartContent" style="margin: 0px; display: inline; float: none; padding: 0px;">
<pre class="brush: bash;">unzip SEU-PROJETO-COMPACTADO.zip </pre>
</div></li>
	<li>Para inicializar o banco de dados execute o seguinte comando no console:
<div id="scid:f32c3428-b7e9-4f15-a8ea-c502c7ff2e88:ab37ab78-0c71-458d-a388-9712e5b075ba" class="wlWriterEditableSmartContent" style="margin: 0px; display: inline; float: none; padding: 0px;">
<pre class="brush: bash;">python YOUR-PROJECT-DIRECTORY/initialize-db.py </pre>
</div></li>
	<li>Acesse a aba Web e clique em <strong>Reload web app</strong></li>
	<li>Finalmente para visualizar o aplicativo rodando clique no link <strong>You can see your web app at</strong> disponível na aba Web (caso ocorra algum erro ao abrir a aplicação, veja a descrição mais detalhada do problema nos logs de erros disponíveis também na aba Web)</li>
</ol>
<blockquote><strong>Wsgi</strong> (Web Server Gateway Interface): Define uma simples interface entre Servidores Web e Aplicações Web ou Frameworks para Python.

<strong>Dica</strong> : Utilizamos a função de Upload para enviar o código fonte da nossa aplicação do computador local para o servidor web. Mas seria ainda mais fácil quando utilizado o Dropbox ou melhor ainda o Github. De uma olhada nisso, vai facilitar ainda mais o deploy quando realizado várias vezes.</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>805</wp:post_id>
		<wp:post_date>2012-12-24 18:10:40</wp:post_date>
		<wp:post_date_gmt>2012-12-24 18:10:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>desenvolvendo-pequena-aplicacao-web-python-flask</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[desenvolvendo-uma-pequena-aplicao-web-python-flas]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[desenvolvendo-pequena-aplicao-web-python-flask]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[python, flask, sqlalchemy, sqlite3, pythonanywhere, deploy, wsgi]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Neste artigo será explicado como configurar o seu ambiente de desenvolvimento, desenvolver uma aplicação web em python modularizada e no final publicá-la em um servidor free]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Desenvolvendo uma pequena aplicação web com Python e Flask]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[desenvolvendo-uma-pequena-aplicao-web-python-flas]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[desenvolvendo-pequena-aplicao-web-python-flask]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[python, flask, sqlalchemy, sqlite3, pythonanywhere, deploy, wsgi]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Neste artigo será explicado como configurar o seu ambiente de desenvolvimento, desenvolver uma aplicação web em python modularizada e no final publicá-la em um servidor free]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Desenvolvendo uma pequena aplicação web com Python e Flask]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>149</wp:comment_id>
			<wp:comment_author><![CDATA[Robson Grangeiro]]></wp:comment_author>
			<wp:comment_author_email>robson.grangeiro@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.51.90.246</wp:comment_author_IP>
			<wp:comment_date>2013-11-18 18:27:27</wp:comment_date>
			<wp:comment_date_gmt>2013-11-18 18:27:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Max, post excelente. Bastante detalhado e ao mesmo tempo objetivo e funcional.
Parabéns e obrigado por compartilhar!

Abraço.
Robson Grangeiro]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385382921.009583950042724609375;s:7:"message";s:48:"maxcnunes changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384799247.45817089080810546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Running Python, Virtualenv, Flask and GAE on Windows</title>
		<link>http://blog.maxcnunes.net/2013/01/12/running-python-virtualenv-flask-and-gae-on-windows/</link>
		<pubDate>Sat, 12 Jan 2013 23:04:33 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=843</guid>
		<description></description>
		<content:encoded><![CDATA[This is a short tutorial explaining how to configure a environment on windows to create an application with python, flask and google app engine.

[caption id="attachment_846" align="aligncenter" width="500"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2013/01/python_flask_gae_windows.jpg"><img class="size-full wp-image-846" title="python flask gae windows" alt="" src="http://blog.maxcnunes.net/wp-content/uploads/2013/01/python_flask_gae_windows.jpg" width="500" height="500" /></a> python flask gae windows[/caption]

Before start the article I would say the best operation system to work with python is not the Windows. Should be really easier if you work with the Linux or IOS, that are more supported for this kind of development. But anyway is possible do the same on the Windows, so lets begin...<!--more-->

<strong>Install Python</strong>
<ol>
	<li>Install Python <a href="http://www.python.org/ftp/python/2.7.2/python-2.7.2.msi">python-2.7.2.msi</a></li>
	<li>Click in Windows Start button and search by "Edit the system environment" and open</li>
	<li>Go to the tab Advanced and click on button "Environment Variables…"</li>
	<li>When the Environment Variables window opens, choose Path from the System variables list and click Edit…</li>
	<li>Add this <span class="code_block">;C:Python27;C:Python27Scripts</span> at the end of the value and save</li>
</ol>
<blockquote>
<div>Now you are able to execute python from Command Prompt of the windows</div></blockquote>
<strong>Install setuptools MS Windows installer</strong> (Necessary to install PIP on Windows)
<ol>
	<li>Choose the correct installer for you in this page <a href="http://pypi.python.org/pypi/setuptools#files">PYPI</a> ( I used this one:<a href="http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11.win32-py2.7.exe#md5=57e1e64f6b7c7f1d2eddfc9746bbaf20">setuptools-0.6c11.win32-py2.7.exe</a>)</li>
	<li>Download the installer and Install that</li>
</ol>
<strong>Install PIP</strong>
<ol>
	<li>Download <a href="http://pypi.python.org/pypi/pip#downloads">PIP</a></li>
	<li>Extract it to any folder</li>
	<li>From that directory, type <span class="code_block">python setup.py install</span></li>
</ol>
<strong>Install Virtualenv</strong>
<ol>
	<li>Execute <span class="code_block">pip install virtualenv</span></li>
	<li>Execute this <span class="code_block">mkdir c:virtualenvs</span> to create a folder to the Virtual Envs</li>
	<li>Execute this <span class="code_block">cd virtualenvs</span> to access the virtualenvs directory</li>
	<li>Execute <span class="code_block">virtualenv flaskdemo</span> to create a virtualenv for you project</li>
	<li>Active the virtualenv <span class="code_block" data-mce-mark="1">c:virtualenvsflaskdemoscriptsactivate</span></li>
</ol>
<strong>Install Google App Engine SDK</strong>
<ol>
	<li>Install the <a href="https://developers.google.com/appengine/downloads">GAE SDK</a></li>
</ol>
<strong>Create the project</strong>
<ol>
	<li>Create a directory for your project</li>
	<li>Create the main of your application <a href="https://github.com/maxcnunes/flaskgaedemo/blob/master/main.py">main.py</a></li>
	<li>Create the configuration of your application for Google App Engine<a href="https://github.com/maxcnunes/flaskgaedemo/blob/master/app.yaml">app.yaml</a></li>
	<li>Create a file to let GAE initialize your application <a href="https://github.com/maxcnunes/flaskgaedemo/blob/master/initialize_gae.py">initialize_gae.py</a></li>
</ol>
<blockquote>
<div>Look a example of the code here:&nbsp;<a href="https://github.com/maxcnunes/flaskgaedemo" rel="nofollow">https://github.com/maxcnunes/flaskgaedemo</a></div></blockquote>
<strong>Install Flask to run Locally</strong>
<ol>
	<li>Execute <span class="code_block">pip install flask</span></li>
</ol>
<strong>Install Flask to run on the GAE</strong>
<ol>
	<li>Download Flask <a href="https://github.com/mitsuhiko/flask/archive/0.9.zip">0.9.zip</a>&nbsp;or <a href="https://github.com/mitsuhiko/flask/tags">the last version</a> and extract the folder flask inside your project</li>
	<li>Download Werkzeug <a href="https://github.com/mitsuhiko/werkzeug/archive/0.8.3.zip">0.8.3.zip</a> or&nbsp;<a href="https://github.com/mitsuhiko/werkzeug/tags">the last version</a>&nbsp;and extract the folder werkzeug inside your project</li>
	<li>Download Jinja2 <a href="https://github.com/mitsuhiko/jinja2/archive/2.6.zip">2.6.zip</a> or&nbsp;<a href="https://github.com/mitsuhiko/jinja2/tags">the last version</a>&nbsp;and extract the folder jinja2 inside your project</li>
	<li>Download Simple Json <a href="https://github.com/simplejson/simplejson/archive/v3.0.5.zip">v3.0.5.zip</a> or&nbsp;<a href="https://github.com/simplejson/simplejson/archive/v3.0.5.zip">the last version</a>&nbsp;and extract the folder simplejson inside your project</li>
</ol>
<strong>Running the application with GAE SDK</strong>
<ol>
	<li>Open Google App Engine Launcher</li>
	<li>Add a new application</li>
	<li>Run the application</li>
	<li>Click in Browse button to open your application on browser</li>
	<li>Finally click on Deploy button to deploy your application</li>
</ol>
<div>&nbsp;</div>
<blockquote>Acabei deixando o artigo todo em inglês porque na verdade ele surgiu a partir de uma resposta que eu estava contribuindo no stackoverflow.</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>843</wp:post_id>
		<wp:post_date>2013-01-12 23:04:33</wp:post_date>
		<wp:post_date_gmt>2013-01-12 23:04:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>running-python-virtualenv-flask-and-gae-on-windows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Running Python, Virtualenv, Flask and GAE on Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Short tutorial explaining how to configure a environment on windows to create an application with python, flask and google app engine]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Running Python, Virtualenv, Flask and GAE on Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Running Python, Virtualenv, Flask and GAE on Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Short tutorial explaining how to configure a environment on windows to create an application with python, flask and google app engine]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Running Python, Virtualenv, Flask and GAE on Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>DOS / Terminal - Abrir uma janela a partir do diretório atual</title>
		<link>http://blog.maxcnunes.net/2013/01/28/dos-terminal-abrir-uma-janela-a-partir-do-diretorio-atual/</link>
		<pubDate>Mon, 28 Jan 2013 11:34:47 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=865</guid>
		<description></description>
		<content:encoded><![CDATA[

[caption id="" align="alignleft" width="180"]<img alt="" src="http://www.reactiongifs.com/wp-content/gallery/yes/dwight_yes.gif" width="180" height="147" /> Yeah[/caption]

Sempre que eu estava no terminal tanto do windows quanto do linux e eu precisava abrir o diretório atual em uma janela, eu estupidamente abria uma nova janela e acessava o caminho pasta a pasta até chegar ao diretório desejado.

&nbsp;
<h2 style="text-align: center;">Graças a comandos simples isso nunca mais acontecerá!!</h2>
&nbsp;

Para abrir o diretório atual no Windows faça assim:
<pre class="brush: shell; toolbar: false">explorer .</pre>
Para abrir o diretório atual no Gnome com Nautilus faça assim:
<pre class="brush: shell; toolbar: false">nautilus .</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>865</wp:post_id>
		<wp:post_date>2013-01-28 11:34:47</wp:post_date>
		<wp:post_date_gmt>2013-01-28 11:34:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dos-terminal-abrir-uma-janela-a-partir-do-diretorio-atual</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="aleatorio"><![CDATA[Aleatório]]></category>
		<category domain="post_tag" nicename="comando"><![CDATA[comando]]></category>
		<category domain="post_tag" nicename="dos"><![CDATA[dos]]></category>
		<category domain="post_tag" nicename="terminal"><![CDATA[terminal]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[DOS,Termina,Abrir,janela,explorer,diretório,atual]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[DOS / Terminal - Abrir uma janela explorer a partir do diretório atual]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[DOS / Terminal - Abrir uma janela explorer a partir do diretório atual]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[DOS,Termina,Abrir,janela,explorer,diretório,atual]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[DOS / Terminal - Abrir uma janela explorer a partir do diretório atual]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[DOS / Terminal - Abrir uma janela explorer a partir do diretório atual]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[Douglas]]></wp:comment_author>
			<wp:comment_author_email>douglaszporto@scelta.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://douglaszporto.net</wp:comment_author_url>
			<wp:comment_author_IP>189.27.144.182</wp:comment_author_IP>
			<wp:comment_date>2013-01-29 18:48:45</wp:comment_date>
			<wp:comment_date_gmt>2013-01-29 18:48:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tão simples e tão desconhecido!
Perfeito!
Valeu aí, rapaz
;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1359485325.473702907562255859375;s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1359755874.680316925048828125;s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Apresentação de Flask e Python na Bravi Software</title>
		<link>http://blog.maxcnunes.net/2013/02/01/apresentacao-de-flask-e-python-na-bravi-software/</link>
		<pubDate>Fri, 01 Feb 2013 22:02:09 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=874</guid>
		<description></description>
		<content:encoded><![CDATA[<iframe style="border: 1px solid #CCC; border-width: 1px 1px 0; margin-bottom: 5px;" src="http://www.slideshare.net/slideshow/embed_code/16299282" height="486" width="597" allowfullscreen="" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>
<div style="margin-bottom: 5px;"><strong> <a title="Flask – Python" href="http://www.slideshare.net/maxcnunes1/flask-python-16299282" target="_blank">Flask – Python</a> </strong> from <strong><a href="http://www.slideshare.net/maxcnunes1" target="_blank">Max Claus Nunes</a></strong></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>874</wp:post_id>
		<wp:post_date>2013-02-01 22:02:09</wp:post_date>
		<wp:post_date_gmt>2013-02-01 22:02:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>apresentacao-de-flask-e-python-na-bravi-software</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="apresetacao"><![CDATA[apresetação]]></category>
		<category domain="post_tag" nicename="flask"><![CDATA[flask]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python-2"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[flask, python, wtf, jinja]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Apresentação de Flask e Python na Bravi Software]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Apresentação de Flask e Python na Bravi Software]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[flask, python, wtf, jinja]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Apresentação de Flask e Python na Bravi Software]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Apresentação de Flask e Python na Bravi Software]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Apresentação de Git e Github na Bravi Software</title>
		<link>http://blog.maxcnunes.net/2013/03/17/apresentacao-de-git-e-github-na-bravi-software/</link>
		<pubDate>Sun, 17 Mar 2013 13:02:04 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=879</guid>
		<description></description>
		<content:encoded><![CDATA[[slideshare id=16869115&amp;doc=introductiontogitandgithub-published-130301165004-phpapp01]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>879</wp:post_id>
		<wp:post_date>2013-03-17 13:02:04</wp:post_date>
		<wp:post_date_gmt>2013-03-17 13:02:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>apresentacao-de-git-e-github-na-bravi-software</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<category domain="post_tag" nicename="git-2"><![CDATA[git]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[git,github,control version]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Apresentação de Git e Github na Bravi Software]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Apresentação de Git e Github na Bravi Software]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[git,github,control version]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Apresentação de Git e Github na Bravi Software]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Apresentação de Git e Github na Bravi Software]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Debug Knockout js</title>
		<link>http://blog.maxcnunes.net/2013/03/23/debug-knockout-js/</link>
		<pubDate>Sat, 23 Mar 2013 22:47:09 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=885</guid>
		<description></description>
		<content:encoded><![CDATA[

Tenho utilizado knockout js em alguns projetos e o desacoplamento que ele possibilita aplicando o padrão MVVM é fascinante. &nbsp;

Um forma simples que tenho utilizado para facilitar os binds durante o desenvolvimento é exibir serializado em JSON quais os dados estão sendo passados para viewmodel.

[gist id=5229570]

Um exemplo dos dados serializados em JSON seria assim:
<p style="text-align: center;"><a href="http://blog.maxcnunes.net/wp-content/uploads/2013/03/ViewModelJson.png"><img class="size-full wp-image-886 aligncenter" alt="" src="http://blog.maxcnunes.net/wp-content/uploads/2013/03/ViewModelJson.png" width="350" height="335" /></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>885</wp:post_id>
		<wp:post_date>2013-03-23 22:47:09</wp:post_date>
		<wp:post_date_gmt>2013-03-23 22:47:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>debug-knockout-js</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="debug"><![CDATA[debug]]></category>
		<category domain="category" nicename="knockout"><![CDATA[Knockout]]></category>
		<category domain="post_tag" nicename="knockout-2"><![CDATA[knockout]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Debug,Knockout,js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Debug Knockout js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Debug Knockout js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Debug,Knockout,js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Debug Knockout js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Debug Knockout js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title> Bind elemento a partir de um item selecionado - Knockout</title>
		<link>http://blog.maxcnunes.net/2013/03/27/bind-elemento-a-partir-de-um-item-selecionado-knockout/</link>
		<pubDate>Wed, 27 Mar 2013 04:17:22 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=895</guid>
		<description></description>
		<content:encoded><![CDATA[

Eu precisava carregar uma modal a partir de um item selecionado. Ou seja, cada vez que fosse clicado em um item em uma lista, a modal deveria ser atualizada com informações referente ao item selecionado.

Com knockout a solução é bem simples:
<ol>
	<li>Criar uma property "selected" do tipo observable</li>
	<li>Atribuir o item atual ao "selected" através do click sobre o item desejado</li>
	<li>Usar algum tipo de bind como "with" para disponibilizar o dados aos elementos html</li>
</ol>
No final vai ficar algo mais ou menos assim:

[gist id=5251559]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>895</wp:post_id>
		<wp:post_date>2013-03-27 04:17:22</wp:post_date>
		<wp:post_date_gmt>2013-03-27 04:17:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bind-elemento-a-partir-de-um-item-selecionado-knockout</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bind"><![CDATA[bind]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[JQuery]]></category>
		<category domain="category" nicename="knockout"><![CDATA[Knockout]]></category>
		<category domain="post_tag" nicename="knockout-2"><![CDATA[knockout]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[ Bind, elemento, item, selecionado, Knockout, selected]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Bind elemento a partir de um item selecionado de forma simples utliizando Knockout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[ Bind elemento a partir de um item selecionado - Knockout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[ Bind, elemento, item, selecionado, Knockout, selected]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Bind elemento a partir de um item selecionado de forma simples utliizando Knockout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[ Bind elemento a partir de um item selecionado - Knockout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Abrir uma Solution do Visual Studio através da linha de comando (Git Bash/Prompt)</title>
		<link>http://blog.maxcnunes.net/2013/04/08/abrir-uma-solution-do-visual-studio-atraves-da-linha-de-comando-git-bashprompt/</link>
		<pubDate>Mon, 08 Apr 2013 01:25:17 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=903</guid>
		<description></description>
		<content:encoded><![CDATA[

[caption id="attachment_921" align="alignleft" width="150"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2013/04/command-prompt.png"><img class=" wp-image-921 " alt="Command Line" src="http://blog.maxcnunes.net/wp-content/uploads/2013/04/command-prompt.png" width="150" height="150" /></a> Command Line[/caption]

Como todos já sabem eu gosto muito do controle de versão GIT. E eu gosto de utilizá-lo através do GIT Bash porque é possível realizar mais operações do que qualquer outra ferramente com interface para GIT e porque através da linha de comando é fácil de executar operações e automatizá-las com scripts.

Desde que comecei a utilizar o GIT o comportamento mais comum quando vou mexer em algum projeto é abrir antes de tudo o GIT Bash e acessar o repositório do projeto. O que eu fazia em seguida era executar o comando abaixo para abrir no windows explorer no diretório atual e por último abrir a Solution do projeto.

[gist id=5333161]

Mas já que estamos trabalhando com linha de comando podemos automatizar um pouco esse processo através de um dos scripts abaixo:
[gist id=5333242]
Explicando cada solução:
<ol>
	<li><span style="line-height: 13px;">A primeira solução é a que realmente eu tenho utilizado, que consiste em criar um alias no GIT para navegar para o diretório do meu projeto e abrir o Solution no Visual Studio. Para utilizá-la apenas digite o nome do alias no Git Bash.</span></li>
	<li>A segunda solução realiza o mesmo da primeira, mas é especifica para o Prompt do windows. Para utilizá-la crie um arquivo .bat no diretório inicial do seu Git Bash e execute-o pelo nome do .bat.</li>
	<li>A terceira solução apenas abre a Solution no Visual Studio, sem navegar para o diretório da solução. Podendo ser utilizada tanto no Git Bash quanto no Prompt do Windows. Para utilizá-la faça da mesma forma da segunda solução.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>903</wp:post_id>
		<wp:post_date>2013-04-08 01:25:17</wp:post_date>
		<wp:post_date_gmt>2013-04-08 01:25:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>abrir-uma-solution-do-visual-studio-atraves-da-linha-de-comando-git-bashprompt</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bash"><![CDATA[bash]]></category>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<category domain="post_tag" nicename="git-2"><![CDATA[git]]></category>
		<category domain="post_tag" nicename="prompt"><![CDATA[prompt]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[git, bash, prompt, open, solution, visual studio]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Maneira simples de automatizar um pouco o trabalho repetitivo de abrir um projeto.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Abrir uma Solution do Visual Studio através da linha de comando (Git Bash/Prompt)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[git, bash, prompt, open, solution, visual studio]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Maneira simples de automatizar um pouco o trabalho repetitivo de abrir um projeto.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Abrir uma Solution do Visual Studio através da linha de comando (Git Bash/Prompt)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Configurando Continuous Integration para .NET com AppHarbor e Github</title>
		<link>http://blog.maxcnunes.net/2013/04/11/configurando-continuous-integration-para-net-com-appharbor-e-github/</link>
		<pubDate>Thu, 11 Apr 2013 01:35:11 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=926</guid>
		<description></description>
		<content:encoded><![CDATA[

[caption id="attachment_965" align="alignleft" width="235"]<a href="http://blog.maxcnunes.net/wp-content/uploads/2013/04/CI-Build.png"><img class="size-full wp-image-965" alt="Continuous Integration" src="http://blog.maxcnunes.net/wp-content/uploads/2013/04/CI-Build.png" width="235" height="141" /></a> Continuous Integration[/caption]

Um dos projetos que tenho trabalhado ultimamente tem crescido aos poucos e já começa a apresentar alguns problemas comuns de qualquer projeto. As alterações no código realizadas por implementações de novas features ou correções de bugs podem ser commitadas com algum problema que quebre o build ou até mesmo imperceptivelmente interfira&nbsp;no comportamento&nbsp;de uma feature existente.
<h3>&nbsp;<!--more--></h3>
<h4>&nbsp;</h4>
<h4>&nbsp;</h4>
<h4>Como identificar que tais alterações estão afetando as featurues existentes?&nbsp;</h4>
<ul>
	<li><span style="color: #3366ff;"><strong>Testes!</strong></span></li>
</ul>
<h4>Como identificar tais problemas da formar mais cedo possível?</h4>
<ul>
	<li><span style="color: #3366ff;"><strong>Integração Contínua (CI)</strong></span></li>
</ul>
Martin Fowler define a Integração Contínua da seguinte forma:
<blockquote><em>Continuous Integration is a software development practice where members of a team integrate their work frequently, usually each person integrates at least daily – leading to multiple integrations per day. Each integration is verified by an automated build (including test) to detect integration errors as quickly as possible. Many teams find that this approach leads to significantly reduced integration problems and allows a team to develop cohesive software more rapidly. </em>&nbsp;– Martin Fowler</blockquote>
Ou seja, é uma prática de desenvolvimento para facilitar a identificação de erros provocados por integrações de tarefas realizadas diariamente. É contínuo exatamente porque o quanto antes for identificado o problema, melhor. E para que realmente seja um processo contínuo, deve ser automatizado.

Então automatizando builds e testes para serem executados a partir de cada integração você conseguirá identificar qual foi o commit e desenvolvedor responsável pelo problema.
<p style="text-align: center;"><strong><em>Continuous Integration Workflow</em></strong></p>
<p style="text-align: center;"><img class="size-full wp-image-947   aligncenter" alt="Continuous Integration Workflow" src="http://blog.maxcnunes.net/wp-content/uploads/2013/04/CI.png" width="425" height="672" /></p>
<p style="text-align: center;"><em>http://blogs.collab.net/cloudforge/continuous-integration-overview-best-practice</em></p>

<h3>AppHarbor</h3>
AppHarbor é uma hospedagem para aplicações web na plataforma .NET. Dentre vários add-ons disponíveis, ela ainda possui serviço de Continuous Integration. O mais interessante é que o serviço de CI é gratuito e fácil de configurar com o Github.

<strong>Configurando Continuous Integration no AppHarbor e Github</strong>

<span style="line-height: 13px;">1. Crie uma Application para o seu projeto</span><span style="line-height: 13px;">&nbsp;no AppHarbor</span><span style="line-height: 13px;">.</span>

<a href="http://blog.maxcnunes.net/wp-content/uploads/2013/04/CreateApp-AppHarbor.png"><img class="aligncenter  wp-image-958" alt="CreateApp-AppHarbor" src="http://blog.maxcnunes.net/wp-content/uploads/2013/04/CreateApp-AppHarbor.png" width="600" /></a>

2. Autorize o acesso da sua conta no Github.

<a href="http://blog.maxcnunes.net/wp-content/uploads/2013/04/Authorize-AppHarbor.png"><img class="aligncenter size-full wp-image-954" alt="Authorize-AppHarbor" src="http://blog.maxcnunes.net/wp-content/uploads/2013/04/Authorize-AppHarbor.png" width="426" height="285" /></a>

3. Selecione o repositório relacionado a esta aplicação.

<a href="http://blog.maxcnunes.net/wp-content/uploads/2013/04/SelectRepository-AppHarbor.png"><img class="aligncenter size-full wp-image-955" alt="SelectRepository-AppHarbor" src="http://blog.maxcnunes.net/wp-content/uploads/2013/04/SelectRepository-AppHarbor.png" width="577" height="127" /></a>

4. Acesse o Settings do seu repositório no Github para confirmar se a configuração foi realizada &nbsp;com sucesso.
<p style="text-align: center;"><a href="http://blog.maxcnunes.net/wp-content/uploads/2013/04/ServiceHooks-AppHarbor.png"><img class="aligncenter  wp-image-956" alt="ServiceHooks-AppHarbor" src="http://blog.maxcnunes.net/wp-content/uploads/2013/04/ServiceHooks-AppHarbor.png" width="600" /></a></p>
<p style="text-align: left;">5. De volta no AppHarbor acesse o painel de controle referente a esta aplicação e agora irá conter informações sobre os builds realizados.</p>
<p style="text-align: center;"><a href="http://blog.maxcnunes.net/wp-content/uploads/2013/04/BuildStatus-AppHarbor.png"><img class="aligncenter  wp-image-957" alt="BuildStatus-AppHarbor" src="http://blog.maxcnunes.net/wp-content/uploads/2013/04/BuildStatus-AppHarbor.png" width="600" /></a></p>
<p style="text-align: left;">6. Clique sobre o build e será exibido informações mais detalhadas.</p>
<p style="text-align: center;"><a href="http://blog.maxcnunes.net/wp-content/uploads/2013/04/BuildInfo-AppHarbor.png"><img class="aligncenter  wp-image-960" alt="BuildInfo-AppHarbor" src="http://blog.maxcnunes.net/wp-content/uploads/2013/04/BuildInfo-AppHarbor.png" width="600" /></a></p>
<p style="text-align: left;">7. Através do Commit Id você consegue descobrir quem realizou o commit.</p>
<p style="text-align: left;"><a href="http://blog.maxcnunes.net/wp-content/uploads/2013/04/CommitInfo-Git.png"><img class="aligncenter size-full wp-image-961" alt="CommitInfo-Git" src="http://blog.maxcnunes.net/wp-content/uploads/2013/04/CommitInfo-Git.png" width="395" height="111" /></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>926</wp:post_id>
		<wp:post_date>2013-04-11 01:35:11</wp:post_date>
		<wp:post_date_gmt>2013-04-11 01:35:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>configurando-continuous-integration-para-net-com-appharbor-e-github</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dot-net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="ci"><![CDATA[CI]]></category>
		<category domain="post_tag" nicename="continuous-integration"><![CDATA[Continuous Integration]]></category>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Continuous Integration,CI,NET,Integração Continua]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Veja como é fácil e rápido configurar CI para .NET com AppHarbor e Github]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Configurando Continuous Integration para .NET com AppHarbor e Github]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Continuous Integration,CI,NET,Integração Continua]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Veja como é fácil e rápido configurar CI para .NET com AppHarbor e Github]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Configurando Continuous Integration para .NET com AppHarbor e Github]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>101</wp:comment_id>
			<wp:comment_author><![CDATA[kleber]]></wp:comment_author>
			<wp:comment_author_email>kleber.aedas@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>186.195.159.146</wp:comment_author_IP>
			<wp:comment_date>2013-09-12 13:52:31</wp:comment_date>
			<wp:comment_date_gmt>2013-09-12 13:52:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[porque consigo fazer todo o processo normal no appharbor, meu site esta como ativo, mas quando vou acessar de qualquer outro ponto que não meu notebook abre um site da HP?

http://www.aquacorporation.apphp.com/


consegue me ajudar?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378993951.9308440685272216796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378999719.9892680644989013671875;s:7:"message";s:48:"maxcnunes changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[maxcnunes]]></wp:comment_author>
			<wp:comment_author_email>maxcnunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.49.237.214</wp:comment_author_IP>
			<wp:comment_date>2013-09-12 15:30:47</wp:comment_date>
			<wp:comment_date_gmt>2013-09-12 15:30:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Parece que está normal. Certeza que essa não é a sua app: <a href="http://aquacorporation.apphb.com/" rel="nofollow">http://aquacorporation.apphb.com/</a> ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>101</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378999847.0094048976898193359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Authentication with old password no longer supported, use 4.1 style passwords</title>
		<link>http://blog.maxcnunes.net/2013/04/13/authentication-with-old-password-no-longer-supported-use-4-1-style-passwords/</link>
		<pubDate>Sat, 13 Apr 2013 15:45:12 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=971</guid>
		<description></description>
		<content:encoded><![CDATA[Esta semana eu estava trabalhando normalmente usando NHibernate conectado em um banco de dados MySQL local. Quando tentei mudar minha conexão para um servidor remoto na minha hospedagem, começou a exibir a seguinte mensagem de erro bem genérica ao tentar abrir a conexão:

<strong>Arithmetic operation resulted</strong>

Após várias tentativa frustantes de corrigir o problema, tentei atualizar a versão do MySQL connector de 6.6.4 para 6.6.5. Então começou a exibir uma mensagem de erro diferente:

<strong>Authentication with old password no longer supported, use 4.1 style passwords</strong>

Com essa mensagem de erro mais específica consegui encontrar a solução para o meu problema.
<ol>
	<li>Atualize a versão do seu MySQL connector para 6.6.5.</li>
	<li>Conecte no seu banco de dados remoto através de alguma ferramente como o MySQL Workbench.</li>
	<li>Execute a query abaixo alterando o nome e senha do seu usuário:</li>
</ol>
[gist id=5378843]

Tente conectar novamente através do c# e deverá funcionar.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>971</wp:post_id>
		<wp:post_date>2013-04-13 15:45:12</wp:post_date>
		<wp:post_date_gmt>2013-04-13 15:45:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>authentication-with-old-password-no-longer-supported-use-4-1-style-passwords</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bancodedados"><![CDATA[Banco de Dados]]></category>
		<category domain="category" nicename="csharpt"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Authentication with old password no longer supported, use 4.1 style passwords]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Authentication with old password no longer supported, use 4.1 style passwords]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Authentication with old password no longer supported, use 4.1 style passwords]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Authentication with old password no longer supported, use 4.1 style passwords]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[Filipe]]></wp:comment_author>
			<wp:comment_author_email>filipe@sastec.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://www.sastec.com.br</wp:comment_author_url>
			<wp:comment_author_IP>187.37.115.84</wp:comment_author_IP>
			<wp:comment_date>2013-06-21 20:44:10</wp:comment_date>
			<wp:comment_date_gmt>2013-06-21 20:44:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[muito boa a dica!! me ajudou muito!! economizei horas de pesquisa]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1371847450.7147619724273681640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1371862608.253961086273193359375;s:7:"message";s:48:"maxcnunes changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[Wanderlei Silva do Carmo]]></wp:comment_author>
			<wp:comment_author_email>wander.silva@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.206.28.103</wp:comment_author_IP>
			<wp:comment_date>2013-07-23 18:35:54</wp:comment_date>
			<wp:comment_date_gmt>2013-07-23 18:35:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Obrigado meu amigo, 
me ajudou imensamente.

Grande abraço.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>29</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374622494.2267320156097412109375;s:7:"message";s:48:"maxcnunes changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374604554.3336009979248046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>164</wp:comment_id>
			<wp:comment_author><![CDATA[Raphael]]></wp:comment_author>
			<wp:comment_author_email>raphaelbabinski@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>179.187.194.28</wp:comment_author_IP>
			<wp:comment_date>2014-03-31 15:38:24</wp:comment_date>
			<wp:comment_date_gmt>2014-03-31 15:38:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Valeu parceiro,

Sempre preciso dessa dica quando inicio um novo banco de dados.

Obrigado..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1396534711.4800889492034912109375;s:7:"message";s:48:"maxcnunes changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1396280304.7222499847412109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>TDC 2013 - Ferramentas e Bibliotecas que você deveria estar utilizando</title>
		<link>http://blog.maxcnunes.net/2013/05/27/tdc-2013-ferramentas-e-bibliotecas-que-voce-deveria-estar-utilizando/</link>
		<pubDate>Mon, 27 May 2013 12:52:47 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=978</guid>
		<description></description>
		<content:encoded><![CDATA[

Ontem (26/05/2013) eu e o Danimar palestramos na trilha de Web University no TDC. Foi nossa primeira palestra fora do trabalho e deu tudo certo :)&nbsp;Só ficou faltando falar do último tema Twitter Bootstrap, porque não deu tempo.

Segue os slides da apresentação:

[slideshare id=22002052&amp;doc=ferramentasebibliotecasquevocdeveriaestarutilizando-desenvolvimentoweb-130527074226-phpapp01]

<strong>Código fonte dos exemplos apresentados</strong>:&nbsp;<a href="https://github.com/maxcnunes/TDC-2013">https://github.com/maxcnunes/TDC-2013</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>978</wp:post_id>
		<wp:post_date>2013-05-27 12:52:47</wp:post_date>
		<wp:post_date_gmt>2013-05-27 12:52:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tdc-2013-ferramentas-e-bibliotecas-que-voce-deveria-estar-utilizando</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bibliotecas"><![CDATA[bibliotecas]]></category>
		<category domain="post_tag" nicename="ferramentas"><![CDATA[ferramentas]]></category>
		<category domain="category" nicename="palestra"><![CDATA[Palestra]]></category>
		<category domain="post_tag" nicename="tdc"><![CDATA[tdc]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[tdc,2013, web university]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Apresentação de Ferramentas e Bibliotecas que você deveria estar utilizando no desenvolvimento web. Palestrada por Max Claus Nunes e Danimar Ribeiro no TDC 2013.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Ferramentas e Bibliotecas que você deveria estar utilizando]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[tdc,2013, web university]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Apresentação de Ferramentas e Bibliotecas que você deveria estar utilizando no desenvolvimento web. Palestrada por Max Claus Nunes e Danimar Ribeiro no TDC 2013.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Ferramentas e Bibliotecas que você deveria estar utilizando]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[Leonardo Constanski]]></wp:comment_author>
			<wp:comment_author_email>lconstanski@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.22.74.80</wp:comment_author_IP>
			<wp:comment_date>2013-05-27 19:05:01</wp:comment_date>
			<wp:comment_date_gmt>2013-05-27 19:05:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Aee Max, axo que só faltou falar sobre o Backbone.js

Com ele vc traz o desenvolvimento por camadas pro JavaScript, dando pra fazer aplicações web assincronas sem ter aquela tonelada de binds em jquery e toneladas de chamadas $.ajax, diversos sites usam ele, khan academy, grooveshark, etc.

No inicio é meio chato para pegar as manha, mas depois agiliza o desenvolvimento a mil grau haha

backbonejs.org]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369681501.6309769153594970703125;s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369892268.3849399089813232421875;s:7:"message";s:51:"maxcn alterou o status do comentário para approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[maxcnunes]]></wp:comment_author>
			<wp:comment_author_email>maxcnunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.132.100.124</wp:comment_author_IP>
			<wp:comment_date>2013-05-30 05:40:08</wp:comment_date>
			<wp:comment_date_gmt>2013-05-30 05:40:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sim frameworks de SPA hoje em dia estão em alta. Tenho utilizado o Durandal (pouco conhecido), mas o backbone é bom também e uns dos mais famosos.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>24</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369892408.8475589752197265625;s:7:"message";s:34:"O Akismet liberou este comentário";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"maxcn";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Erro ao publicar Rails no Heroku - &quot;Gemfile.lock required. Please check it in.&quot;</title>
		<link>http://blog.maxcnunes.net/2013/05/30/erro-ao-publicar-rails-no-heroku-gemfile-lock-required-please-check-it-in/</link>
		<pubDate>Thu, 30 May 2013 05:36:58 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=984</guid>
		<description></description>
		<content:encoded><![CDATA[Passei um bom tempo quebrando a cabeça por causa desse problema a baixo que ocorria toda vez que eu tentava publicar o Rails no Heroku:

[gist id=5675847]

No final das contas a solução foi simples, mas como pode ser que ocorra com alguém mais, então esta foi a minha solução:
<ol>
	<li><span style="line-height: 13px;">Remova o Gemfile.lock do .gitignore</span></li>
	<li>Execute esse comando para remover a pasta de bundle local, executar o bundle localmente, adicionar o Gemfile.lock e commitar
<pre class="brush: shell; toolbar: false">rm -rf .bundle &amp;&amp; bundle install &amp;&amp; git add Gemfile.lock &amp;&amp; git commit -m "Added Gemfile.lock"</pre>
</li>
	<li>Execute esse comando para publicar no heroku (considerando que você esteja trabalhando com github simultaneamente).
<pre class="brush: shell; toolbar: false">git push heroku branch_do_github:master</pre>
</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>984</wp:post_id>
		<wp:post_date>2013-05-30 05:36:58</wp:post_date>
		<wp:post_date_gmt>2013-05-30 05:36:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>erro-ao-publicar-rails-no-heroku-gemfile-lock-required-please-check-it-in</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="deploy"><![CDATA[deploy]]></category>
		<category domain="post_tag" nicename="heroku"><![CDATA[heroku]]></category>
		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>
		<category domain="post_tag" nicename="rails-2"><![CDATA[rails]]></category>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[heroku, rails, gemfile.lock, required, error]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Solução para o erro que ocorre ao publicar Rails no Heroku - "Gemfile.lock required. Please check it in."]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Erro ao publicar Rails no Heroku]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[heroku, rails, gemfile.lock, required, error]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Solução para o erro que ocorre ao publicar Rails no Heroku - "Gemfile.lock required. Please check it in."]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Erro ao publicar Rails no Heroku]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>ZSH e Oh My ZSH</title>
		<link>http://blog.maxcnunes.net/2013/05/31/zsh-e-oh-my-zsh/</link>
		<pubDate>Fri, 31 May 2013 17:09:09 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=988</guid>
		<description></description>
		<content:encoded><![CDATA[<h3><span style="font-size: 1.17em;">ZSH</span></h3>
O <strong>ZSH </strong>é um shell para Unix que vai fazer você não querer mais usar qualquer outro shell além dele.
<h3>O Oh My ZSH</h3>
Existe um <a href="https://github.com/robbyrussell/oh-my-zsh">projeto no github</a> chamado "<strong>O Oh My ZSH</strong>" que contêm plugins e configurações para customizar o ZSH que aumentam ainda mais a usabilidade neste terminal. Outro detalhe legal é a possibilidade de alterar temas do terminal: <a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes">exemplos</a>.

<a href="http://blog.maxcnunes.net/wp-content/uploads/2013/05/OhMyZsh.png"><img class="aligncenter size-full wp-image-1011" alt="OhMyZsh" src="http://blog.maxcnunes.net/wp-content/uploads/2013/05/OhMyZsh.png" width="655" height="266" /></a>

Para ter uma ideia melhor de uma olhada nesse vídeo: <a href="http://vimeo.com/57123291">http://vimeo.com/57123291</a> (em inglês)
<h4>Instalando ZSH e Oh My ZSH no Ubuntu</h4>
<ol>
	<li>Instalar ZSH:
<pre class="brush: shell; toolbar: false">sudo apt-get update &amp;&amp; sudo apt-get install zsh</pre>
</li>
	<li>Configurar oh-my-zsh:
<pre class="brush: shell; toolbar: false">wget –no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O – | sh</pre>
</li>
	<li>Tornar ZSH terminal padrão:
<pre class="brush: shell; toolbar: false">chsh -s /bin/zsh</pre>
</li>
	<li>Reinicie o ubuntu.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>988</wp:post_id>
		<wp:post_date>2013-05-31 17:09:09</wp:post_date>
		<wp:post_date_gmt>2013-05-31 17:09:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zsh-e-oh-my-zsh</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="shell"><![CDATA[shell]]></category>
		<wp:postmeta>
			<wp:meta_key>simplecatch-sidebarlayout</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[ZSH, Oh My ZSH]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Aumente a usabilidade do shell utilizando ZSH e Oh My ZSH.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[ZSH e Oh My ZSH]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[ZSH, Oh My ZSH]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Aumente a usabilidade do shell utilizando ZSH e Oh My ZSH.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[ZSH e Oh My ZSH]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Bind Handler Debugger Knockout</title>
		<link>http://blog.maxcnunes.net/2013/06/22/bind-handler-debugger-knockout/</link>
		<pubDate>Sat, 22 Jun 2013 02:33:40 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1073</guid>
		<description></description>
		<content:encoded><![CDATA[Knockout é uma ótima biblioteca javascript para aplicar o padrão MVVM no front-end. Mas dependendo do seu cenário, pode ser um pouco complicado para debuggar algum problema durante qualquer bind na view.
Então para essas situações eu sempre utilizo um custom bind handler do knockout para invocar a pausa do js debugger durante o bind em tempo de execução:
<pre class="brush: csharp; toolbar: false;">// Debugger Bind
//-------------------------
ko.bindingHandlers.debuggerBind = {
    init: function (element, valueAccessor, allBindingsAccessor) {
        debugger;
        var person = valueAccessor();
        console.debug('Init ~&gt; Knockout bind debugger: ' + person.firstName());
    },
    update: function (element, valueAccessor) {
        debugger;
        var person = valueAccessor();
        console.debug('Update ~&gt; Knockout bind debugger: ' + person.firstName());
    }
};</pre>
No bind eu adiciono o atributo <strong>debuggerBind</strong> e carrego a página no navegador com a ferramenta do desenvolvedor aberta. O resultado será o seguinte:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2013/06/knockout-debugger.png"><img class="aligncenter size-full wp-image-1085" alt="knockout-debugger" src="http://blog.maxcnunes.net/wp-content/uploads/2013/06/knockout-debugger.png" width="452" height="121" /></a>

Debugger pausado durante bind:

<a href="http://blog.maxcnunes.net/wp-content/uploads/2013/06/knockout-debugger2.png"><img class="aligncenter size-full wp-image-1083" alt="knockout-debugger2" src="http://blog.maxcnunes.net/wp-content/uploads/2013/06/knockout-debugger2.png" width="605" height="214" /></a>

<a href="http://jsfiddle.net/maxcnunes/vYY7T/" target="_blank">Veja o exemplo no JsFiddle</a>. (Execute com a ferramenta do desenvolvedor aberta - F12)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1073</wp:post_id>
		<wp:post_date>2013-06-22 02:33:40</wp:post_date>
		<wp:post_date_gmt>2013-06-22 02:33:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bind-handler-debugger-knockout</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bibliotecas"><![CDATA[bibliotecas]]></category>
		<category domain="post_tag" nicename="bind"><![CDATA[bind]]></category>
		<category domain="post_tag" nicename="debug"><![CDATA[debug]]></category>
		<category domain="category" nicename="js"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="knockout"><![CDATA[Knockout]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[Bind Handler Debugger Knockout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[Script para executar o debugger js durante o bind pelo Knockout de um elemento na view]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Moving to Digital Ocean</title>
		<link>http://blog.maxcnunes.net/2013/06/23/moving-to-digital-ocean/</link>
		<pubDate>Sun, 23 Jun 2013 20:03:18 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1091</guid>
		<description></description>
		<content:encoded><![CDATA[Novo server, novo tema, novo idioma. Como a maioria dos assuntos em tecnologia é publicado em inglês e eu preciso praticar mais, vou estar tentando escrever alguns posts em inglês. Se vocês notarem qualquer erro, por favor me avisem :).

<!--more-->
<h3>Why change?</h3>
I was using a common host on TeHospedo, but sometimes I needed some configurations or process that was not in my hands, I had to ask to support do that for me. Some tasks were not solve fast as I would like and it is so frustrating that I decided move to a new server on <a href="https://www.digitalocean.com/" target="_blank">Digital Ocean</a> that provide virtual machines with many Linux distributions options. Take a look on their advertising video:

<iframe src="http://www.youtube.com/embed/vHZLCahai4Q" height="315" width="560" allowfullscreen="" frameborder="0"></iframe>
<h3>My Droplet (Virtual Machine)</h3>
My VM is a Linux CentOS 6.4 x64 with 512 MB RAM and 20GB SSD. This is amazing for my needs and I will can install, configure and run anything there as I prefer.
<h3>Configuring the Server</h3>
My main reason for have this server nowadays is to host my wordpress blog and also my brother’s blog. So for run the wordpress I had to configure the LAMP (Linux, Apache, MySQL and PHP). As unfortunately I have little experience with that configurations on Linux, I followed some good tutorials provided by Digital Ocean:
<ol>
	<li><a href="https://www.digitalocean.com/community/articles/how-to-install-linux-apache-mysql-php-lamp-stack-on-centos-6" target="_blank">How to Install Linux, Apache, MySQL, PHP (LAMP) stack on CentOS 6</a></li>
	<li><a href="https://www.digitalocean.com/community/articles/how-to-install-wordpress-on-centos-6--2" target="_blank">How to Install Wordpress on Centos 6</a></li>
	<li><a href="https://www.digitalocean.com/community/articles/how-to-set-up-apache-virtual-hosts-on-centos-6" target="_blank">How to Set Up Apache Virtual Hosts on CentOS 6</a> and <a href="http://www.rackspace.com/knowledge_center/article/how-to-serve-multiple-domains-using-virtual-hosts" target="_blank">How to Serve Multiple Domains Using Virtual Hosts</a>(by rackspace)</li>
	<li><a href="https://www.digitalocean.com/community/articles/how-to-set-up-a-host-name-with-digitalocean" target="_blank">How to Set Up a Host Name with DigitalOcean</a></li>
</ol>
<h3>Extra Configurations</h3>
<ol>
	<li><span style="line-height: 13px;"><a href="http://ingolfzp.com/2009/03/getting-permalinks-working-with-apache2/" target="_blank">Getting permalinks working with apache2</a>
</span></li>
	<li><a href="http://www.linux-faqs.info/apache/optimize-website-speed-with-mod-expire-and-mod-deflate" target="_blank">Optimize website speed with mod_expire and mod_deflate</a></li>
</ol>
Many configurations right? But I configured exactly as I want and I don't depend wait for any staff support to install or configure a new feature in my host.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1091</wp:post_id>
		<wp:post_date>2013-06-23 20:03:18</wp:post_date>
		<wp:post_date_gmt>2013-06-23 20:03:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>moving-to-digital-ocean</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="digitalocean"><![CDATA[digitalocean]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[Moving to Digital Ocean]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[Configuring my VM on Digital Ocean to run Wordpress blogs.]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>103</wp:comment_id>
			<wp:comment_author><![CDATA[John Paul Handrigan]]></wp:comment_author>
			<wp:comment_author_email>jphandrigan.junk@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.johnpaulhandrigan.net</wp:comment_author_url>
			<wp:comment_author_IP>198.84.237.52</wp:comment_author_IP>
			<wp:comment_date>2013-09-22 11:55:54</wp:comment_date>
			<wp:comment_date_gmt>2013-09-22 11:55:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Max,

I just recently signed up for Digital Ocean and wanted to thank you for these resources. They were very useful to me!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1379850954.3426539897918701171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1379956660.597712039947509765625;s:7:"message";s:48:"maxcnunes changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>105</wp:comment_id>
			<wp:comment_author><![CDATA[maxcnunes]]></wp:comment_author>
			<wp:comment_author_email>maxcnunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.112.90.157</wp:comment_author_IP>
			<wp:comment_date>2013-09-24 01:18:50</wp:comment_date>
			<wp:comment_date_gmt>2013-09-24 01:18:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good to know. I'm glad could help you.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>103</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1379985530.338265895843505859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"maxcnunes";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Single Page Apps</title>
		<link>http://blog.maxcnunes.net/2013/07/16/single-page-apps/</link>
		<pubDate>Tue, 16 Jul 2013 22:57:39 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1113</guid>
		<description></description>
		<content:encoded><![CDATA[Presentation about Single Pages App done at Bravi.
[slideshare id=24314469&amp;doc=singlepageapps-130716172921-phpapp01]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1113</wp:post_id>
		<wp:post_date>2013-07-16 22:57:39</wp:post_date>
		<wp:post_date_gmt>2013-07-16 22:57:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>single-page-apps</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="js"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="knockout"><![CDATA[Knockout]]></category>
		<category domain="category" nicename="spa"><![CDATA[SPA]]></category>
		<category domain="post_tag" nicename="spa"><![CDATA[SPA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[Single Page Apps]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[Presentation about Single Pages App done at Bravi]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Linux command line to check the directory&#039;s size</title>
		<link>http://blog.maxcnunes.net/2013/07/23/linux-command-line-to-check-the-directorys-size/</link>
		<pubDate>Tue, 23 Jul 2013 23:44:41 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1116</guid>
		<description></description>
		<content:encoded><![CDATA[Using the Nitrous.io I got this message "<strong>disk quota exceeded</strong>" after try install mongoid. The initial plan available for free accounts on Nitrous provides 750MB storage.

But I was asking myself how could my application in rails, that I just started to code, get all this space used? Try to guess could no help me to solve this problem then I learned this new linux command line to check the directories size:
<pre class="brush: shell">du -h --max-depth=1 ~/ | sort -n -r</pre>
And I understood exactly where the problem was, my .rvm directory was too much big:
<pre class="brush: shell">405M    /home/action/
222M    /home/action/.rvm
144M    /home/action/.gem
24M     /home/action/.nvm
24K     /home/action/.subversion
15M     /home/action/.vim
8.0K    /home/action/.ssh
1.8M    /home/action/easy_order
0       /home/action/workspace
0       /home/action/.cache</pre>
<em>ps: I got this output after remove a ruby version not used</em>

Explaning the command line:
<ul>
	<li><span style="line-height: 13px;">du : shows how much space one ore more files or directories is using</span></li>
	<li>-h : format output to show the size in MB</li>
	<li>--max-depth=1 : consider just the top directories</li>
	<li>~/ : direcoty's path to exam</li>
	<li>| sort -n -r: sort by size</li>
</ul>
<span style="color: #ff0000;">Off-Topic:</span> Please, help me to get more space in Nitrous. You just have to create an account using my <a href="https://www.nitrous.io/join/m02YDPBCqzU">link</a> :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1116</wp:post_id>
		<wp:post_date>2013-07-23 23:44:41</wp:post_date>
		<wp:post_date_gmt>2013-07-23 23:44:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-command-line-to-check-the-directorys-size</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="command-line"><![CDATA[command line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="shell"><![CDATA[shell]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[Linux command line to check the directory's size]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[Command line to shows how much space one ore more files or directories is using]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Vagrant - Error: UNKNOWN, symlink</title>
		<link>http://blog.maxcnunes.net/2013/09/20/vagrant-error-unknown-symlink/</link>
		<pubDate>Fri, 20 Sep 2013 22:12:49 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1128</guid>
		<description></description>
		<content:encoded><![CDATA[Why does with Windows always has a problem or is more difficult to work with nice non-Microsoft stuff?! I was configuring Vagrant to run a project with Nodejs. Everything was going really well when my host machine was the Mac. But when I had to use the Windows as host machine then I got my first problem to run the command npm install inside the guest Ubuntu machine:
<pre class="brush: shell">Error: UNKNOWN, symlink</pre>
After some attempts the only solution that works was use a parameter to not force use symlink when installing npm dependencies:
<pre class="brush: shell">sudo npm install --no-bin-link</pre>
Take a look on this <a href="http://www.conroyp.com/2013/04/13/symlink-shenanigans-nodejs-npm-express-vagrant">post</a> to understand better the problem.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1128</wp:post_id>
		<wp:post_date>2013-09-20 22:12:49</wp:post_date>
		<wp:post_date_gmt>2013-09-20 22:12:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vagrant-error-unknown-symlink</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="nodejs"><![CDATA[Nodejs]]></category>
		<category domain="category" nicename="shell-2"><![CDATA[Shell]]></category>
		<category domain="post_tag" nicename="symlink"><![CDATA[symlink]]></category>
		<category domain="post_tag" nicename="vagrant"><![CDATA[vagrant]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[Vagrant - Error: UNKNOWN, symlink]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[How to fix the Vagrant - Error: UNKNOWN, symlink]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Clear the contents of an existing UNIX file</title>
		<link>http://blog.maxcnunes.net/2013/10/30/clear-the-contents-of-an-existing-unix-file/</link>
		<pubDate>Wed, 30 Oct 2013 01:40:54 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1139</guid>
		<description></description>
		<content:encoded><![CDATA[A really simple but useful tip. To clear the contents of an existing file you can override the file with another empty file.

[gist id="7135847"]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1139</wp:post_id>
		<wp:post_date>2013-10-30 01:40:54</wp:post_date>
		<wp:post_date_gmt>2013-10-30 01:40:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clear-the-contents-of-an-existing-unix-file</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="mac"><![CDATA[Mac]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[Clear the contents of an existing UNIX file]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[Clear the contents of an existing UNIX file]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>VIM - Select the word under the cursor</title>
		<link>http://blog.maxcnunes.net/2013/11/02/vim-select-the-word-under-the-cursor/</link>
		<pubDate>Sat, 02 Nov 2013 23:14:30 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1145</guid>
		<description></description>
		<content:encoded><![CDATA[Type in normal mode:
[gist id="7284424" file="select-the-word-under-the-cursor"]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1145</wp:post_id>
		<wp:post_date>2013-11-02 23:14:30</wp:post_date>
		<wp:post_date_gmt>2013-11-02 23:14:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vim-select-the-word-under-the-cursor</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="vim"><![CDATA[VIM]]></category>
		<category domain="post_tag" nicename="vim-2"><![CDATA[vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[VIM - Select the word under the cursor]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[VIM - Select the word under the cursor]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Tell don&#039;t Ask</title>
		<link>http://blog.maxcnunes.net/2014/01/03/tell-dont-ask/</link>
		<pubDate>Fri, 03 Jan 2014 17:30:08 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1157</guid>
		<description></description>
		<content:encoded><![CDATA[<em>Article originally posted on <a href="http://tribalingua.wordpress.com/2013/12/17/tell-dont-ask/">Tribalingua</a>.</em>

<span style="line-height: 1.5em;">Do you take care with how you write a letter? So that it will clear and easy for your recipient  to read? Well, it should be the same feeling with the code that you write. With a letter we sometimes have to stop and think what is the best way to write down what is in our minds. Therefore, we have to be clear and easy for anyone else reading what you were thinking when you wrote that.  Just as we have rules to write a nice readable letter, also we have Patterns and Principles to write clean and </span><span style="line-height: 1.5em;">understandable</span><span style="line-height: 1.5em;"> code.</span>

The principle <strong>Tell don't Ask</strong> helps to ensure a correct division of responsibility  without causing excess coupling to an incorrect class.
<blockquote>...you should endeavor to <em>tell</em> objects what you want them to do; do not <em>ask</em> them questions about their state, make a decision, and then tell them what to do. - <a href="http://pragprog.com/articles/tell-dont-ask">The Pragmatic Bookshelf</a></blockquote>
<a href="http://tribalingua.files.wordpress.com/2013/12/telldontask1.png"><img class="aligncenter size-large wp-image-3892" alt="TellDontAsk" src="http://tribalingua.files.wordpress.com/2013/12/telldontask1.png?w=490" width="490" height="602" /><!--more--></a>

To exemplify it I wrote a sample based in a common code present in a project that I'm working on in this sprint.

[gist id="8005735"]

In the Ask version I have too much logic outside the Form class, that should be responsible to do all that process. In the Tell version I just tell what I want and nothing else. This increases the maintainability and readability of my code because it is shorter, cleaner and I let the Form class do what it knows doing better than the Screen class.

As many others principles and patterns in software design, this is not set in stone nor is it  a silver bullet to solve all your problems, but anyway with approaches like that you will be guided towards a better code.

So do you want to be known as a good writer or as that crazy drunk friend that sends you nonsense messages on the phone at 3:00 AM?! Think about it :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1157</wp:post_id>
		<wp:post_date>2014-01-03 17:30:08</wp:post_date>
		<wp:post_date_gmt>2014-01-03 17:30:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tell-dont-ask</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="design-pattern"><![CDATA[Design Pattern]]></category>
		<category domain="category" nicename="design-patterns"><![CDATA[Design Patterns]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[Tell don't Ask]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[The principle Tell don't Ask helps to ensure a correct division of responsibility  without causing excess coupling to an incorrect class.]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>The reasons why I like Ruby</title>
		<link>http://blog.maxcnunes.net/2014/01/12/the-reasons-why-i-like-ruby/</link>
		<pubDate>Sun, 12 Jan 2014 20:18:50 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1166</guid>
		<description></description>
		<content:encoded><![CDATA[Some of the best parts of Ruby that I most like

<iframe src="//slid.es/maxnunes/the-reasons-why-i-like-ruby/embed" height="420" width="576" allowfullscreen="" frameborder="0" scrolling="no"></iframe>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1166</wp:post_id>
		<wp:post_date>2014-01-12 20:18:50</wp:post_date>
		<wp:post_date_gmt>2014-01-12 20:18:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-reasons-why-i-like-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="presentation"><![CDATA[presentation]]></category>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="ruby-2"><![CDATA[ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[The reasons why I like Ruby]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[Some of the best parts of Ruby that I most like]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Error - npm doesn&#039;t install packages with GitHub dependencies</title>
		<link>http://blog.maxcnunes.net/2014/03/18/error-npm-doesnt-install-packages-with-github-dependencies/</link>
		<pubDate>Tue, 18 Mar 2014 11:12:36 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1173</guid>
		<description></description>
		<content:encoded><![CDATA[To set in your node project a dependency from github you just need to include the <strong>&lt;username&gt;/&lt;repository&gt;</strong> on package.json:

[gist id="9618061" file="package.json"]

If you are getting the error below then probably you don't have git installed in your environment. Install that and should fix this problem.

[gist id="9618061" file="error.sh"]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1173</wp:post_id>
		<wp:post_date>2014-03-18 11:12:36</wp:post_date>
		<wp:post_date_gmt>2014-03-18 11:12:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>error-npm-doesnt-install-packages-with-github-dependencies</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="error"><![CDATA[error]]></category>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<category domain="post_tag" nicename="git-2"><![CDATA[git]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="npm"><![CDATA[npm]]></category>
		<category domain="post_tag" nicename="npm"><![CDATA[npm]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[Error - npm doesn't install packages with GitHub dependencies]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[npm ERR! notarget No compatible version found]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Solve graphics issues with NVIDIA NVS 4200m - Dell Latitude E6520</title>
		<link>http://blog.maxcnunes.net/2014/03/20/solve-graphics-issues-with-nvidia-nvs-4200m-dell-latitude-e6520/</link>
		<pubDate>Thu, 20 Mar 2014 12:37:10 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1177</guid>
		<description></description>
		<content:encoded><![CDATA[After spend an whole day trying to install the driver for my NVIDIA NVS 4200m I figured out I just had to disable the Optimus support in the BIOS.

[caption id="" align="alignnone" width="640"]<img alt="" src="http://i.imgur.com/Qd8PD.jpg" width="640" height="383" /> image posted on http://ubuntuforums.org/showthread.php?t=1726575 by ethomp[/caption]

Just it will allow the remote monitors work pretty well. Also with this change will appears many options of nvidia drivers on Driver Manager (Linux Mint), then you can get the recommended one.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1177</wp:post_id>
		<wp:post_date>2014-03-20 12:37:10</wp:post_date>
		<wp:post_date_gmt>2014-03-20 12:37:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>solve-graphics-issues-with-nvidia-nvs-4200m-dell-latitude-e6520</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="erro"><![CDATA[Erro]]></category>
		<category domain="post_tag" nicename="error"><![CDATA[error]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="nvidia"><![CDATA[nvidia]]></category>
		<category domain="post_tag" nicename="nvs-4200"><![CDATA[nvs 4200]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[Solve graphics issues with NVIDIA NVS 4200m - Dell Latitude E6520]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[How to solve on Linux graphics issues with NVIDIA NVS 4200m - Dell Latitude E6520.]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Docker Build Error</title>
		<link>http://blog.maxcnunes.net/2014/04/03/docker-build-error/</link>
		<pubDate>Thu, 03 Apr 2014 15:37:52 +0000</pubDate>
		<dc:creator><![CDATA[maxcnunes]]></dc:creator>
		<guid isPermaLink="false">http://blog.maxcnunes.net/?p=1180</guid>
		<description></description>
		<content:encoded><![CDATA[I was playing around Docker this week using this Dockerfile to build my container:

[gist id="9956342" file="Dockerfile"]

But during the build I was getting this error message:

[gist id="9956342" file="docker_build_error.sh"]

I was using a Linux Mint 16 and after some research to solve the problem I figured out was missing install the <a href="https://linuxcontainers.org/">LXC</a>.
<pre class="brush: shell">sudo apt-get install lxc</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1180</wp:post_id>
		<wp:post_date>2014-04-03 15:37:52</wp:post_date>
		<wp:post_date_gmt>2014-04-03 15:37:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>docker-build-error</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="dockerfile"><![CDATA[Dockerfile]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_page_title</wp:meta_key>
			<wp:meta_value><![CDATA[Docker Build Error]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_headspace_description</wp:meta_key>
			<wp:meta_value><![CDATA[Fix docker error: no such file or directory - The command [] returned a non-zero code: 1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
